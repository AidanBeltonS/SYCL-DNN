/*
 * Copyright Codeplay Software Ltd.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use these files except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

// DO NOT MODIFY BY HAND
// This file was automatically generated by generate_reduce_tests.py.
// Results calculated using Tensorflow v2.8.0.

#include <gtest/gtest.h>
#include <vector>

#include "sycldnn/reduce/operators.h"
#include "test/reduce/fixture.h"
#include "test/types/cartesian_product.h"
#include "test/types/kernel_data_types.h"
#include "test/types/test_backend_types.h"
#include "test/types/to_gtest_types.h"

using DataTypeList = sycldnn::types::KernelDataTypes;
using Backends = sycldnn::types::AllBackendTypes;

using TypeBackendPairs =
    sycldnn::types::CartesianProduct<DataTypeList, Backends>::type;

using GTestTypePair = sycldnn::types::ToGTestTypes<TypeBackendPairs>::type;

template <typename Pair>
using ReduceAdd = ReduceFixture<Pair, sycldnn::reduce::Add>;
TYPED_TEST_SUITE(ReduceAdd, GTestTypePair);
TYPED_TEST(ReduceAdd, Batch1Outer1Inner1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {1.};
  const int batches = 1;
  const int outer = 1;
  const int inner = 1;
  const DataType max_input_val = 2048.0;
  this->run(exp_out, batches, outer, inner, max_input_val);
}
TYPED_TEST(ReduceAdd, Batch1Outer1Inner6) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {1., 2., 3., 4., 5., 6.};
  const int batches = 1;
  const int outer = 1;
  const int inner = 6;
  const DataType max_input_val = 2048.0;
  this->run(exp_out, batches, outer, inner, max_input_val);
}
TYPED_TEST(ReduceAdd, Batch1Outer1Inner8) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {1., 2., 3., 4., 5., 6., 7., 8.};
  const int batches = 1;
  const int outer = 1;
  const int inner = 8;
  const DataType max_input_val = 2048.0;
  this->run(exp_out, batches, outer, inner, max_input_val);
}
TYPED_TEST(ReduceAdd, Batch1Outer1Inner33) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  2.,  3.,  4.,  5.,  6.,  7.,  8.,  9.,  10., 11.,
      12., 13., 14., 15., 16., 17., 18., 19., 20., 21., 22.,
      23., 24., 25., 26., 27., 28., 29., 30., 31., 32., 33.};
  const int batches = 1;
  const int outer = 1;
  const int inner = 33;
  const DataType max_input_val = 2048.0;
  this->run(exp_out, batches, outer, inner, max_input_val);
}
TYPED_TEST(ReduceAdd, Batch1Outer6Inner1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {21.};
  const int batches = 1;
  const int outer = 6;
  const int inner = 1;
  const DataType max_input_val = 2048.0;
  this->run(exp_out, batches, outer, inner, max_input_val);
}
TYPED_TEST(ReduceAdd, Batch1Outer6Inner6) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {96., 102., 108., 114., 120., 126.};
  const int batches = 1;
  const int outer = 6;
  const int inner = 6;
  const DataType max_input_val = 2048.0;
  this->run(exp_out, batches, outer, inner, max_input_val);
}
TYPED_TEST(ReduceAdd, Batch1Outer6Inner8) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {126., 132., 138., 144.,
                                         150., 156., 162., 168.};
  const int batches = 1;
  const int outer = 6;
  const int inner = 8;
  const DataType max_input_val = 2048.0;
  this->run(exp_out, batches, outer, inner, max_input_val);
}
TYPED_TEST(ReduceAdd, Batch1Outer6Inner33) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      501., 507., 513., 519., 525., 531., 537., 543., 549., 555., 561.,
      567., 573., 579., 585., 591., 597., 603., 609., 615., 621., 627.,
      633., 639., 645., 651., 657., 663., 669., 675., 681., 687., 693.};
  const int batches = 1;
  const int outer = 6;
  const int inner = 33;
  const DataType max_input_val = 2048.0;
  this->run(exp_out, batches, outer, inner, max_input_val);
}
TYPED_TEST(ReduceAdd, Batch1Outer8Inner1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {36.};
  const int batches = 1;
  const int outer = 8;
  const int inner = 1;
  const DataType max_input_val = 2048.0;
  this->run(exp_out, batches, outer, inner, max_input_val);
}
TYPED_TEST(ReduceAdd, Batch1Outer8Inner6) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {176., 184., 192., 200., 208., 216.};
  const int batches = 1;
  const int outer = 8;
  const int inner = 6;
  const DataType max_input_val = 2048.0;
  this->run(exp_out, batches, outer, inner, max_input_val);
}
TYPED_TEST(ReduceAdd, Batch1Outer8Inner8) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {232., 240., 248., 256.,
                                         264., 272., 280., 288.};
  const int batches = 1;
  const int outer = 8;
  const int inner = 8;
  const DataType max_input_val = 2048.0;
  this->run(exp_out, batches, outer, inner, max_input_val);
}
TYPED_TEST(ReduceAdd, Batch1Outer8Inner33) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      932.,  940.,  948.,  956.,  964.,  972.,  980.,  988.,  996.,
      1004., 1012., 1020., 1028., 1036., 1044., 1052., 1060., 1068.,
      1076., 1084., 1092., 1100., 1108., 1116., 1124., 1132., 1140.,
      1148., 1156., 1164., 1172., 1180., 1188.};
  const int batches = 1;
  const int outer = 8;
  const int inner = 33;
  const DataType max_input_val = 2048.0;
  this->run(exp_out, batches, outer, inner, max_input_val);
}
TYPED_TEST(ReduceAdd, Batch1Outer33Inner1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {561.};
  const int batches = 1;
  const int outer = 33;
  const int inner = 1;
  const DataType max_input_val = 2048.0;
  this->run(exp_out, batches, outer, inner, max_input_val);
}
TYPED_TEST(ReduceAdd, Batch1Outer33Inner6) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {3201., 3234., 3267.,
                                         3300., 3333., 3366.};
  const int batches = 1;
  const int outer = 33;
  const int inner = 6;
  const DataType max_input_val = 2048.0;
  this->run(exp_out, batches, outer, inner, max_input_val);
}
TYPED_TEST(ReduceAdd, Batch1Outer33Inner8) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {4257., 4290., 4323., 4356.,
                                         4389., 4422., 4455., 4488.};
  const int batches = 1;
  const int outer = 33;
  const int inner = 8;
  const DataType max_input_val = 2048.0;
  this->run(exp_out, batches, outer, inner, max_input_val);
}
TYPED_TEST(ReduceAdd, Batch1Outer33Inner33) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      17457., 17490., 17523., 17556., 17589., 17622., 17655., 17688., 17721.,
      17754., 17787., 17820., 17853., 17886., 17919., 17952., 17985., 18018.,
      18051., 18084., 18117., 18150., 18183., 18216., 18249., 18282., 18315.,
      18348., 18381., 18414., 18447., 18480., 18513.};
  const int batches = 1;
  const int outer = 33;
  const int inner = 33;
  const DataType max_input_val = 2048.0;
  this->run(exp_out, batches, outer, inner, max_input_val);
}
TYPED_TEST(ReduceAdd, Batch3Outer1Inner1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {1., 2., 3.};
  const int batches = 3;
  const int outer = 1;
  const int inner = 1;
  const DataType max_input_val = 2048.0;
  this->run(exp_out, batches, outer, inner, max_input_val);
}
TYPED_TEST(ReduceAdd, Batch3Outer1Inner6) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {1.,  2.,  3.,  4.,  5.,  6.,
                                         7.,  8.,  9.,  10., 11., 12.,
                                         13., 14., 15., 16., 17., 18.};
  const int batches = 3;
  const int outer = 1;
  const int inner = 6;
  const DataType max_input_val = 2048.0;
  this->run(exp_out, batches, outer, inner, max_input_val);
}
TYPED_TEST(ReduceAdd, Batch3Outer1Inner8) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  2.,  3.,  4.,  5.,  6.,  7.,  8.,  9.,  10., 11., 12.,
      13., 14., 15., 16., 17., 18., 19., 20., 21., 22., 23., 24.};
  const int batches = 3;
  const int outer = 1;
  const int inner = 8;
  const DataType max_input_val = 2048.0;
  this->run(exp_out, batches, outer, inner, max_input_val);
}
TYPED_TEST(ReduceAdd, Batch3Outer1Inner33) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  2.,  3.,  4.,  5.,  6.,  7.,  8.,  9.,  10., 11., 12., 13., 14., 15.,
      16., 17., 18., 19., 20., 21., 22., 23., 24., 25., 26., 27., 28., 29., 30.,
      31., 32., 33., 34., 35., 36., 37., 38., 39., 40., 41., 42., 43., 44., 45.,
      46., 47., 48., 49., 50., 51., 52., 53., 54., 55., 56., 57., 58., 59., 60.,
      61., 62., 63., 64., 65., 66., 67., 68., 69., 70., 71., 72., 73., 74., 75.,
      76., 77., 78., 79., 80., 81., 82., 83., 84., 85., 86., 87., 88., 89., 90.,
      91., 92., 93., 94., 95., 96., 97., 98., 99.};
  const int batches = 3;
  const int outer = 1;
  const int inner = 33;
  const DataType max_input_val = 2048.0;
  this->run(exp_out, batches, outer, inner, max_input_val);
}
TYPED_TEST(ReduceAdd, Batch3Outer6Inner1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {21., 57., 93.};
  const int batches = 3;
  const int outer = 6;
  const int inner = 1;
  const DataType max_input_val = 2048.0;
  this->run(exp_out, batches, outer, inner, max_input_val);
}
TYPED_TEST(ReduceAdd, Batch3Outer6Inner6) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {96.,  102., 108., 114., 120., 126.,
                                         312., 318., 324., 330., 336., 342.,
                                         528., 534., 540., 546., 552., 558.};
  const int batches = 3;
  const int outer = 6;
  const int inner = 6;
  const DataType max_input_val = 2048.0;
  this->run(exp_out, batches, outer, inner, max_input_val);
}
TYPED_TEST(ReduceAdd, Batch3Outer6Inner8) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      126., 132., 138., 144., 150., 156., 162., 168., 414., 420., 426., 432.,
      438., 444., 450., 456., 702., 708., 714., 720., 726., 732., 738., 744.};
  const int batches = 3;
  const int outer = 6;
  const int inner = 8;
  const DataType max_input_val = 2048.0;
  this->run(exp_out, batches, outer, inner, max_input_val);
}
TYPED_TEST(ReduceAdd, Batch3Outer6Inner33) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      501.,  507.,  513.,  519.,  525.,  531.,  537.,  543.,  549.,  555.,
      561.,  567.,  573.,  579.,  585.,  591.,  597.,  603.,  609.,  615.,
      621.,  627.,  633.,  639.,  645.,  651.,  657.,  663.,  669.,  675.,
      681.,  687.,  693.,  1689., 1695., 1701., 1707., 1713., 1719., 1725.,
      1731., 1737., 1743., 1749., 1755., 1761., 1767., 1773., 1779., 1785.,
      1791., 1797., 1803., 1809., 1815., 1821., 1827., 1833., 1839., 1845.,
      1851., 1857., 1863., 1869., 1875., 1881., 2877., 2883., 2889., 2895.,
      2901., 2907., 2913., 2919., 2925., 2931., 2937., 2943., 2949., 2955.,
      2961., 2967., 2973., 2979., 2985., 2991., 2997., 3003., 3009., 3015.,
      3021., 3027., 3033., 3039., 3045., 3051., 3057., 3063., 3069.};
  const int batches = 3;
  const int outer = 6;
  const int inner = 33;
  const DataType max_input_val = 2048.0;
  this->run(exp_out, batches, outer, inner, max_input_val);
}
TYPED_TEST(ReduceAdd, Batch3Outer8Inner1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {36., 100., 164.};
  const int batches = 3;
  const int outer = 8;
  const int inner = 1;
  const DataType max_input_val = 2048.0;
  this->run(exp_out, batches, outer, inner, max_input_val);
}
TYPED_TEST(ReduceAdd, Batch3Outer8Inner6) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {176., 184., 192., 200., 208., 216.,
                                         560., 568., 576., 584., 592., 600.,
                                         944., 952., 960., 968., 976., 984.};
  const int batches = 3;
  const int outer = 8;
  const int inner = 6;
  const DataType max_input_val = 2048.0;
  this->run(exp_out, batches, outer, inner, max_input_val);
}
TYPED_TEST(ReduceAdd, Batch3Outer8Inner8) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      232.,  240.,  248.,  256.,  264.,  272.,  280.,  288.,
      744.,  752.,  760.,  768.,  776.,  784.,  792.,  800.,
      1256., 1264., 1272., 1280., 1288., 1296., 1304., 1312.};
  const int batches = 3;
  const int outer = 8;
  const int inner = 8;
  const DataType max_input_val = 2048.0;
  this->run(exp_out, batches, outer, inner, max_input_val);
}
TYPED_TEST(ReduceAdd, Batch3Outer8Inner33) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      932.,  940.,  948.,  956.,  964.,  972.,  980.,  988.,  996.,  1004.,
      1012., 1020., 1028., 1036., 1044., 1052., 1060., 1068., 1076., 1084.,
      1092., 1100., 1108., 1116., 1124., 1132., 1140., 1148., 1156., 1164.,
      1172., 1180., 1188., 3044., 3052., 3060., 3068., 3076., 3084., 3092.,
      3100., 3108., 3116., 3124., 3132., 3140., 3148., 3156., 3164., 3172.,
      3180., 3188., 3196., 3204., 3212., 3220., 3228., 3236., 3244., 3252.,
      3260., 3268., 3276., 3284., 3292., 3300., 5156., 5164., 5172., 5180.,
      5188., 5196., 5204., 5212., 5220., 5228., 5236., 5244., 5252., 5260.,
      5268., 5276., 5284., 5292., 5300., 5308., 5316., 5324., 5332., 5340.,
      5348., 5356., 5364., 5372., 5380., 5388., 5396., 5404., 5412.};
  const int batches = 3;
  const int outer = 8;
  const int inner = 33;
  const DataType max_input_val = 2048.0;
  this->run(exp_out, batches, outer, inner, max_input_val);
}
TYPED_TEST(ReduceAdd, Batch3Outer33Inner1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {561., 1650., 2739.};
  const int batches = 3;
  const int outer = 33;
  const int inner = 1;
  const DataType max_input_val = 2048.0;
  this->run(exp_out, batches, outer, inner, max_input_val);
}
TYPED_TEST(ReduceAdd, Batch3Outer33Inner6) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      3201., 3234., 3267., 3300.,  3333.,  3366.,  9735.,  9768.,  9801.,
      9834., 9867., 9900., 16269., 16302., 16335., 16368., 16401., 16434.};
  const int batches = 3;
  const int outer = 33;
  const int inner = 6;
  const DataType max_input_val = 2048.0;
  this->run(exp_out, batches, outer, inner, max_input_val);
}
TYPED_TEST(ReduceAdd, Batch3Outer33Inner8) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      4257.,  4290.,  4323.,  4356.,  4389.,  4422.,  4455.,  4488.,
      12969., 13002., 13035., 13068., 13101., 13134., 13167., 13200.,
      21681., 21714., 21747., 21780., 21813., 21846., 21879., 21912.};
  const int batches = 3;
  const int outer = 33;
  const int inner = 8;
  const DataType max_input_val = 2048.0;
  this->run(exp_out, batches, outer, inner, max_input_val);
}
TYPED_TEST(ReduceAdd, Batch3Outer33Inner33) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      17457., 17490., 17523., 17556., 17589., 17622., 17655., 17688., 17721.,
      17754., 17787., 17820., 17853., 17886., 17919., 17952., 17985., 18018.,
      18051., 18084., 18117., 18150., 18183., 18216., 18249., 18282., 18315.,
      18348., 18381., 18414., 18447., 18480., 18513., 47250., 47283., 45268.,
      45301., 45334., 45367., 45400., 45433., 45466., 45499., 45532., 45565.,
      45598., 45631., 45664., 45697., 45730., 45763., 45796., 45829., 45862.,
      45895., 45928., 45961., 45994., 46027., 46060., 46093., 46126., 46159.,
      46192., 46225., 46258., 21747., 21780., 21813., 21846., 21879., 21912.,
      21945., 21978., 22011., 22044., 22077., 22110., 22143., 22176., 22209.,
      22242., 22275., 22308., 22341., 22374., 22407., 22440., 22473., 22506.,
      22539., 22572., 22605., 22638., 22671., 22704., 22737., 22770., 22803.};
  const int batches = 3;
  const int outer = 33;
  const int inner = 33;
  const DataType max_input_val = 2048.0;
  this->run(exp_out, batches, outer, inner, max_input_val);
}