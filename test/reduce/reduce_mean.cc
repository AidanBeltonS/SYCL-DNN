/*
 * Copyright Codeplay Software Ltd.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use these files except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

// DO NOT MODIFY BY HAND
// This file was automatically generated by generate_reduce_tests.py.
// Results calculated using Tensorflow v2.8.0.

#include <gtest/gtest.h>
#include <vector>

#include "sycldnn/reduce/operators.h"
#include "test/reduce/fixture.h"
#include "test/types/cartesian_product.h"
#include "test/types/kernel_data_types.h"
#include "test/types/test_backend_types.h"
#include "test/types/to_gtest_types.h"

using DataTypeList = sycldnn::types::KernelDataTypes;
using Backends = sycldnn::types::AllBackendTypes;

using TypeBackendPairs =
    sycldnn::types::CartesianProduct<DataTypeList, Backends>::type;

using GTestTypePair = sycldnn::types::ToGTestTypes<TypeBackendPairs>::type;

template <typename Pair>
using ReduceMean = ReduceFixture<Pair, sycldnn::reduce::Mean>;
TYPED_TEST_SUITE(ReduceMean, GTestTypePair);
TYPED_TEST(ReduceMean, Batch1Outer1Inner1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {1.};
  const int batches = 1;
  const int outer = 1;
  const int inner = 1;
  const DataType max_input_val = 2048.0;
  this->run(exp_out, batches, outer, inner, max_input_val);
}
TYPED_TEST(ReduceMean, Batch1Outer1Inner6) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {1., 2., 3., 4., 5., 6.};
  const int batches = 1;
  const int outer = 1;
  const int inner = 6;
  const DataType max_input_val = 2048.0;
  this->run(exp_out, batches, outer, inner, max_input_val);
}
TYPED_TEST(ReduceMean, Batch1Outer1Inner8) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {1., 2., 3., 4., 5., 6., 7., 8.};
  const int batches = 1;
  const int outer = 1;
  const int inner = 8;
  const DataType max_input_val = 2048.0;
  this->run(exp_out, batches, outer, inner, max_input_val);
}
TYPED_TEST(ReduceMean, Batch1Outer1Inner33) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  2.,  3.,  4.,  5.,  6.,  7.,  8.,  9.,  10., 11.,
      12., 13., 14., 15., 16., 17., 18., 19., 20., 21., 22.,
      23., 24., 25., 26., 27., 28., 29., 30., 31., 32., 33.};
  const int batches = 1;
  const int outer = 1;
  const int inner = 33;
  const DataType max_input_val = 2048.0;
  this->run(exp_out, batches, outer, inner, max_input_val);
}
TYPED_TEST(ReduceMean, Batch1Outer6Inner1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {3.5};
  const int batches = 1;
  const int outer = 6;
  const int inner = 1;
  const DataType max_input_val = 2048.0;
  this->run(exp_out, batches, outer, inner, max_input_val);
}
TYPED_TEST(ReduceMean, Batch1Outer6Inner6) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {16., 17., 18., 19., 20., 21.};
  const int batches = 1;
  const int outer = 6;
  const int inner = 6;
  const DataType max_input_val = 2048.0;
  this->run(exp_out, batches, outer, inner, max_input_val);
}
TYPED_TEST(ReduceMean, Batch1Outer6Inner8) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {21., 22., 23., 24.,
                                         25., 26., 27., 28.};
  const int batches = 1;
  const int outer = 6;
  const int inner = 8;
  const DataType max_input_val = 2048.0;
  this->run(exp_out, batches, outer, inner, max_input_val);
}
TYPED_TEST(ReduceMean, Batch1Outer6Inner33) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      83.5,  84.5,  85.5,  86.5,  87.5,  88.5,  89.5,  90.5,  91.5,
      92.5,  93.5,  94.5,  95.5,  96.5,  97.5,  98.5,  99.5,  100.5,
      101.5, 102.5, 103.5, 104.5, 105.5, 106.5, 107.5, 108.5, 109.5,
      110.5, 111.5, 112.5, 113.5, 114.5, 115.5};
  const int batches = 1;
  const int outer = 6;
  const int inner = 33;
  const DataType max_input_val = 2048.0;
  this->run(exp_out, batches, outer, inner, max_input_val);
}
TYPED_TEST(ReduceMean, Batch1Outer8Inner1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {4.5};
  const int batches = 1;
  const int outer = 8;
  const int inner = 1;
  const DataType max_input_val = 2048.0;
  this->run(exp_out, batches, outer, inner, max_input_val);
}
TYPED_TEST(ReduceMean, Batch1Outer8Inner6) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {22., 23., 24., 25., 26., 27.};
  const int batches = 1;
  const int outer = 8;
  const int inner = 6;
  const DataType max_input_val = 2048.0;
  this->run(exp_out, batches, outer, inner, max_input_val);
}
TYPED_TEST(ReduceMean, Batch1Outer8Inner8) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {29., 30., 31., 32.,
                                         33., 34., 35., 36.};
  const int batches = 1;
  const int outer = 8;
  const int inner = 8;
  const DataType max_input_val = 2048.0;
  this->run(exp_out, batches, outer, inner, max_input_val);
}
TYPED_TEST(ReduceMean, Batch1Outer8Inner33) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      116.5, 117.5, 118.5, 119.5, 120.5, 121.5, 122.5, 123.5, 124.5,
      125.5, 126.5, 127.5, 128.5, 129.5, 130.5, 131.5, 132.5, 133.5,
      134.5, 135.5, 136.5, 137.5, 138.5, 139.5, 140.5, 141.5, 142.5,
      143.5, 144.5, 145.5, 146.5, 147.5, 148.5};
  const int batches = 1;
  const int outer = 8;
  const int inner = 33;
  const DataType max_input_val = 2048.0;
  this->run(exp_out, batches, outer, inner, max_input_val);
}
TYPED_TEST(ReduceMean, Batch1Outer33Inner1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {17.};
  const int batches = 1;
  const int outer = 33;
  const int inner = 1;
  const DataType max_input_val = 2048.0;
  this->run(exp_out, batches, outer, inner, max_input_val);
}
TYPED_TEST(ReduceMean, Batch1Outer33Inner6) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {97., 98., 99., 100., 101., 102.};
  const int batches = 1;
  const int outer = 33;
  const int inner = 6;
  const DataType max_input_val = 2048.0;
  this->run(exp_out, batches, outer, inner, max_input_val);
}
TYPED_TEST(ReduceMean, Batch1Outer33Inner8) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {129., 130., 131., 132.,
                                         133., 134., 135., 136.};
  const int batches = 1;
  const int outer = 33;
  const int inner = 8;
  const DataType max_input_val = 2048.0;
  this->run(exp_out, batches, outer, inner, max_input_val);
}
TYPED_TEST(ReduceMean, Batch1Outer33Inner33) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      529., 530., 531., 532., 533., 534., 535., 536., 537., 538., 539.,
      540., 541., 542., 543., 544., 545., 546., 547., 548., 549., 550.,
      551., 552., 553., 554., 555., 556., 557., 558., 559., 560., 561.};
  const int batches = 1;
  const int outer = 33;
  const int inner = 33;
  const DataType max_input_val = 2048.0;
  this->run(exp_out, batches, outer, inner, max_input_val);
}
TYPED_TEST(ReduceMean, Batch3Outer1Inner1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {1., 2., 3.};
  const int batches = 3;
  const int outer = 1;
  const int inner = 1;
  const DataType max_input_val = 2048.0;
  this->run(exp_out, batches, outer, inner, max_input_val);
}
TYPED_TEST(ReduceMean, Batch3Outer1Inner6) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {1.,  2.,  3.,  4.,  5.,  6.,
                                         7.,  8.,  9.,  10., 11., 12.,
                                         13., 14., 15., 16., 17., 18.};
  const int batches = 3;
  const int outer = 1;
  const int inner = 6;
  const DataType max_input_val = 2048.0;
  this->run(exp_out, batches, outer, inner, max_input_val);
}
TYPED_TEST(ReduceMean, Batch3Outer1Inner8) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  2.,  3.,  4.,  5.,  6.,  7.,  8.,  9.,  10., 11., 12.,
      13., 14., 15., 16., 17., 18., 19., 20., 21., 22., 23., 24.};
  const int batches = 3;
  const int outer = 1;
  const int inner = 8;
  const DataType max_input_val = 2048.0;
  this->run(exp_out, batches, outer, inner, max_input_val);
}
TYPED_TEST(ReduceMean, Batch3Outer1Inner33) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      1.,  2.,  3.,  4.,  5.,  6.,  7.,  8.,  9.,  10., 11., 12., 13., 14., 15.,
      16., 17., 18., 19., 20., 21., 22., 23., 24., 25., 26., 27., 28., 29., 30.,
      31., 32., 33., 34., 35., 36., 37., 38., 39., 40., 41., 42., 43., 44., 45.,
      46., 47., 48., 49., 50., 51., 52., 53., 54., 55., 56., 57., 58., 59., 60.,
      61., 62., 63., 64., 65., 66., 67., 68., 69., 70., 71., 72., 73., 74., 75.,
      76., 77., 78., 79., 80., 81., 82., 83., 84., 85., 86., 87., 88., 89., 90.,
      91., 92., 93., 94., 95., 96., 97., 98., 99.};
  const int batches = 3;
  const int outer = 1;
  const int inner = 33;
  const DataType max_input_val = 2048.0;
  this->run(exp_out, batches, outer, inner, max_input_val);
}
TYPED_TEST(ReduceMean, Batch3Outer6Inner1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {3.5, 9.5, 15.5};
  const int batches = 3;
  const int outer = 6;
  const int inner = 1;
  const DataType max_input_val = 2048.0;
  this->run(exp_out, batches, outer, inner, max_input_val);
}
TYPED_TEST(ReduceMean, Batch3Outer6Inner6) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {16., 17., 18., 19., 20., 21.,
                                         52., 53., 54., 55., 56., 57.,
                                         88., 89., 90., 91., 92., 93.};
  const int batches = 3;
  const int outer = 6;
  const int inner = 6;
  const DataType max_input_val = 2048.0;
  this->run(exp_out, batches, outer, inner, max_input_val);
}
TYPED_TEST(ReduceMean, Batch3Outer6Inner8) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      21., 22., 23., 24., 25.,  26.,  27.,  28.,  69.,  70.,  71.,  72.,
      73., 74., 75., 76., 117., 118., 119., 120., 121., 122., 123., 124.};
  const int batches = 3;
  const int outer = 6;
  const int inner = 8;
  const DataType max_input_val = 2048.0;
  this->run(exp_out, batches, outer, inner, max_input_val);
}
TYPED_TEST(ReduceMean, Batch3Outer6Inner33) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      83.5,  84.5,  85.5,  86.5,  87.5,  88.5,  89.5,  90.5,  91.5,  92.5,
      93.5,  94.5,  95.5,  96.5,  97.5,  98.5,  99.5,  100.5, 101.5, 102.5,
      103.5, 104.5, 105.5, 106.5, 107.5, 108.5, 109.5, 110.5, 111.5, 112.5,
      113.5, 114.5, 115.5, 281.5, 282.5, 283.5, 284.5, 285.5, 286.5, 287.5,
      288.5, 289.5, 290.5, 291.5, 292.5, 293.5, 294.5, 295.5, 296.5, 297.5,
      298.5, 299.5, 300.5, 301.5, 302.5, 303.5, 304.5, 305.5, 306.5, 307.5,
      308.5, 309.5, 310.5, 311.5, 312.5, 313.5, 479.5, 480.5, 481.5, 482.5,
      483.5, 484.5, 485.5, 486.5, 487.5, 488.5, 489.5, 490.5, 491.5, 492.5,
      493.5, 494.5, 495.5, 496.5, 497.5, 498.5, 499.5, 500.5, 501.5, 502.5,
      503.5, 504.5, 505.5, 506.5, 507.5, 508.5, 509.5, 510.5, 511.5};
  const int batches = 3;
  const int outer = 6;
  const int inner = 33;
  const DataType max_input_val = 2048.0;
  this->run(exp_out, batches, outer, inner, max_input_val);
}
TYPED_TEST(ReduceMean, Batch3Outer8Inner1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {4.5, 12.5, 20.5};
  const int batches = 3;
  const int outer = 8;
  const int inner = 1;
  const DataType max_input_val = 2048.0;
  this->run(exp_out, batches, outer, inner, max_input_val);
}
TYPED_TEST(ReduceMean, Batch3Outer8Inner6) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {22.,  23.,  24.,  25.,  26.,  27.,
                                         70.,  71.,  72.,  73.,  74.,  75.,
                                         118., 119., 120., 121., 122., 123.};
  const int batches = 3;
  const int outer = 8;
  const int inner = 6;
  const DataType max_input_val = 2048.0;
  this->run(exp_out, batches, outer, inner, max_input_val);
}
TYPED_TEST(ReduceMean, Batch3Outer8Inner8) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      29., 30., 31., 32.,  33.,  34.,  35.,  36.,  93.,  94.,  95.,  96.,
      97., 98., 99., 100., 157., 158., 159., 160., 161., 162., 163., 164.};
  const int batches = 3;
  const int outer = 8;
  const int inner = 8;
  const DataType max_input_val = 2048.0;
  this->run(exp_out, batches, outer, inner, max_input_val);
}
TYPED_TEST(ReduceMean, Batch3Outer8Inner33) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      116.5, 117.5, 118.5, 119.5, 120.5, 121.5, 122.5, 123.5, 124.5, 125.5,
      126.5, 127.5, 128.5, 129.5, 130.5, 131.5, 132.5, 133.5, 134.5, 135.5,
      136.5, 137.5, 138.5, 139.5, 140.5, 141.5, 142.5, 143.5, 144.5, 145.5,
      146.5, 147.5, 148.5, 380.5, 381.5, 382.5, 383.5, 384.5, 385.5, 386.5,
      387.5, 388.5, 389.5, 390.5, 391.5, 392.5, 393.5, 394.5, 395.5, 396.5,
      397.5, 398.5, 399.5, 400.5, 401.5, 402.5, 403.5, 404.5, 405.5, 406.5,
      407.5, 408.5, 409.5, 410.5, 411.5, 412.5, 644.5, 645.5, 646.5, 647.5,
      648.5, 649.5, 650.5, 651.5, 652.5, 653.5, 654.5, 655.5, 656.5, 657.5,
      658.5, 659.5, 660.5, 661.5, 662.5, 663.5, 664.5, 665.5, 666.5, 667.5,
      668.5, 669.5, 670.5, 671.5, 672.5, 673.5, 674.5, 675.5, 676.5};
  const int batches = 3;
  const int outer = 8;
  const int inner = 33;
  const DataType max_input_val = 2048.0;
  this->run(exp_out, batches, outer, inner, max_input_val);
}
TYPED_TEST(ReduceMean, Batch3Outer33Inner1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {17., 50., 83.};
  const int batches = 3;
  const int outer = 33;
  const int inner = 1;
  const DataType max_input_val = 2048.0;
  this->run(exp_out, batches, outer, inner, max_input_val);
}
TYPED_TEST(ReduceMean, Batch3Outer33Inner6) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {97.,  98.,  99.,  100., 101., 102.,
                                         295., 296., 297., 298., 299., 300.,
                                         493., 494., 495., 496., 497., 498.};
  const int batches = 3;
  const int outer = 33;
  const int inner = 6;
  const DataType max_input_val = 2048.0;
  this->run(exp_out, batches, outer, inner, max_input_val);
}
TYPED_TEST(ReduceMean, Batch3Outer33Inner8) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      129., 130., 131., 132., 133., 134., 135., 136., 393., 394., 395., 396.,
      397., 398., 399., 400., 657., 658., 659., 660., 661., 662., 663., 664.};
  const int batches = 3;
  const int outer = 33;
  const int inner = 8;
  const DataType max_input_val = 2048.0;
  this->run(exp_out, batches, outer, inner, max_input_val);
}
TYPED_TEST(ReduceMean, Batch3Outer33Inner33) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {529.,
                                         530.,
                                         531.,
                                         532.,
                                         533.,
                                         534.,
                                         535.,
                                         536.,
                                         537.,
                                         538.,
                                         539.,
                                         540.,
                                         541.,
                                         542.,
                                         543.,
                                         544.,
                                         545.,
                                         546.,
                                         547.,
                                         548.,
                                         549.,
                                         550.,
                                         551.,
                                         552.,
                                         553.,
                                         554.,
                                         555.,
                                         556.,
                                         557.,
                                         558.,
                                         559.,
                                         560.,
                                         561.,
                                         1431.8181818181818,
                                         1432.8181818181818,
                                         1371.7575757575758,
                                         1372.7575757575758,
                                         1373.7575757575758,
                                         1374.7575757575758,
                                         1375.7575757575758,
                                         1376.7575757575758,
                                         1377.7575757575758,
                                         1378.7575757575758,
                                         1379.7575757575758,
                                         1380.7575757575758,
                                         1381.7575757575758,
                                         1382.7575757575758,
                                         1383.7575757575758,
                                         1384.7575757575758,
                                         1385.7575757575758,
                                         1386.7575757575758,
                                         1387.7575757575758,
                                         1388.7575757575758,
                                         1389.7575757575758,
                                         1390.7575757575758,
                                         1391.7575757575758,
                                         1392.7575757575758,
                                         1393.7575757575758,
                                         1394.7575757575758,
                                         1395.7575757575758,
                                         1396.7575757575758,
                                         1397.7575757575758,
                                         1398.7575757575758,
                                         1399.7575757575758,
                                         1400.7575757575758,
                                         1401.7575757575758,
                                         659.,
                                         660.,
                                         661.,
                                         662.,
                                         663.,
                                         664.,
                                         665.,
                                         666.,
                                         667.,
                                         668.,
                                         669.,
                                         670.,
                                         671.,
                                         672.,
                                         673.,
                                         674.,
                                         675.,
                                         676.,
                                         677.,
                                         678.,
                                         679.,
                                         680.,
                                         681.,
                                         682.,
                                         683.,
                                         684.,
                                         685.,
                                         686.,
                                         687.,
                                         688.,
                                         689.,
                                         690.,
                                         691.};
  const int batches = 3;
  const int outer = 33;
  const int inner = 33;
  const DataType max_input_val = 2048.0;
  this->run(exp_out, batches, outer, inner, max_input_val);
}