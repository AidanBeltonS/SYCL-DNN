/*
 * Copyright 2018 Codeplay Software Ltd.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use these files except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

// DO NOT MODIFY BY HAND
// This file was automatically generated by generate_pooling_tests.py.
// Results calculated using Tensorflow v1.8.0.

#include <gtest/gtest.h>

#include "sycldnn/pooling/launch.h"
#include "sycldnn/pooling/operators.h"
#include "sycldnn/pooling/params.h"

#include "test/pooling/pooling_fixture.h"
#include "test/types/kernel_data_types.h"

#include <CL/sycl.hpp>

#include <vector>

using namespace sycldnn;
template <typename DataType>
using AvgWindow3Stride1Grad =
    PoolingFixture<DataType, pooling::Average, pooling::Backpropagate>;
TYPED_TEST_CASE(AvgWindow3Stride1Grad, types::GTestKernelDataTypes);
TYPED_TEST(AvgWindow3Stride1Grad, SAME1x4x4x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      2.0833333333, 3.3611111111,  4.6111111111,  3.6111111111,
      4.6944444444, 7.1944444444,  8.9444444444,  6.8333333333,
      9.6944444444, 14.1944444444, 15.9444444444, 11.8333333333,
      8.1944444444, 11.9166666667, 13.1666666667, 9.7222222222};
  const std::array<int, 4> in_shape = {{1, 4, 4, 1}};
  const auto padding = PaddingMode::SAME;
  const auto params = getPoolingParams<3, 1>(in_shape, padding);
  const DataType max_input_val = 2048.0;
  this->test_pool(exp_out, params, max_input_val);
}
TYPED_TEST(AvgWindow3Stride1Grad, VALID1x4x4x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      0.1111111111, 0.3333333333, 0.3333333333, 0.2222222222,
      0.4444444444, 1.1111111111, 1.1111111111, 0.6666666667,
      0.4444444444, 1.1111111111, 1.1111111111, 0.6666666667,
      0.3333333333, 0.7777777778, 0.7777777778, 0.4444444444};
  const std::array<int, 4> in_shape = {{1, 4, 4, 1}};
  const auto padding = PaddingMode::VALID;
  const auto params = getPoolingParams<3, 1>(in_shape, padding);
  const DataType max_input_val = 2048.0;
  this->test_pool(exp_out, params, max_input_val);
}
TYPED_TEST(AvgWindow3Stride1Grad, SAME1x4x4x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      3.4722222222,  4.1666666667,  5.75,          6.7222222222,  8.25,
      9.2222222222,  6.5277777778,  7.2222222222,  8.4166666667,  9.3888888889,
      13.0277777778, 14.3888888889, 16.5277777778, 17.8888888889, 12.6944444444,
      13.6666666667, 18.4166666667, 19.3888888889, 27.0277777778, 28.3888888889,
      30.5277777778, 31.8888888889, 22.6944444444, 23.6666666667, 15.6944444444,
      16.3888888889, 22.8611111111, 23.8333333333, 25.3611111111, 26.3333333333,
      18.75,         19.4444444444};
  const std::array<int, 4> in_shape = {{1, 4, 4, 2}};
  const auto padding = PaddingMode::SAME;
  const auto params = getPoolingParams<3, 1>(in_shape, padding);
  const DataType max_input_val = 2048.0;
  this->test_pool(exp_out, params, max_input_val);
}
TYPED_TEST(AvgWindow3Stride1Grad, VALID1x4x4x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      0.1111111111, 0.2222222222, 0.4444444444, 0.6666666667, 0.4444444444,
      0.6666666667, 0.3333333333, 0.4444444444, 0.6666666667, 0.8888888889,
      1.7777777778, 2.2222222222, 1.7777777778, 2.2222222222, 1.1111111111,
      1.3333333333, 0.6666666667, 0.8888888889, 1.7777777778, 2.2222222222,
      1.7777777778, 2.2222222222, 1.1111111111, 1.3333333333, 0.5555555556,
      0.6666666667, 1.3333333333, 1.5555555556, 1.3333333333, 1.5555555556,
      0.7777777778, 0.8888888889};
  const std::array<int, 4> in_shape = {{1, 4, 4, 2}};
  const auto padding = PaddingMode::VALID;
  const auto params = getPoolingParams<3, 1>(in_shape, padding);
  const DataType max_input_val = 2048.0;
  this->test_pool(exp_out, params, max_input_val);
}
TYPED_TEST(AvgWindow3Stride1Grad, SAME1x4x4x4) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      6.25,          6.9444444444,  7.6388888889,  8.3333333333,  10.5277777778,
      11.5,          12.4722222222, 13.4444444444, 15.5277777778, 16.5,
      17.4722222222, 18.4444444444, 12.3611111111, 13.0555555556, 13.75,
      14.4444444444, 15.8611111111, 16.8333333333, 17.8055555556, 18.7777777778,
      24.6944444444, 26.0555555556, 27.4166666667, 28.7777777778, 31.6944444444,
      33.0555555556, 34.4166666667, 35.7777777778, 24.4166666667, 25.3888888889,
      26.3611111111, 27.3333333333, 35.8611111111, 36.8333333333, 37.8055555556,
      38.7777777778, 52.6944444444, 54.0555555556, 55.4166666667, 56.7777777778,
      59.6944444444, 61.0555555556, 62.4166666667, 63.7777777778, 44.4166666667,
      45.3888888889, 46.3611111111, 47.3333333333, 30.6944444444, 31.3888888889,
      32.0833333333, 32.7777777778, 44.75,         45.7222222222, 46.6944444444,
      47.6666666667, 49.75,         50.7222222222, 51.6944444444, 52.6666666667,
      36.8055555556, 37.5,          38.1944444444, 38.8888888889};
  const std::array<int, 4> in_shape = {{1, 4, 4, 4}};
  const auto padding = PaddingMode::SAME;
  const auto params = getPoolingParams<3, 1>(in_shape, padding);
  const DataType max_input_val = 2048.0;
  this->test_pool(exp_out, params, max_input_val);
}
TYPED_TEST(AvgWindow3Stride1Grad, VALID1x4x4x4) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      0.1111111111, 0.2222222222, 0.3333333333, 0.4444444444, 0.6666666667,
      0.8888888889, 1.1111111111, 1.3333333333, 0.6666666667, 0.8888888889,
      1.1111111111, 1.3333333333, 0.5555555556, 0.6666666667, 0.7777777778,
      0.8888888889, 1.1111111111, 1.3333333333, 1.5555555556, 1.7777777778,
      3.1111111111, 3.5555555556, 4.,           4.4444444444, 3.1111111111,
      3.5555555556, 4.,           4.4444444444, 2.,           2.2222222222,
      2.4444444444, 2.6666666667, 1.1111111111, 1.3333333333, 1.5555555556,
      1.7777777778, 3.1111111111, 3.5555555556, 4.,           4.4444444444,
      3.1111111111, 3.5555555556, 4.,           4.4444444444, 2.,
      2.2222222222, 2.4444444444, 2.6666666667, 1.,           1.1111111111,
      1.2222222222, 1.3333333333, 2.4444444444, 2.6666666667, 2.8888888889,
      3.1111111111, 2.4444444444, 2.6666666667, 2.8888888889, 3.1111111111,
      1.4444444444, 1.5555555556, 1.6666666667, 1.7777777778};
  const std::array<int, 4> in_shape = {{1, 4, 4, 4}};
  const auto padding = PaddingMode::VALID;
  const auto params = getPoolingParams<3, 1>(in_shape, padding);
  const DataType max_input_val = 2048.0;
  this->test_pool(exp_out, params, max_input_val);
}
TYPED_TEST(AvgWindow3Stride1Grad, SAME1x4x5x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      2.3611111111,  3.75,          4.1666666667,  5.9722222222,
      4.5833333333,  5.5277777778,  8.3611111111,  8.5,
      11.4722222222, 8.6388888889,  11.7777777778, 17.1111111111,
      16.,           20.2222222222, 14.8888888889, 10.,
      14.4444444444, 13.3333333333, 16.6666666667, 12.2222222222};
  const std::array<int, 4> in_shape = {{1, 4, 5, 1}};
  const auto padding = PaddingMode::SAME;
  const auto params = getPoolingParams<3, 1>(in_shape, padding);
  const DataType max_input_val = 2048.0;
  this->test_pool(exp_out, params, max_input_val);
}
TYPED_TEST(AvgWindow3Stride1Grad, VALID1x4x5x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      0.1111111111, 0.3333333333, 0.6666666667, 0.5555555556, 0.3333333333,
      0.5555555556, 1.3333333333, 2.3333333333, 1.7777777778, 1.,
      0.5555555556, 1.3333333333, 2.3333333333, 1.7777777778, 1.,
      0.4444444444, 1.,           1.6666666667, 1.2222222222, 0.6666666667};
  const std::array<int, 4> in_shape = {{1, 4, 5, 1}};
  const auto padding = PaddingMode::VALID;
  const auto params = getPoolingParams<3, 1>(in_shape, padding);
  const DataType max_input_val = 2048.0;
  this->test_pool(exp_out, params, max_input_val);
}
TYPED_TEST(AvgWindow3Stride1Grad, SAME1x4x5x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      4.0277777778,  4.7222222222,  6.5277777778,  7.5,
      7.5,           8.3333333333,  10.9722222222, 11.9444444444,
      8.4722222222,  9.1666666667,  10.0833333333, 11.0555555556,
      15.3611111111, 16.7222222222, 15.8333333333, 17.,
      21.5833333333, 22.9444444444, 16.3055555556, 17.2777777778,
      22.5833333333, 23.5555555556, 32.8611111111, 34.2222222222,
      30.8333333333, 32.,           39.0833333333, 40.4444444444,
      28.8055555556, 29.7777777778, 19.3055555556, 20.,
      27.9166666667, 28.8888888889, 25.8333333333, 26.6666666667,
      32.3611111111, 33.3333333333, 23.75,         24.4444444444};
  const std::array<int, 4> in_shape = {{1, 4, 5, 2}};
  const auto padding = PaddingMode::SAME;
  const auto params = getPoolingParams<3, 1>(in_shape, padding);
  const DataType max_input_val = 2048.0;
  this->test_pool(exp_out, params, max_input_val);
}
TYPED_TEST(AvgWindow3Stride1Grad, VALID1x4x5x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      0.1111111111, 0.2222222222, 0.4444444444, 0.6666666667, 1.,
      1.3333333333, 0.8888888889, 1.1111111111, 0.5555555556, 0.6666666667,
      0.8888888889, 1.1111111111, 2.2222222222, 2.6666666667, 4.,
      4.6666666667, 3.1111111111, 3.5555555556, 1.7777777778, 2.,
      0.8888888889, 1.1111111111, 2.2222222222, 2.6666666667, 4.,
      4.6666666667, 3.1111111111, 3.5555555556, 1.7777777778, 2.,
      0.7777777778, 0.8888888889, 1.7777777778, 2.,           3.,
      3.3333333333, 2.2222222222, 2.4444444444, 1.2222222222, 1.3333333333};
  const std::array<int, 4> in_shape = {{1, 4, 5, 2}};
  const auto padding = PaddingMode::VALID;
  const auto params = getPoolingParams<3, 1>(in_shape, padding);
  const DataType max_input_val = 2048.0;
  this->test_pool(exp_out, params, max_input_val);
}
TYPED_TEST(AvgWindow3Stride1Grad, SAME1x4x5x4) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      7.3611111111,  8.0555555556,  8.75,          9.4444444444,
      12.0833333333, 13.0555555556, 14.0277777778, 15.,
      14.1666666667, 15.,           15.8333333333, 16.6666666667,
      20.9722222222, 21.9444444444, 22.9166666667, 23.8888888889,
      16.25,         16.9444444444, 17.6388888889, 18.3333333333,
      19.1944444444, 20.1666666667, 21.1388888889, 22.1111111111,
      29.3611111111, 30.7222222222, 32.0833333333, 33.4444444444,
      30.5,          31.6666666667, 32.8333333333, 34.,
      41.8055555556, 43.1666666667, 44.5277777778, 45.8888888889,
      31.6388888889, 32.6111111111, 33.5833333333, 34.5555555556,
      44.1944444444, 45.1666666667, 46.1388888889, 47.1111111111,
      64.3611111111, 65.7222222222, 67.0833333333, 68.4444444444,
      60.5,          61.6666666667, 62.8333333333, 64.,
      76.8055555556, 78.1666666667, 79.5277777778, 80.8888888889,
      56.6388888889, 57.6111111111, 58.5833333333, 59.5555555556,
      37.9166666667, 38.6111111111, 39.3055555556, 40.,
      54.8611111111, 55.8333333333, 56.8055555556, 57.7777777778,
      50.8333333333, 51.6666666667, 52.5,          53.3333333333,
      63.75,         64.7222222222, 65.6944444444, 66.6666666667,
      46.8055555556, 47.5,          48.1944444444, 48.8888888889};
  const std::array<int, 4> in_shape = {{1, 4, 5, 4}};
  const auto padding = PaddingMode::SAME;
  const auto params = getPoolingParams<3, 1>(in_shape, padding);
  const DataType max_input_val = 2048.0;
  this->test_pool(exp_out, params, max_input_val);
}
TYPED_TEST(AvgWindow3Stride1Grad, VALID1x4x5x4) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      0.1111111111, 0.2222222222, 0.3333333333, 0.4444444444, 0.6666666667,
      0.8888888889, 1.1111111111, 1.3333333333, 1.6666666667, 2.,
      2.3333333333, 2.6666666667, 1.5555555556, 1.7777777778, 2.,
      2.2222222222, 1.,           1.1111111111, 1.2222222222, 1.3333333333,
      1.5555555556, 1.7777777778, 2.,           2.2222222222, 4.,
      4.4444444444, 4.8888888889, 5.3333333333, 7.3333333333, 8.,
      8.6666666667, 9.3333333333, 5.7777777778, 6.2222222222, 6.6666666667,
      7.1111111111, 3.3333333333, 3.5555555556, 3.7777777778, 4.,
      1.5555555556, 1.7777777778, 2.,           2.2222222222, 4.,
      4.4444444444, 4.8888888889, 5.3333333333, 7.3333333333, 8.,
      8.6666666667, 9.3333333333, 5.7777777778, 6.2222222222, 6.6666666667,
      7.1111111111, 3.3333333333, 3.5555555556, 3.7777777778, 4.,
      1.4444444444, 1.5555555556, 1.6666666667, 1.7777777778, 3.3333333333,
      3.5555555556, 3.7777777778, 4.,           5.6666666667, 6.,
      6.3333333333, 6.6666666667, 4.2222222222, 4.4444444444, 4.6666666667,
      4.8888888889, 2.3333333333, 2.4444444444, 2.5555555556, 2.6666666667};
  const std::array<int, 4> in_shape = {{1, 4, 5, 4}};
  const auto padding = PaddingMode::VALID;
  const auto params = getPoolingParams<3, 1>(in_shape, padding);
  const DataType max_input_val = 2048.0;
  this->test_pool(exp_out, params, max_input_val);
}
TYPED_TEST(AvgWindow3Stride1Grad, SAME1x4x6x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      2.6388888889,  4.1388888889,  4.5,           5.3333333333,  7.3333333333,
      5.5555555556,  6.3611111111,  9.5277777778,  9.5,           10.6666666667,
      14.,           10.4444444444, 13.8611111111, 20.0277777778, 18.5,
      19.6666666667, 24.5,          17.9444444444, 11.8055555556, 16.9722222222,
      15.5,          16.3333333333, 20.1666666667, 14.7222222222};
  const std::array<int, 4> in_shape = {{1, 4, 6, 1}};
  const auto padding = PaddingMode::SAME;
  const auto params = getPoolingParams<3, 1>(in_shape, padding);
  const DataType max_input_val = 2048.0;
  this->test_pool(exp_out, params, max_input_val);
}
TYPED_TEST(AvgWindow3Stride1Grad, VALID1x4x6x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      0.1111111111, 0.3333333333, 0.6666666667, 1.,           0.7777777778,
      0.4444444444, 0.6666666667, 1.5555555556, 2.6666666667, 3.3333333333,
      2.4444444444, 1.3333333333, 0.6666666667, 1.5555555556, 2.6666666667,
      3.3333333333, 2.4444444444, 1.3333333333, 0.5555555556, 1.2222222222,
      2.,           2.3333333333, 1.6666666667, 0.8888888889};
  const std::array<int, 4> in_shape = {{1, 4, 6, 1}};
  const auto padding = PaddingMode::VALID;
  const auto params = getPoolingParams<3, 1>(in_shape, padding);
  const DataType max_input_val = 2048.0;
  this->test_pool(exp_out, params, max_input_val);
}
TYPED_TEST(AvgWindow3Stride1Grad, SAME1x4x6x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      4.5833333333,  5.2777777778,  7.3055555556,
      8.2777777778,  8.1666666667,  9.,
      9.8333333333,  10.6666666667, 13.6944444444,
      14.6666666667, 10.4166666667, 11.1111111111,
      11.75,         12.7222222222, 17.6944444444,
      19.0555555556, 17.8333333333, 19.,
      20.1666666667, 21.3333333333, 26.6388888889,
      28.,           19.9166666667, 20.8888888889,
      26.75,         27.7222222222, 38.6944444444,
      40.0555555556, 35.8333333333, 37.,
      38.1666666667, 39.3333333333, 47.6388888889,
      49.,           34.9166666667, 35.8888888889,
      22.9166666667, 23.6111111111, 32.9722222222,
      33.9444444444, 30.1666666667, 31.,
      31.8333333333, 32.6666666667, 39.3611111111,
      40.3333333333, 28.75,         29.4444444444};
  const std::array<int, 4> in_shape = {{1, 4, 6, 2}};
  const auto padding = PaddingMode::SAME;
  const auto params = getPoolingParams<3, 1>(in_shape, padding);
  const DataType max_input_val = 2048.0;
  this->test_pool(exp_out, params, max_input_val);
}
TYPED_TEST(AvgWindow3Stride1Grad, VALID1x4x6x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      0.1111111111, 0.2222222222, 0.4444444444, 0.6666666667, 1.,
      1.3333333333, 1.6666666667, 2.,           1.3333333333, 1.5555555556,
      0.7777777778, 0.8888888889, 1.1111111111, 1.3333333333, 2.6666666667,
      3.1111111111, 4.6666666667, 5.3333333333, 6.,           6.6666666667,
      4.4444444444, 4.8888888889, 2.4444444444, 2.6666666667, 1.1111111111,
      1.3333333333, 2.6666666667, 3.1111111111, 4.6666666667, 5.3333333333,
      6.,           6.6666666667, 4.4444444444, 4.8888888889, 2.4444444444,
      2.6666666667, 1.,           1.1111111111, 2.2222222222, 2.4444444444,
      3.6666666667, 4.,           4.3333333333, 4.6666666667, 3.1111111111,
      3.3333333333, 1.6666666667, 1.7777777778};
  const std::array<int, 4> in_shape = {{1, 4, 6, 2}};
  const auto padding = PaddingMode::VALID;
  const auto params = getPoolingParams<3, 1>(in_shape, padding);
  const DataType max_input_val = 2048.0;
  this->test_pool(exp_out, params, max_input_val);
}
TYPED_TEST(AvgWindow3Stride1Grad, SAME1x4x6x4) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      8.4722222222,  9.1666666667,  9.8611111111,  10.5555555556, 13.6388888889,
      14.6111111111, 15.5833333333, 16.5555555556, 15.5,          16.3333333333,
      17.1666666667, 18.,           18.8333333333, 19.6666666667, 20.5,
      21.3333333333, 26.4166666667, 27.3888888889, 28.3611111111, 29.3333333333,
      20.1388888889, 20.8333333333, 21.5277777778, 22.2222222222, 22.5277777778,
      23.5,          24.4722222222, 25.4444444444, 34.0277777778, 35.3888888889,
      36.75,         38.1111111111, 34.5,          35.6666666667, 36.8333333333,
      38.,           39.1666666667, 40.3333333333, 41.5,          42.6666666667,
      51.9166666667, 53.2777777778, 54.6388888889, 56.,           38.8611111111,
      39.8333333333, 40.8055555556, 41.7777777778, 52.5277777778, 53.5,
      54.4722222222, 55.4444444444, 76.0277777778, 77.3888888889, 78.75,
      80.1111111111, 70.5,          71.6666666667, 72.8333333333, 74.,
      75.1666666667, 76.3333333333, 77.5,          78.6666666667, 93.9166666667,
      95.2777777778, 96.6388888889, 98.,           68.8611111111, 69.8333333333,
      70.8055555556, 71.7777777778, 45.1388888889, 45.8333333333, 46.5277777778,
      47.2222222222, 64.9722222222, 65.9444444444, 66.9166666667, 67.8888888889,
      59.5,          60.3333333333, 61.1666666667, 62.,           62.8333333333,
      63.6666666667, 64.5,          65.3333333333, 77.75,         78.7222222222,
      79.6944444444, 80.6666666667, 56.8055555556, 57.5,          58.1944444444,
      58.8888888889};
  const std::array<int, 4> in_shape = {{1, 4, 6, 4}};
  const auto padding = PaddingMode::SAME;
  const auto params = getPoolingParams<3, 1>(in_shape, padding);
  const DataType max_input_val = 2048.0;
  this->test_pool(exp_out, params, max_input_val);
}
TYPED_TEST(AvgWindow3Stride1Grad, VALID1x4x6x4) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {0.1111111111,
                                         0.2222222222,
                                         0.3333333333,
                                         0.4444444444,
                                         0.6666666667,
                                         0.8888888889,
                                         1.1111111111,
                                         1.3333333333,
                                         1.6666666667,
                                         2.,
                                         2.3333333333,
                                         2.6666666667,
                                         3.,
                                         3.3333333333,
                                         3.6666666667,
                                         4.,
                                         2.4444444444,
                                         2.6666666667,
                                         2.8888888889,
                                         3.1111111111,
                                         1.4444444444,
                                         1.5555555556,
                                         1.6666666667,
                                         1.7777777778,
                                         2.,
                                         2.2222222222,
                                         2.4444444444,
                                         2.6666666667,
                                         4.8888888889,
                                         5.3333333333,
                                         5.7777777778,
                                         6.2222222222,
                                         8.6666666667,
                                         9.3333333333,
                                         10.,
                                         10.6666666667,
                                         11.3333333333,
                                         12.,
                                         12.6666666667,
                                         13.3333333333,
                                         8.4444444444,
                                         8.8888888889,
                                         9.3333333333,
                                         9.7777777778,
                                         4.6666666667,
                                         4.8888888889,
                                         5.1111111111,
                                         5.3333333333,
                                         2.,
                                         2.2222222222,
                                         2.4444444444,
                                         2.6666666667,
                                         4.8888888889,
                                         5.3333333333,
                                         5.7777777778,
                                         6.2222222222,
                                         8.6666666667,
                                         9.3333333333,
                                         10.,
                                         10.6666666667,
                                         11.3333333333,
                                         12.,
                                         12.6666666667,
                                         13.3333333333,
                                         8.4444444444,
                                         8.8888888889,
                                         9.3333333333,
                                         9.7777777778,
                                         4.6666666667,
                                         4.8888888889,
                                         5.1111111111,
                                         5.3333333333,
                                         1.8888888889,
                                         2.,
                                         2.1111111111,
                                         2.2222222222,
                                         4.2222222222,
                                         4.4444444444,
                                         4.6666666667,
                                         4.8888888889,
                                         7.,
                                         7.3333333333,
                                         7.6666666667,
                                         8.,
                                         8.3333333333,
                                         8.6666666667,
                                         9.,
                                         9.3333333333,
                                         6.,
                                         6.2222222222,
                                         6.4444444444,
                                         6.6666666667,
                                         3.2222222222,
                                         3.3333333333,
                                         3.4444444444,
                                         3.5555555556};
  const std::array<int, 4> in_shape = {{1, 4, 6, 4}};
  const auto padding = PaddingMode::VALID;
  const auto params = getPoolingParams<3, 1>(in_shape, padding);
  const DataType max_input_val = 2048.0;
  this->test_pool(exp_out, params, max_input_val);
}
TYPED_TEST(AvgWindow3Stride1Grad, SAME1x5x4x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      2.0833333333,  3.3611111111,  4.6111111111,  3.6111111111,  4.6944444444,
      7.1944444444,  8.9444444444,  6.8333333333,  7.8333333333,  11.5,
      13.,           9.6666666667,  13.5833333333, 19.6388888889, 21.3888888889,
      15.7222222222, 10.9722222222, 15.8055555556, 17.0555555556, 12.5,
  };
  const std::array<int, 4> in_shape = {{1, 5, 4, 1}};
  const auto padding = PaddingMode::SAME;
  const auto params = getPoolingParams<3, 1>(in_shape, padding);
  const DataType max_input_val = 2048.0;
  this->test_pool(exp_out, params, max_input_val);
}
TYPED_TEST(AvgWindow3Stride1Grad, VALID1x5x4x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      0.1111111111, 0.3333333333, 0.3333333333, 0.2222222222, 0.4444444444,
      1.1111111111, 1.1111111111, 0.6666666667, 1.,           2.3333333333,
      2.3333333333, 1.3333333333, 0.8888888889, 2.,           2.,
      1.1111111111, 0.5555555556, 1.2222222222, 1.2222222222, 0.6666666667};
  const std::array<int, 4> in_shape = {{1, 5, 4, 1}};
  const auto padding = PaddingMode::VALID;
  const auto params = getPoolingParams<3, 1>(in_shape, padding);
  const DataType max_input_val = 2048.0;
  this->test_pool(exp_out, params, max_input_val);
}
TYPED_TEST(AvgWindow3Stride1Grad, SAME1x5x4x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      3.4722222222,  4.1666666667,  5.75,          6.7222222222,  8.25,
      9.2222222222,  6.5277777778,  7.2222222222,  8.4166666667,  9.3888888889,
      13.0277777778, 14.3888888889, 16.5277777778, 17.8888888889, 12.6944444444,
      13.6666666667, 14.8333333333, 15.6666666667, 21.8333333333, 23.,
      24.8333333333, 26.,           18.5,          19.3333333333, 26.1944444444,
      27.1666666667, 37.9166666667, 39.2777777778, 41.4166666667, 42.7777777778,
      30.4722222222, 31.4444444444, 21.25,         21.9444444444, 30.6388888889,
      31.6111111111, 33.1388888889, 34.1111111111, 24.3055555556, 25.,
  };
  const std::array<int, 4> in_shape = {{1, 5, 4, 2}};
  const auto padding = PaddingMode::SAME;
  const auto params = getPoolingParams<3, 1>(in_shape, padding);
  const DataType max_input_val = 2048.0;
  this->test_pool(exp_out, params, max_input_val);
}
TYPED_TEST(AvgWindow3Stride1Grad, VALID1x5x4x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      0.1111111111, 0.2222222222, 0.4444444444, 0.6666666667, 0.4444444444,
      0.6666666667, 0.3333333333, 0.4444444444, 0.6666666667, 0.8888888889,
      1.7777777778, 2.2222222222, 1.7777777778, 2.2222222222, 1.1111111111,
      1.3333333333, 1.6666666667, 2.,           4.,           4.6666666667,
      4.,           4.6666666667, 2.3333333333, 2.6666666667, 1.5555555556,
      1.7777777778, 3.5555555556, 4.,           3.5555555556, 4.,
      2.,           2.2222222222, 1.,           1.1111111111, 2.2222222222,
      2.4444444444, 2.2222222222, 2.4444444444, 1.2222222222, 1.3333333333};
  const std::array<int, 4> in_shape = {{1, 5, 4, 2}};
  const auto padding = PaddingMode::VALID;
  const auto params = getPoolingParams<3, 1>(in_shape, padding);
  const DataType max_input_val = 2048.0;
  this->test_pool(exp_out, params, max_input_val);
}
TYPED_TEST(AvgWindow3Stride1Grad, SAME1x5x4x4) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      6.25,          6.9444444444,  7.6388888889,  8.3333333333,  10.5277777778,
      11.5,          12.4722222222, 13.4444444444, 15.5277777778, 16.5,
      17.4722222222, 18.4444444444, 12.3611111111, 13.0555555556, 13.75,
      14.4444444444, 15.8611111111, 16.8333333333, 17.8055555556, 18.7777777778,
      24.6944444444, 26.0555555556, 27.4166666667, 28.7777777778, 31.6944444444,
      33.0555555556, 34.4166666667, 35.7777777778, 24.4166666667, 25.3888888889,
      26.3611111111, 27.3333333333, 28.8333333333, 29.6666666667, 30.5,
      31.3333333333, 42.5,          43.6666666667, 44.8333333333, 46.,
      48.5,          49.6666666667, 50.8333333333, 52.,           36.1666666667,
      37.,           37.8333333333, 38.6666666667, 51.4166666667, 52.3888888889,
      53.3611111111, 54.3333333333, 74.4722222222, 75.8333333333, 77.1944444444,
      78.5555555556, 81.4722222222, 82.8333333333, 84.1944444444, 85.5555555556,
      59.9722222222, 60.9444444444, 61.9166666667, 62.8888888889, 41.8055555556,
      42.5,          43.1944444444, 43.8888888889, 60.3055555556, 61.2777777778,
      62.25,         63.2222222222, 65.3055555556, 66.2777777778, 67.25,
      68.2222222222, 47.9166666667, 48.6111111111, 49.3055555556, 50.,
  };
  const std::array<int, 4> in_shape = {{1, 5, 4, 4}};
  const auto padding = PaddingMode::SAME;
  const auto params = getPoolingParams<3, 1>(in_shape, padding);
  const DataType max_input_val = 2048.0;
  this->test_pool(exp_out, params, max_input_val);
}
TYPED_TEST(AvgWindow3Stride1Grad, VALID1x5x4x4) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      0.1111111111, 0.2222222222, 0.3333333333, 0.4444444444, 0.6666666667,
      0.8888888889, 1.1111111111, 1.3333333333, 0.6666666667, 0.8888888889,
      1.1111111111, 1.3333333333, 0.5555555556, 0.6666666667, 0.7777777778,
      0.8888888889, 1.1111111111, 1.3333333333, 1.5555555556, 1.7777777778,
      3.1111111111, 3.5555555556, 4.,           4.4444444444, 3.1111111111,
      3.5555555556, 4.,           4.4444444444, 2.,           2.2222222222,
      2.4444444444, 2.6666666667, 3.,           3.3333333333, 3.6666666667,
      4.,           7.3333333333, 8.,           8.6666666667, 9.3333333333,
      7.3333333333, 8.,           8.6666666667, 9.3333333333, 4.3333333333,
      4.6666666667, 5.,           5.3333333333, 2.8888888889, 3.1111111111,
      3.3333333333, 3.5555555556, 6.6666666667, 7.1111111111, 7.5555555556,
      8.,           6.6666666667, 7.1111111111, 7.5555555556, 8.,
      3.7777777778, 4.,           4.2222222222, 4.4444444444, 1.8888888889,
      2.,           2.1111111111, 2.2222222222, 4.2222222222, 4.4444444444,
      4.6666666667, 4.8888888889, 4.2222222222, 4.4444444444, 4.6666666667,
      4.8888888889, 2.3333333333, 2.4444444444, 2.5555555556, 2.6666666667};
  const std::array<int, 4> in_shape = {{1, 5, 4, 4}};
  const auto padding = PaddingMode::VALID;
  const auto params = getPoolingParams<3, 1>(in_shape, padding);
  const DataType max_input_val = 2048.0;
  this->test_pool(exp_out, params, max_input_val);
}
TYPED_TEST(AvgWindow3Stride1Grad, SAME1x5x5x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      2.3611111111,  3.75,          4.1666666667,  5.9722222222,
      4.5833333333,  5.5277777778,  8.3611111111,  8.5,
      11.4722222222, 8.6388888889,  9.5,           13.8333333333,
      13.,           16.5,          12.1666666667, 16.6388888889,
      23.9166666667, 21.8333333333, 27.0277777778, 19.75,
      13.4722222222, 19.3055555556, 17.5,          21.5277777778,
      15.6944444444};
  const std::array<int, 4> in_shape = {{1, 5, 5, 1}};
  const auto padding = PaddingMode::SAME;
  const auto params = getPoolingParams<3, 1>(in_shape, padding);
  const DataType max_input_val = 2048.0;
  this->test_pool(exp_out, params, max_input_val);
}
TYPED_TEST(AvgWindow3Stride1Grad, VALID1x5x5x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      0.1111111111, 0.3333333333, 0.6666666667, 0.5555555556, 0.3333333333,
      0.5555555556, 1.3333333333, 2.3333333333, 1.7777777778, 1.,
      1.3333333333, 3.,           5.,           3.6666666667, 2.,
      1.2222222222, 2.6666666667, 4.3333333333, 3.1111111111, 1.6666666667,
      0.7777777778, 1.6666666667, 2.6666666667, 1.8888888889, 1.,
  };
  const std::array<int, 4> in_shape = {{1, 5, 5, 1}};
  const auto padding = PaddingMode::VALID;
  const auto params = getPoolingParams<3, 1>(in_shape, padding);
  const DataType max_input_val = 2048.0;
  this->test_pool(exp_out, params, max_input_val);
}
TYPED_TEST(AvgWindow3Stride1Grad, SAME1x5x5x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      4.0277777778,  4.7222222222,  6.5277777778,  7.5,
      7.5,           8.3333333333,  10.9722222222, 11.9444444444,
      8.4722222222,  9.1666666667,  10.0833333333, 11.0555555556,
      15.3611111111, 16.7222222222, 15.8333333333, 17.,
      21.5833333333, 22.9444444444, 16.3055555556, 17.2777777778,
      18.1666666667, 19.,           26.5,          27.6666666667,
      25.,           26.,           31.8333333333, 33.,
      23.5,          24.3333333333, 32.3055555556, 33.2777777778,
      46.4722222222, 47.8333333333, 42.5,          43.6666666667,
      52.6944444444, 54.0555555556, 38.5277777778, 39.5,
      26.25,         26.9444444444, 37.6388888889, 38.6111111111,
      34.1666666667, 35.,           42.0833333333, 43.0555555556,
      30.6944444444, 31.3888888889};
  const std::array<int, 4> in_shape = {{1, 5, 5, 2}};
  const auto padding = PaddingMode::SAME;
  const auto params = getPoolingParams<3, 1>(in_shape, padding);
  const DataType max_input_val = 2048.0;
  this->test_pool(exp_out, params, max_input_val);
}
TYPED_TEST(AvgWindow3Stride1Grad, VALID1x5x5x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      0.1111111111, 0.2222222222, 0.4444444444, 0.6666666667, 1.,
      1.3333333333, 0.8888888889, 1.1111111111, 0.5555555556, 0.6666666667,
      0.8888888889, 1.1111111111, 2.2222222222, 2.6666666667, 4.,
      4.6666666667, 3.1111111111, 3.5555555556, 1.7777777778, 2.,
      2.3333333333, 2.6666666667, 5.3333333333, 6.,           9.,
      10.,          6.6666666667, 7.3333333333, 3.6666666667, 4.,
      2.2222222222, 2.4444444444, 4.8888888889, 5.3333333333, 8.,
      8.6666666667, 5.7777777778, 6.2222222222, 3.1111111111, 3.3333333333,
      1.4444444444, 1.5555555556, 3.1111111111, 3.3333333333, 5.,
      5.3333333333, 3.5555555556, 3.7777777778, 1.8888888889, 2.,
  };
  const std::array<int, 4> in_shape = {{1, 5, 5, 2}};
  const auto padding = PaddingMode::VALID;
  const auto params = getPoolingParams<3, 1>(in_shape, padding);
  const DataType max_input_val = 2048.0;
  this->test_pool(exp_out, params, max_input_val);
}
TYPED_TEST(AvgWindow3Stride1Grad, SAME1x5x5x4) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {7.3611111111,
                                         8.0555555556,
                                         8.75,
                                         9.4444444444,
                                         12.0833333333,
                                         13.0555555556,
                                         14.0277777778,
                                         15.,
                                         14.1666666667,
                                         15.,
                                         15.8333333333,
                                         16.6666666667,
                                         20.9722222222,
                                         21.9444444444,
                                         22.9166666667,
                                         23.8888888889,
                                         16.25,
                                         16.9444444444,
                                         17.6388888889,
                                         18.3333333333,
                                         19.1944444444,
                                         20.1666666667,
                                         21.1388888889,
                                         22.1111111111,
                                         29.3611111111,
                                         30.7222222222,
                                         32.0833333333,
                                         33.4444444444,
                                         30.5,
                                         31.6666666667,
                                         32.8333333333,
                                         34.,
                                         41.8055555556,
                                         43.1666666667,
                                         44.5277777778,
                                         45.8888888889,
                                         31.6388888889,
                                         32.6111111111,
                                         33.5833333333,
                                         34.5555555556,
                                         35.5,
                                         36.3333333333,
                                         37.1666666667,
                                         38.,
                                         51.8333333333,
                                         53.,
                                         54.1666666667,
                                         55.3333333333,
                                         49.,
                                         50.,
                                         51.,
                                         52.,
                                         62.5,
                                         63.6666666667,
                                         64.8333333333,
                                         66.,
                                         46.1666666667,
                                         47.,
                                         47.8333333333,
                                         48.6666666667,
                                         63.6388888889,
                                         64.6111111111,
                                         65.5833333333,
                                         66.5555555556,
                                         91.5833333333,
                                         92.9444444444,
                                         94.3055555556,
                                         95.6666666667,
                                         83.8333333333,
                                         85.,
                                         86.1666666667,
                                         87.3333333333,
                                         104.0277777778,
                                         105.3888888889,
                                         106.75,
                                         108.1111111111,
                                         76.0833333333,
                                         77.0555555556,
                                         78.0277777778,
                                         79.,
                                         51.8055555556,
                                         52.5,
                                         53.1944444444,
                                         53.8888888889,
                                         74.3055555556,
                                         75.2777777778,
                                         76.25,
                                         77.2222222222,
                                         67.5,
                                         68.3333333333,
                                         69.1666666667,
                                         70.,
                                         83.1944444444,
                                         84.1666666667,
                                         85.1388888889,
                                         86.1111111111,
                                         60.6944444444,
                                         61.3888888889,
                                         62.0833333333,
                                         62.7777777778};
  const std::array<int, 4> in_shape = {{1, 5, 5, 4}};
  const auto padding = PaddingMode::SAME;
  const auto params = getPoolingParams<3, 1>(in_shape, padding);
  const DataType max_input_val = 2048.0;
  this->test_pool(exp_out, params, max_input_val);
}
TYPED_TEST(AvgWindow3Stride1Grad, VALID1x5x5x4) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      0.1111111111,
      0.2222222222,
      0.3333333333,
      0.4444444444,
      0.6666666667,
      0.8888888889,
      1.1111111111,
      1.3333333333,
      1.6666666667,
      2.,
      2.3333333333,
      2.6666666667,
      1.5555555556,
      1.7777777778,
      2.,
      2.2222222222,
      1.,
      1.1111111111,
      1.2222222222,
      1.3333333333,
      1.5555555556,
      1.7777777778,
      2.,
      2.2222222222,
      4.,
      4.4444444444,
      4.8888888889,
      5.3333333333,
      7.3333333333,
      8.,
      8.6666666667,
      9.3333333333,
      5.7777777778,
      6.2222222222,
      6.6666666667,
      7.1111111111,
      3.3333333333,
      3.5555555556,
      3.7777777778,
      4.,
      4.3333333333,
      4.6666666667,
      5.,
      5.3333333333,
      10.,
      10.6666666667,
      11.3333333333,
      12.,
      17.,
      18.,
      19.,
      20.,
      12.6666666667,
      13.3333333333,
      14.,
      14.6666666667,
      7.,
      7.3333333333,
      7.6666666667,
      8.,
      4.2222222222,
      4.4444444444,
      4.6666666667,
      4.8888888889,
      9.3333333333,
      9.7777777778,
      10.2222222222,
      10.6666666667,
      15.3333333333,
      16.,
      16.6666666667,
      17.3333333333,
      11.1111111111,
      11.5555555556,
      12.,
      12.4444444444,
      6.,
      6.2222222222,
      6.4444444444,
      6.6666666667,
      2.7777777778,
      2.8888888889,
      3.,
      3.1111111111,
      6.,
      6.2222222222,
      6.4444444444,
      6.6666666667,
      9.6666666667,
      10.,
      10.3333333333,
      10.6666666667,
      6.8888888889,
      7.1111111111,
      7.3333333333,
      7.5555555556,
      3.6666666667,
      3.7777777778,
      3.8888888889,
      4.,
  };
  const std::array<int, 4> in_shape = {{1, 5, 5, 4}};
  const auto padding = PaddingMode::VALID;
  const auto params = getPoolingParams<3, 1>(in_shape, padding);
  const DataType max_input_val = 2048.0;
  this->test_pool(exp_out, params, max_input_val);
}
TYPED_TEST(AvgWindow3Stride1Grad, SAME1x5x6x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      2.6388888889,  4.1388888889,  4.5,           5.3333333333,
      7.3333333333,  5.5555555556,  6.3611111111,  9.5277777778,
      9.5,           10.6666666667, 14.,           10.4444444444,
      11.1666666667, 16.1666666667, 15.,           16.,
      20.,           14.6666666667, 19.6944444444, 28.1944444444,
      25.5,          26.6666666667, 32.6666666667, 23.7777777778,
      15.9722222222, 22.8055555556, 20.5,          21.3333333333,
      26.,           18.8888888889};
  const std::array<int, 4> in_shape = {{1, 5, 6, 1}};
  const auto padding = PaddingMode::SAME;
  const auto params = getPoolingParams<3, 1>(in_shape, padding);
  const DataType max_input_val = 2048.0;
  this->test_pool(exp_out, params, max_input_val);
}
TYPED_TEST(AvgWindow3Stride1Grad, VALID1x5x6x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      0.1111111111, 0.3333333333, 0.6666666667, 1.,           0.7777777778,
      0.4444444444, 0.6666666667, 1.5555555556, 2.6666666667, 3.3333333333,
      2.4444444444, 1.3333333333, 1.6666666667, 3.6666666667, 6.,
      7.,           5.,           2.6666666667, 1.5555555556, 3.3333333333,
      5.3333333333, 6.,           4.2222222222, 2.2222222222, 1.,
      2.1111111111, 3.3333333333, 3.6666666667, 2.5555555556, 1.3333333333};
  const std::array<int, 4> in_shape = {{1, 5, 6, 1}};
  const auto padding = PaddingMode::VALID;
  const auto params = getPoolingParams<3, 1>(in_shape, padding);
  const DataType max_input_val = 2048.0;
  this->test_pool(exp_out, params, max_input_val);
}
TYPED_TEST(AvgWindow3Stride1Grad, SAME1x5x6x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      4.5833333333,  5.2777777778,  7.3055555556,
      8.2777777778,  8.1666666667,  9.,
      9.8333333333,  10.6666666667, 13.6944444444,
      14.6666666667, 10.4166666667, 11.1111111111,
      11.75,         12.7222222222, 17.6944444444,
      19.0555555556, 17.8333333333, 19.,
      20.1666666667, 21.3333333333, 26.6388888889,
      28.,           19.9166666667, 20.8888888889,
      21.5,          22.3333333333, 31.1666666667,
      32.3333333333, 29.,           30.,
      31.,           32.,           38.8333333333,
      40.,           28.5,          29.3333333333,
      38.4166666667, 39.3888888889, 55.0277777778,
      56.3888888889, 49.8333333333, 51.,
      52.1666666667, 53.3333333333, 63.9722222222,
      65.3333333333, 46.5833333333, 47.5555555556,
      31.25,         31.9444444444, 44.6388888889,
      45.6111111111, 40.1666666667, 41.,
      41.8333333333, 42.6666666667, 51.0277777778,
      52.,           37.0833333333, 37.7777777778};
  const std::array<int, 4> in_shape = {{1, 5, 6, 2}};
  const auto padding = PaddingMode::SAME;
  const auto params = getPoolingParams<3, 1>(in_shape, padding);
  const DataType max_input_val = 2048.0;
  this->test_pool(exp_out, params, max_input_val);
}
TYPED_TEST(AvgWindow3Stride1Grad, VALID1x5x6x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {0.1111111111,
                                         0.2222222222,
                                         0.4444444444,
                                         0.6666666667,
                                         1.,
                                         1.3333333333,
                                         1.6666666667,
                                         2.,
                                         1.3333333333,
                                         1.5555555556,
                                         0.7777777778,
                                         0.8888888889,
                                         1.1111111111,
                                         1.3333333333,
                                         2.6666666667,
                                         3.1111111111,
                                         4.6666666667,
                                         5.3333333333,
                                         6.,
                                         6.6666666667,
                                         4.4444444444,
                                         4.8888888889,
                                         2.4444444444,
                                         2.6666666667,
                                         3.,
                                         3.3333333333,
                                         6.6666666667,
                                         7.3333333333,
                                         11.,
                                         12.,
                                         13.,
                                         14.,
                                         9.3333333333,
                                         10.,
                                         5.,
                                         5.3333333333,
                                         2.8888888889,
                                         3.1111111111,
                                         6.2222222222,
                                         6.6666666667,
                                         10.,
                                         10.6666666667,
                                         11.3333333333,
                                         12.,
                                         8.,
                                         8.4444444444,
                                         4.2222222222,
                                         4.4444444444,
                                         1.8888888889,
                                         2.,
                                         4.,
                                         4.2222222222,
                                         6.3333333333,
                                         6.6666666667,
                                         7.,
                                         7.3333333333,
                                         4.8888888889,
                                         5.1111111111,
                                         2.5555555556,
                                         2.6666666667};
  const std::array<int, 4> in_shape = {{1, 5, 6, 2}};
  const auto padding = PaddingMode::VALID;
  const auto params = getPoolingParams<3, 1>(in_shape, padding);
  const DataType max_input_val = 2048.0;
  this->test_pool(exp_out, params, max_input_val);
}
TYPED_TEST(AvgWindow3Stride1Grad, SAME1x5x6x4) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {8.4722222222,
                                         9.1666666667,
                                         9.8611111111,
                                         10.5555555556,
                                         13.6388888889,
                                         14.6111111111,
                                         15.5833333333,
                                         16.5555555556,
                                         15.5,
                                         16.3333333333,
                                         17.1666666667,
                                         18.,
                                         18.8333333333,
                                         19.6666666667,
                                         20.5,
                                         21.3333333333,
                                         26.4166666667,
                                         27.3888888889,
                                         28.3611111111,
                                         29.3333333333,
                                         20.1388888889,
                                         20.8333333333,
                                         21.5277777778,
                                         22.2222222222,
                                         22.5277777778,
                                         23.5,
                                         24.4722222222,
                                         25.4444444444,
                                         34.0277777778,
                                         35.3888888889,
                                         36.75,
                                         38.1111111111,
                                         34.5,
                                         35.6666666667,
                                         36.8333333333,
                                         38.,
                                         39.1666666667,
                                         40.3333333333,
                                         41.5,
                                         42.6666666667,
                                         51.9166666667,
                                         53.2777777778,
                                         54.6388888889,
                                         56.,
                                         38.8611111111,
                                         39.8333333333,
                                         40.8055555556,
                                         41.7777777778,
                                         42.1666666667,
                                         43.,
                                         43.8333333333,
                                         44.6666666667,
                                         61.1666666667,
                                         62.3333333333,
                                         63.5,
                                         64.6666666667,
                                         57.,
                                         58.,
                                         59.,
                                         60.,
                                         61.,
                                         62.,
                                         63.,
                                         64.,
                                         76.5,
                                         77.6666666667,
                                         78.8333333333,
                                         80.,
                                         56.1666666667,
                                         57.,
                                         57.8333333333,
                                         58.6666666667,
                                         75.8611111111,
                                         76.8333333333,
                                         77.8055555556,
                                         78.7777777778,
                                         108.6944444444,
                                         110.0555555556,
                                         111.4166666667,
                                         112.7777777778,
                                         98.5,
                                         99.6666666667,
                                         100.8333333333,
                                         102.,
                                         103.1666666667,
                                         104.3333333333,
                                         105.5,
                                         106.6666666667,
                                         126.5833333333,
                                         127.9444444444,
                                         129.3055555556,
                                         130.6666666667,
                                         92.1944444444,
                                         93.1666666667,
                                         94.1388888889,
                                         95.1111111111,
                                         61.8055555556,
                                         62.5,
                                         63.1944444444,
                                         63.8888888889,
                                         88.3055555556,
                                         89.2777777778,
                                         90.25,
                                         91.2222222222,
                                         79.5,
                                         80.3333333333,
                                         81.1666666667,
                                         82.,
                                         82.8333333333,
                                         83.6666666667,
                                         84.5,
                                         85.3333333333,
                                         101.0833333333,
                                         102.0555555556,
                                         103.0277777778,
                                         104.,
                                         73.4722222222,
                                         74.1666666667,
                                         74.8611111111,
                                         75.5555555556};
  const std::array<int, 4> in_shape = {{1, 5, 6, 4}};
  const auto padding = PaddingMode::SAME;
  const auto params = getPoolingParams<3, 1>(in_shape, padding);
  const DataType max_input_val = 2048.0;
  this->test_pool(exp_out, params, max_input_val);
}
TYPED_TEST(AvgWindow3Stride1Grad, VALID1x5x6x4) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {0.1111111111,
                                         0.2222222222,
                                         0.3333333333,
                                         0.4444444444,
                                         0.6666666667,
                                         0.8888888889,
                                         1.1111111111,
                                         1.3333333333,
                                         1.6666666667,
                                         2.,
                                         2.3333333333,
                                         2.6666666667,
                                         3.,
                                         3.3333333333,
                                         3.6666666667,
                                         4.,
                                         2.4444444444,
                                         2.6666666667,
                                         2.8888888889,
                                         3.1111111111,
                                         1.4444444444,
                                         1.5555555556,
                                         1.6666666667,
                                         1.7777777778,
                                         2.,
                                         2.2222222222,
                                         2.4444444444,
                                         2.6666666667,
                                         4.8888888889,
                                         5.3333333333,
                                         5.7777777778,
                                         6.2222222222,
                                         8.6666666667,
                                         9.3333333333,
                                         10.,
                                         10.6666666667,
                                         11.3333333333,
                                         12.,
                                         12.6666666667,
                                         13.3333333333,
                                         8.4444444444,
                                         8.8888888889,
                                         9.3333333333,
                                         9.7777777778,
                                         4.6666666667,
                                         4.8888888889,
                                         5.1111111111,
                                         5.3333333333,
                                         5.6666666667,
                                         6.,
                                         6.3333333333,
                                         6.6666666667,
                                         12.6666666667,
                                         13.3333333333,
                                         14.,
                                         14.6666666667,
                                         21.,
                                         22.,
                                         23.,
                                         24.,
                                         25.,
                                         26.,
                                         27.,
                                         28.,
                                         18.,
                                         18.6666666667,
                                         19.3333333333,
                                         20.,
                                         9.6666666667,
                                         10.,
                                         10.3333333333,
                                         10.6666666667,
                                         5.5555555556,
                                         5.7777777778,
                                         6.,
                                         6.2222222222,
                                         12.,
                                         12.4444444444,
                                         12.8888888889,
                                         13.3333333333,
                                         19.3333333333,
                                         20.,
                                         20.6666666667,
                                         21.3333333333,
                                         22.,
                                         22.6666666667,
                                         23.3333333333,
                                         24.,
                                         15.5555555556,
                                         16.,
                                         16.4444444444,
                                         16.8888888889,
                                         8.2222222222,
                                         8.4444444444,
                                         8.6666666667,
                                         8.8888888889,
                                         3.6666666667,
                                         3.7777777778,
                                         3.8888888889,
                                         4.,
                                         7.7777777778,
                                         8.,
                                         8.2222222222,
                                         8.4444444444,
                                         12.3333333333,
                                         12.6666666667,
                                         13.,
                                         13.3333333333,
                                         13.6666666667,
                                         14.,
                                         14.3333333333,
                                         14.6666666667,
                                         9.5555555556,
                                         9.7777777778,
                                         10.,
                                         10.2222222222,
                                         5.,
                                         5.1111111111,
                                         5.2222222222,
                                         5.3333333333};
  const std::array<int, 4> in_shape = {{1, 5, 6, 4}};
  const auto padding = PaddingMode::VALID;
  const auto params = getPoolingParams<3, 1>(in_shape, padding);
  const DataType max_input_val = 2048.0;
  this->test_pool(exp_out, params, max_input_val);
}
TYPED_TEST(AvgWindow3Stride1Grad, SAME1x6x4x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      2.0833333333, 3.3611111111,  4.6111111111,  3.6111111111,  4.6944444444,
      7.1944444444, 8.9444444444,  6.8333333333,  7.8333333333,  11.5,
      13.,          9.6666666667,  11.1666666667, 16.1666666667, 17.6666666667,
      13.,          17.4722222222, 25.0833333333, 26.8333333333, 19.6111111111,
      13.75,        19.6944444444, 20.9444444444, 15.2777777778};
  const std::array<int, 4> in_shape = {{1, 6, 4, 1}};
  const auto padding = PaddingMode::SAME;
  const auto params = getPoolingParams<3, 1>(in_shape, padding);
  const DataType max_input_val = 2048.0;
  this->test_pool(exp_out, params, max_input_val);
}
TYPED_TEST(AvgWindow3Stride1Grad, VALID1x6x4x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      0.1111111111, 0.3333333333, 0.3333333333, 0.2222222222, 0.4444444444,
      1.1111111111, 1.1111111111, 0.6666666667, 1.,           2.3333333333,
      2.3333333333, 1.3333333333, 1.6666666667, 3.6666666667, 3.6666666667,
      2.,           1.3333333333, 2.8888888889, 2.8888888889, 1.5555555556,
      0.7777777778, 1.6666666667, 1.6666666667, 0.8888888889};
  const std::array<int, 4> in_shape = {{1, 6, 4, 1}};
  const auto padding = PaddingMode::VALID;
  const auto params = getPoolingParams<3, 1>(in_shape, padding);
  const DataType max_input_val = 2048.0;
  this->test_pool(exp_out, params, max_input_val);
}
TYPED_TEST(AvgWindow3Stride1Grad, SAME1x6x4x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      3.4722222222,  4.1666666667,  5.75,          6.7222222222,  8.25,
      9.2222222222,  6.5277777778,  7.2222222222,  8.4166666667,  9.3888888889,
      13.0277777778, 14.3888888889, 16.5277777778, 17.8888888889, 12.6944444444,
      13.6666666667, 14.8333333333, 15.6666666667, 21.8333333333, 23.,
      24.8333333333, 26.,           18.5,          19.3333333333, 21.5,
      22.3333333333, 31.1666666667, 32.3333333333, 34.1666666667, 35.3333333333,
      25.1666666667, 26.,           33.9722222222, 34.9444444444, 48.8055555556,
      50.1666666667, 52.3055555556, 53.6666666667, 38.25,         39.2222222222,
      26.8055555556, 27.5,          38.4166666667, 39.3888888889, 40.9166666667,
      41.8888888889, 29.8611111111, 30.5555555556};
  const std::array<int, 4> in_shape = {{1, 6, 4, 2}};
  const auto padding = PaddingMode::SAME;
  const auto params = getPoolingParams<3, 1>(in_shape, padding);
  const DataType max_input_val = 2048.0;
  this->test_pool(exp_out, params, max_input_val);
}
TYPED_TEST(AvgWindow3Stride1Grad, VALID1x6x4x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      0.1111111111, 0.2222222222, 0.4444444444, 0.6666666667, 0.4444444444,
      0.6666666667, 0.3333333333, 0.4444444444, 0.6666666667, 0.8888888889,
      1.7777777778, 2.2222222222, 1.7777777778, 2.2222222222, 1.1111111111,
      1.3333333333, 1.6666666667, 2.,           4.,           4.6666666667,
      4.,           4.6666666667, 2.3333333333, 2.6666666667, 3.,
      3.3333333333, 6.6666666667, 7.3333333333, 6.6666666667, 7.3333333333,
      3.6666666667, 4.,           2.4444444444, 2.6666666667, 5.3333333333,
      5.7777777778, 5.3333333333, 5.7777777778, 2.8888888889, 3.1111111111,
      1.4444444444, 1.5555555556, 3.1111111111, 3.3333333333, 3.1111111111,
      3.3333333333, 1.6666666667, 1.7777777778};
  const std::array<int, 4> in_shape = {{1, 6, 4, 2}};
  const auto padding = PaddingMode::VALID;
  const auto params = getPoolingParams<3, 1>(in_shape, padding);
  const DataType max_input_val = 2048.0;
  this->test_pool(exp_out, params, max_input_val);
}
TYPED_TEST(AvgWindow3Stride1Grad, SAME1x6x4x4) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {6.25,           6.9444444444,
                                         7.6388888889,   8.3333333333,
                                         10.5277777778,  11.5,
                                         12.4722222222,  13.4444444444,
                                         15.5277777778,  16.5,
                                         17.4722222222,  18.4444444444,
                                         12.3611111111,  13.0555555556,
                                         13.75,          14.4444444444,
                                         15.8611111111,  16.8333333333,
                                         17.8055555556,  18.7777777778,
                                         24.6944444444,  26.0555555556,
                                         27.4166666667,  28.7777777778,
                                         31.6944444444,  33.0555555556,
                                         34.4166666667,  35.7777777778,
                                         24.4166666667,  25.3888888889,
                                         26.3611111111,  27.3333333333,
                                         28.8333333333,  29.6666666667,
                                         30.5,           31.3333333333,
                                         42.5,           43.6666666667,
                                         44.8333333333,  46.,
                                         48.5,           49.6666666667,
                                         50.8333333333,  52.,
                                         36.1666666667,  37.,
                                         37.8333333333,  38.6666666667,
                                         42.1666666667,  43.,
                                         43.8333333333,  44.6666666667,
                                         61.1666666667,  62.3333333333,
                                         63.5,           64.6666666667,
                                         67.1666666667,  68.3333333333,
                                         69.5,           70.6666666667,
                                         49.5,           50.3333333333,
                                         51.1666666667,  52.,
                                         66.9722222222,  67.9444444444,
                                         68.9166666667,  69.8888888889,
                                         96.25,          97.6111111111,
                                         98.9722222222,  100.3333333333,
                                         103.25,         104.6111111111,
                                         105.9722222222, 107.3333333333,
                                         75.5277777778,  76.5,
                                         77.4722222222,  78.4444444444,
                                         52.9166666667,  53.6111111111,
                                         54.3055555556,  55.,
                                         75.8611111111,  76.8333333333,
                                         77.8055555556,  78.7777777778,
                                         80.8611111111,  81.8333333333,
                                         82.8055555556,  83.7777777778,
                                         59.0277777778,  59.7222222222,
                                         60.4166666667,  61.1111111111};
  const std::array<int, 4> in_shape = {{1, 6, 4, 4}};
  const auto padding = PaddingMode::SAME;
  const auto params = getPoolingParams<3, 1>(in_shape, padding);
  const DataType max_input_val = 2048.0;
  this->test_pool(exp_out, params, max_input_val);
}
TYPED_TEST(AvgWindow3Stride1Grad, VALID1x6x4x4) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {0.1111111111,
                                         0.2222222222,
                                         0.3333333333,
                                         0.4444444444,
                                         0.6666666667,
                                         0.8888888889,
                                         1.1111111111,
                                         1.3333333333,
                                         0.6666666667,
                                         0.8888888889,
                                         1.1111111111,
                                         1.3333333333,
                                         0.5555555556,
                                         0.6666666667,
                                         0.7777777778,
                                         0.8888888889,
                                         1.1111111111,
                                         1.3333333333,
                                         1.5555555556,
                                         1.7777777778,
                                         3.1111111111,
                                         3.5555555556,
                                         4.,
                                         4.4444444444,
                                         3.1111111111,
                                         3.5555555556,
                                         4.,
                                         4.4444444444,
                                         2.,
                                         2.2222222222,
                                         2.4444444444,
                                         2.6666666667,
                                         3.,
                                         3.3333333333,
                                         3.6666666667,
                                         4.,
                                         7.3333333333,
                                         8.,
                                         8.6666666667,
                                         9.3333333333,
                                         7.3333333333,
                                         8.,
                                         8.6666666667,
                                         9.3333333333,
                                         4.3333333333,
                                         4.6666666667,
                                         5.,
                                         5.3333333333,
                                         5.6666666667,
                                         6.,
                                         6.3333333333,
                                         6.6666666667,
                                         12.6666666667,
                                         13.3333333333,
                                         14.,
                                         14.6666666667,
                                         12.6666666667,
                                         13.3333333333,
                                         14.,
                                         14.6666666667,
                                         7.,
                                         7.3333333333,
                                         7.6666666667,
                                         8.,
                                         4.6666666667,
                                         4.8888888889,
                                         5.1111111111,
                                         5.3333333333,
                                         10.2222222222,
                                         10.6666666667,
                                         11.1111111111,
                                         11.5555555556,
                                         10.2222222222,
                                         10.6666666667,
                                         11.1111111111,
                                         11.5555555556,
                                         5.5555555556,
                                         5.7777777778,
                                         6.,
                                         6.2222222222,
                                         2.7777777778,
                                         2.8888888889,
                                         3.,
                                         3.1111111111,
                                         6.,
                                         6.2222222222,
                                         6.4444444444,
                                         6.6666666667,
                                         6.,
                                         6.2222222222,
                                         6.4444444444,
                                         6.6666666667,
                                         3.2222222222,
                                         3.3333333333,
                                         3.4444444444,
                                         3.5555555556};
  const std::array<int, 4> in_shape = {{1, 6, 4, 4}};
  const auto padding = PaddingMode::VALID;
  const auto params = getPoolingParams<3, 1>(in_shape, padding);
  const DataType max_input_val = 2048.0;
  this->test_pool(exp_out, params, max_input_val);
}
TYPED_TEST(AvgWindow3Stride1Grad, SAME1x6x5x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      2.3611111111,  3.75,          4.1666666667,  5.9722222222,
      4.5833333333,  5.5277777778,  8.3611111111,  8.5,
      11.4722222222, 8.6388888889,  9.5,           13.8333333333,
      13.,           16.5,          12.1666666667, 13.6666666667,
      19.6666666667, 18.,           22.3333333333, 16.3333333333,
      21.5,          30.7222222222, 27.6666666667, 33.8333333333,
      24.6111111111, 16.9444444444, 24.1666666667, 21.6666666667,
      26.3888888889, 19.1666666667};
  const std::array<int, 4> in_shape = {{1, 6, 5, 1}};
  const auto padding = PaddingMode::SAME;
  const auto params = getPoolingParams<3, 1>(in_shape, padding);
  const DataType max_input_val = 2048.0;
  this->test_pool(exp_out, params, max_input_val);
}
TYPED_TEST(AvgWindow3Stride1Grad, VALID1x6x5x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      0.1111111111, 0.3333333333, 0.6666666667, 0.5555555556, 0.3333333333,
      0.5555555556, 1.3333333333, 2.3333333333, 1.7777777778, 1.,
      1.3333333333, 3.,           5.,           3.6666666667, 2.,
      2.3333333333, 5.,           8.,           5.6666666667, 3.,
      1.8888888889, 4.,           6.3333333333, 4.4444444444, 2.3333333333,
      1.1111111111, 2.3333333333, 3.6666666667, 2.5555555556, 1.3333333333};
  const std::array<int, 4> in_shape = {{1, 6, 5, 1}};
  const auto padding = PaddingMode::VALID;
  const auto params = getPoolingParams<3, 1>(in_shape, padding);
  const DataType max_input_val = 2048.0;
  this->test_pool(exp_out, params, max_input_val);
}
TYPED_TEST(AvgWindow3Stride1Grad, SAME1x6x5x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      4.0277777778,  4.7222222222,  6.5277777778,  7.5,
      7.5,           8.3333333333,  10.9722222222, 11.9444444444,
      8.4722222222,  9.1666666667,  10.0833333333, 11.0555555556,
      15.3611111111, 16.7222222222, 15.8333333333, 17.,
      21.5833333333, 22.9444444444, 16.3055555556, 17.2777777778,
      18.1666666667, 19.,           26.5,          27.6666666667,
      25.,           26.,           31.8333333333, 33.,
      23.5,          24.3333333333, 26.5,          27.3333333333,
      38.1666666667, 39.3333333333, 35.,           36.,
      43.5,          44.6666666667, 31.8333333333, 32.6666666667,
      42.0277777778, 43.,           60.0833333333, 61.4444444444,
      54.1666666667, 55.3333333333, 66.3055555556, 67.6666666667,
      48.25,         49.2222222222, 33.1944444444, 33.8888888889,
      47.3611111111, 48.3333333333, 42.5,          43.3333333333,
      51.8055555556, 52.7777777778, 37.6388888889, 38.3333333333};
  const std::array<int, 4> in_shape = {{1, 6, 5, 2}};
  const auto padding = PaddingMode::SAME;
  const auto params = getPoolingParams<3, 1>(in_shape, padding);
  const DataType max_input_val = 2048.0;
  this->test_pool(exp_out, params, max_input_val);
}
TYPED_TEST(AvgWindow3Stride1Grad, VALID1x6x5x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      0.1111111111,  0.2222222222,  0.4444444444,  0.6666666667, 1.,
      1.3333333333,  0.8888888889,  1.1111111111,  0.5555555556, 0.6666666667,
      0.8888888889,  1.1111111111,  2.2222222222,  2.6666666667, 4.,
      4.6666666667,  3.1111111111,  3.5555555556,  1.7777777778, 2.,
      2.3333333333,  2.6666666667,  5.3333333333,  6.,           9.,
      10.,           6.6666666667,  7.3333333333,  3.6666666667, 4.,
      4.3333333333,  4.6666666667,  9.3333333333,  10.,          15.,
      16.,           10.6666666667, 11.3333333333, 5.6666666667, 6.,
      3.5555555556,  3.7777777778,  7.5555555556,  8.,           12.,
      12.6666666667, 8.4444444444,  8.8888888889,  4.4444444444, 4.6666666667,
      2.1111111111,  2.2222222222,  4.4444444444,  4.6666666667, 7.,
      7.3333333333,  4.8888888889,  5.1111111111,  2.5555555556, 2.6666666667};
  const std::array<int, 4> in_shape = {{1, 6, 5, 2}};
  const auto padding = PaddingMode::VALID;
  const auto params = getPoolingParams<3, 1>(in_shape, padding);
  const DataType max_input_val = 2048.0;
  this->test_pool(exp_out, params, max_input_val);
}
TYPED_TEST(AvgWindow3Stride1Grad, SAME1x6x5x4) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {7.3611111111,
                                         8.0555555556,
                                         8.75,
                                         9.4444444444,
                                         12.0833333333,
                                         13.0555555556,
                                         14.0277777778,
                                         15.,
                                         14.1666666667,
                                         15.,
                                         15.8333333333,
                                         16.6666666667,
                                         20.9722222222,
                                         21.9444444444,
                                         22.9166666667,
                                         23.8888888889,
                                         16.25,
                                         16.9444444444,
                                         17.6388888889,
                                         18.3333333333,
                                         19.1944444444,
                                         20.1666666667,
                                         21.1388888889,
                                         22.1111111111,
                                         29.3611111111,
                                         30.7222222222,
                                         32.0833333333,
                                         33.4444444444,
                                         30.5,
                                         31.6666666667,
                                         32.8333333333,
                                         34.,
                                         41.8055555556,
                                         43.1666666667,
                                         44.5277777778,
                                         45.8888888889,
                                         31.6388888889,
                                         32.6111111111,
                                         33.5833333333,
                                         34.5555555556,
                                         35.5,
                                         36.3333333333,
                                         37.1666666667,
                                         38.,
                                         51.8333333333,
                                         53.,
                                         54.1666666667,
                                         55.3333333333,
                                         49.,
                                         50.,
                                         51.,
                                         52.,
                                         62.5,
                                         63.6666666667,
                                         64.8333333333,
                                         66.,
                                         46.1666666667,
                                         47.,
                                         47.8333333333,
                                         48.6666666667,
                                         52.1666666667,
                                         53.,
                                         53.8333333333,
                                         54.6666666667,
                                         75.1666666667,
                                         76.3333333333,
                                         77.5,
                                         78.6666666667,
                                         69.,
                                         70.,
                                         71.,
                                         72.,
                                         85.8333333333,
                                         87.,
                                         88.1666666667,
                                         89.3333333333,
                                         62.8333333333,
                                         63.6666666667,
                                         64.5,
                                         65.3333333333,
                                         83.0833333333,
                                         84.0555555556,
                                         85.0277777778,
                                         86.,
                                         118.8055555556,
                                         120.1666666667,
                                         121.5277777778,
                                         122.8888888889,
                                         107.1666666667,
                                         108.3333333333,
                                         109.5,
                                         110.6666666667,
                                         131.25,
                                         132.6111111111,
                                         133.9722222222,
                                         135.3333333333,
                                         95.5277777778,
                                         96.5,
                                         97.4722222222,
                                         98.4444444444,
                                         65.6944444444,
                                         66.3888888889,
                                         67.0833333333,
                                         67.7777777778,
                                         93.75,
                                         94.7222222222,
                                         95.6944444444,
                                         96.6666666667,
                                         84.1666666667,
                                         85.,
                                         85.8333333333,
                                         86.6666666667,
                                         102.6388888889,
                                         103.6111111111,
                                         104.5833333333,
                                         105.5555555556,
                                         74.5833333333,
                                         75.2777777778,
                                         75.9722222222,
                                         76.6666666667};
  const std::array<int, 4> in_shape = {{1, 6, 5, 4}};
  const auto padding = PaddingMode::SAME;
  const auto params = getPoolingParams<3, 1>(in_shape, padding);
  const DataType max_input_val = 2048.0;
  this->test_pool(exp_out, params, max_input_val);
}
TYPED_TEST(AvgWindow3Stride1Grad, VALID1x6x5x4) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {0.1111111111,
                                         0.2222222222,
                                         0.3333333333,
                                         0.4444444444,
                                         0.6666666667,
                                         0.8888888889,
                                         1.1111111111,
                                         1.3333333333,
                                         1.6666666667,
                                         2.,
                                         2.3333333333,
                                         2.6666666667,
                                         1.5555555556,
                                         1.7777777778,
                                         2.,
                                         2.2222222222,
                                         1.,
                                         1.1111111111,
                                         1.2222222222,
                                         1.3333333333,
                                         1.5555555556,
                                         1.7777777778,
                                         2.,
                                         2.2222222222,
                                         4.,
                                         4.4444444444,
                                         4.8888888889,
                                         5.3333333333,
                                         7.3333333333,
                                         8.,
                                         8.6666666667,
                                         9.3333333333,
                                         5.7777777778,
                                         6.2222222222,
                                         6.6666666667,
                                         7.1111111111,
                                         3.3333333333,
                                         3.5555555556,
                                         3.7777777778,
                                         4.,
                                         4.3333333333,
                                         4.6666666667,
                                         5.,
                                         5.3333333333,
                                         10.,
                                         10.6666666667,
                                         11.3333333333,
                                         12.,
                                         17.,
                                         18.,
                                         19.,
                                         20.,
                                         12.6666666667,
                                         13.3333333333,
                                         14.,
                                         14.6666666667,
                                         7.,
                                         7.3333333333,
                                         7.6666666667,
                                         8.,
                                         8.3333333333,
                                         8.6666666667,
                                         9.,
                                         9.3333333333,
                                         18.,
                                         18.6666666667,
                                         19.3333333333,
                                         20.,
                                         29.,
                                         30.,
                                         31.,
                                         32.,
                                         20.6666666667,
                                         21.3333333333,
                                         22.,
                                         22.6666666667,
                                         11.,
                                         11.3333333333,
                                         11.6666666667,
                                         12.,
                                         6.8888888889,
                                         7.1111111111,
                                         7.3333333333,
                                         7.5555555556,
                                         14.6666666667,
                                         15.1111111111,
                                         15.5555555556,
                                         16.,
                                         23.3333333333,
                                         24.,
                                         24.6666666667,
                                         25.3333333333,
                                         16.4444444444,
                                         16.8888888889,
                                         17.3333333333,
                                         17.7777777778,
                                         8.6666666667,
                                         8.8888888889,
                                         9.1111111111,
                                         9.3333333333,
                                         4.1111111111,
                                         4.2222222222,
                                         4.3333333333,
                                         4.4444444444,
                                         8.6666666667,
                                         8.8888888889,
                                         9.1111111111,
                                         9.3333333333,
                                         13.6666666667,
                                         14.,
                                         14.3333333333,
                                         14.6666666667,
                                         9.5555555556,
                                         9.7777777778,
                                         10.,
                                         10.2222222222,
                                         5.,
                                         5.1111111111,
                                         5.2222222222,
                                         5.3333333333};
  const std::array<int, 4> in_shape = {{1, 6, 5, 4}};
  const auto padding = PaddingMode::VALID;
  const auto params = getPoolingParams<3, 1>(in_shape, padding);
  const DataType max_input_val = 2048.0;
  this->test_pool(exp_out, params, max_input_val);
}
TYPED_TEST(AvgWindow3Stride1Grad, SAME1x6x6x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      2.6388888889,  4.1388888889,  4.5,           5.3333333333,  7.3333333333,
      5.5555555556,  6.3611111111,  9.5277777778,  9.5,           10.6666666667,
      14.,           10.4444444444, 11.1666666667, 16.1666666667, 15.,
      16.,           20.,           14.6666666667, 16.1666666667, 23.1666666667,
      21.,           22.,           27.,           19.6666666667, 25.5277777778,
      36.3611111111, 32.5,          33.6666666667, 40.8333333333, 29.6111111111,
      20.1388888889, 28.6388888889, 25.5,          26.3333333333, 31.8333333333,
      23.0555555556};
  const std::array<int, 4> in_shape = {{1, 6, 6, 1}};
  const auto padding = PaddingMode::SAME;
  const auto params = getPoolingParams<3, 1>(in_shape, padding);
  const DataType max_input_val = 2048.0;
  this->test_pool(exp_out, params, max_input_val);
}
TYPED_TEST(AvgWindow3Stride1Grad, VALID1x6x6x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      0.1111111111, 0.3333333333, 0.6666666667, 1.,           0.7777777778,
      0.4444444444, 0.6666666667, 1.5555555556, 2.6666666667, 3.3333333333,
      2.4444444444, 1.3333333333, 1.6666666667, 3.6666666667, 6.,
      7.,           5.,           2.6666666667, 3.,           6.3333333333,
      10.,          11.,          7.6666666667, 4.,           2.4444444444,
      5.1111111111, 8.,           8.6666666667, 6.,           3.1111111111,
      1.4444444444, 3.,           4.6666666667, 5.,           3.4444444444,
      1.7777777778};
  const std::array<int, 4> in_shape = {{1, 6, 6, 1}};
  const auto padding = PaddingMode::VALID;
  const auto params = getPoolingParams<3, 1>(in_shape, padding);
  const DataType max_input_val = 2048.0;
  this->test_pool(exp_out, params, max_input_val);
}
TYPED_TEST(AvgWindow3Stride1Grad, SAME1x6x6x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      4.5833333333,  5.2777777778,  7.3055555556,
      8.2777777778,  8.1666666667,  9.,
      9.8333333333,  10.6666666667, 13.6944444444,
      14.6666666667, 10.4166666667, 11.1111111111,
      11.75,         12.7222222222, 17.6944444444,
      19.0555555556, 17.8333333333, 19.,
      20.1666666667, 21.3333333333, 26.6388888889,
      28.,           19.9166666667, 20.8888888889,
      21.5,          22.3333333333, 31.1666666667,
      32.3333333333, 29.,           30.,
      31.,           32.,           38.8333333333,
      40.,           28.5,          29.3333333333,
      31.5,          32.3333333333, 45.1666666667,
      46.3333333333, 41.,           42.,
      43.,           44.,           52.8333333333,
      54.,           38.5,          39.3333333333,
      50.0833333333, 51.0555555556, 71.3611111111,
      72.7222222222, 63.8333333333, 65.,
      66.1666666667, 67.3333333333, 80.3055555556,
      81.6666666667, 58.25,         59.2222222222,
      39.5833333333, 40.2777777778, 56.3055555556,
      57.2777777778, 50.1666666667, 51.,
      51.8333333333, 52.6666666667, 62.6944444444,
      63.6666666667, 45.4166666667, 46.1111111111};
  const std::array<int, 4> in_shape = {{1, 6, 6, 2}};
  const auto padding = PaddingMode::SAME;
  const auto params = getPoolingParams<3, 1>(in_shape, padding);
  const DataType max_input_val = 2048.0;
  this->test_pool(exp_out, params, max_input_val);
}
TYPED_TEST(AvgWindow3Stride1Grad, VALID1x6x6x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {0.1111111111,
                                         0.2222222222,
                                         0.4444444444,
                                         0.6666666667,
                                         1.,
                                         1.3333333333,
                                         1.6666666667,
                                         2.,
                                         1.3333333333,
                                         1.5555555556,
                                         0.7777777778,
                                         0.8888888889,
                                         1.1111111111,
                                         1.3333333333,
                                         2.6666666667,
                                         3.1111111111,
                                         4.6666666667,
                                         5.3333333333,
                                         6.,
                                         6.6666666667,
                                         4.4444444444,
                                         4.8888888889,
                                         2.4444444444,
                                         2.6666666667,
                                         3.,
                                         3.3333333333,
                                         6.6666666667,
                                         7.3333333333,
                                         11.,
                                         12.,
                                         13.,
                                         14.,
                                         9.3333333333,
                                         10.,
                                         5.,
                                         5.3333333333,
                                         5.6666666667,
                                         6.,
                                         12.,
                                         12.6666666667,
                                         19.,
                                         20.,
                                         21.,
                                         22.,
                                         14.6666666667,
                                         15.3333333333,
                                         7.6666666667,
                                         8.,
                                         4.6666666667,
                                         4.8888888889,
                                         9.7777777778,
                                         10.2222222222,
                                         15.3333333333,
                                         16.,
                                         16.6666666667,
                                         17.3333333333,
                                         11.5555555556,
                                         12.,
                                         6.,
                                         6.2222222222,
                                         2.7777777778,
                                         2.8888888889,
                                         5.7777777778,
                                         6.,
                                         9.,
                                         9.3333333333,
                                         9.6666666667,
                                         10.,
                                         6.6666666667,
                                         6.8888888889,
                                         3.4444444444,
                                         3.5555555556};
  const std::array<int, 4> in_shape = {{1, 6, 6, 2}};
  const auto padding = PaddingMode::VALID;
  const auto params = getPoolingParams<3, 1>(in_shape, padding);
  const DataType max_input_val = 2048.0;
  this->test_pool(exp_out, params, max_input_val);
}
TYPED_TEST(AvgWindow3Stride1Grad, SAME1x6x6x4) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {8.4722222222,
                                         9.1666666667,
                                         9.8611111111,
                                         10.5555555556,
                                         13.6388888889,
                                         14.6111111111,
                                         15.5833333333,
                                         16.5555555556,
                                         15.5,
                                         16.3333333333,
                                         17.1666666667,
                                         18.,
                                         18.8333333333,
                                         19.6666666667,
                                         20.5,
                                         21.3333333333,
                                         26.4166666667,
                                         27.3888888889,
                                         28.3611111111,
                                         29.3333333333,
                                         20.1388888889,
                                         20.8333333333,
                                         21.5277777778,
                                         22.2222222222,
                                         22.5277777778,
                                         23.5,
                                         24.4722222222,
                                         25.4444444444,
                                         34.0277777778,
                                         35.3888888889,
                                         36.75,
                                         38.1111111111,
                                         34.5,
                                         35.6666666667,
                                         36.8333333333,
                                         38.,
                                         39.1666666667,
                                         40.3333333333,
                                         41.5,
                                         42.6666666667,
                                         51.9166666667,
                                         53.2777777778,
                                         54.6388888889,
                                         56.,
                                         38.8611111111,
                                         39.8333333333,
                                         40.8055555556,
                                         41.7777777778,
                                         42.1666666667,
                                         43.,
                                         43.8333333333,
                                         44.6666666667,
                                         61.1666666667,
                                         62.3333333333,
                                         63.5,
                                         64.6666666667,
                                         57.,
                                         58.,
                                         59.,
                                         60.,
                                         61.,
                                         62.,
                                         63.,
                                         64.,
                                         76.5,
                                         77.6666666667,
                                         78.8333333333,
                                         80.,
                                         56.1666666667,
                                         57.,
                                         57.8333333333,
                                         58.6666666667,
                                         62.1666666667,
                                         63.,
                                         63.8333333333,
                                         64.6666666667,
                                         89.1666666667,
                                         90.3333333333,
                                         91.5,
                                         92.6666666667,
                                         81.,
                                         82.,
                                         83.,
                                         84.,
                                         85.,
                                         86.,
                                         87.,
                                         88.,
                                         104.5,
                                         105.6666666667,
                                         106.8333333333,
                                         108.,
                                         76.1666666667,
                                         77.,
                                         77.8333333333,
                                         78.6666666667,
                                         99.1944444444,
                                         100.1666666667,
                                         101.1388888889,
                                         102.1111111111,
                                         141.3611111111,
                                         142.7222222222,
                                         144.0833333333,
                                         145.4444444444,
                                         126.5,
                                         127.6666666667,
                                         128.8333333333,
                                         130.,
                                         131.1666666667,
                                         132.3333333333,
                                         133.5,
                                         134.6666666667,
                                         159.25,
                                         160.6111111111,
                                         161.9722222222,
                                         163.3333333333,
                                         115.5277777778,
                                         116.5,
                                         117.4722222222,
                                         118.4444444444,
                                         78.4722222222,
                                         79.1666666667,
                                         79.8611111111,
                                         80.5555555556,
                                         111.6388888889,
                                         112.6111111111,
                                         113.5833333333,
                                         114.5555555556,
                                         99.5,
                                         100.3333333333,
                                         101.1666666667,
                                         102.,
                                         102.8333333333,
                                         103.6666666667,
                                         104.5,
                                         105.3333333333,
                                         124.4166666667,
                                         125.3888888889,
                                         126.3611111111,
                                         127.3333333333,
                                         90.1388888889,
                                         90.8333333333,
                                         91.5277777778,
                                         92.2222222222};
  const std::array<int, 4> in_shape = {{1, 6, 6, 4}};
  const auto padding = PaddingMode::SAME;
  const auto params = getPoolingParams<3, 1>(in_shape, padding);
  const DataType max_input_val = 2048.0;
  this->test_pool(exp_out, params, max_input_val);
}
TYPED_TEST(AvgWindow3Stride1Grad, VALID1x6x6x4) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {0.1111111111,
                                         0.2222222222,
                                         0.3333333333,
                                         0.4444444444,
                                         0.6666666667,
                                         0.8888888889,
                                         1.1111111111,
                                         1.3333333333,
                                         1.6666666667,
                                         2.,
                                         2.3333333333,
                                         2.6666666667,
                                         3.,
                                         3.3333333333,
                                         3.6666666667,
                                         4.,
                                         2.4444444444,
                                         2.6666666667,
                                         2.8888888889,
                                         3.1111111111,
                                         1.4444444444,
                                         1.5555555556,
                                         1.6666666667,
                                         1.7777777778,
                                         2.,
                                         2.2222222222,
                                         2.4444444444,
                                         2.6666666667,
                                         4.8888888889,
                                         5.3333333333,
                                         5.7777777778,
                                         6.2222222222,
                                         8.6666666667,
                                         9.3333333333,
                                         10.,
                                         10.6666666667,
                                         11.3333333333,
                                         12.,
                                         12.6666666667,
                                         13.3333333333,
                                         8.4444444444,
                                         8.8888888889,
                                         9.3333333333,
                                         9.7777777778,
                                         4.6666666667,
                                         4.8888888889,
                                         5.1111111111,
                                         5.3333333333,
                                         5.6666666667,
                                         6.,
                                         6.3333333333,
                                         6.6666666667,
                                         12.6666666667,
                                         13.3333333333,
                                         14.,
                                         14.6666666667,
                                         21.,
                                         22.,
                                         23.,
                                         24.,
                                         25.,
                                         26.,
                                         27.,
                                         28.,
                                         18.,
                                         18.6666666667,
                                         19.3333333333,
                                         20.,
                                         9.6666666667,
                                         10.,
                                         10.3333333333,
                                         10.6666666667,
                                         11.,
                                         11.3333333333,
                                         11.6666666667,
                                         12.,
                                         23.3333333333,
                                         24.,
                                         24.6666666667,
                                         25.3333333333,
                                         37.,
                                         38.,
                                         39.,
                                         40.,
                                         41.,
                                         42.,
                                         43.,
                                         44.,
                                         28.6666666667,
                                         29.3333333333,
                                         30.,
                                         30.6666666667,
                                         15.,
                                         15.3333333333,
                                         15.6666666667,
                                         16.,
                                         9.1111111111,
                                         9.3333333333,
                                         9.5555555556,
                                         9.7777777778,
                                         19.1111111111,
                                         19.5555555556,
                                         20.,
                                         20.4444444444,
                                         30.,
                                         30.6666666667,
                                         31.3333333333,
                                         32.,
                                         32.6666666667,
                                         33.3333333333,
                                         34.,
                                         34.6666666667,
                                         22.6666666667,
                                         23.1111111111,
                                         23.5555555556,
                                         24.,
                                         11.7777777778,
                                         12.,
                                         12.2222222222,
                                         12.4444444444,
                                         5.4444444444,
                                         5.5555555556,
                                         5.6666666667,
                                         5.7777777778,
                                         11.3333333333,
                                         11.5555555556,
                                         11.7777777778,
                                         12.,
                                         17.6666666667,
                                         18.,
                                         18.3333333333,
                                         18.6666666667,
                                         19.,
                                         19.3333333333,
                                         19.6666666667,
                                         20.,
                                         13.1111111111,
                                         13.3333333333,
                                         13.5555555556,
                                         13.7777777778,
                                         6.7777777778,
                                         6.8888888889,
                                         7.,
                                         7.1111111111};
  const std::array<int, 4> in_shape = {{1, 6, 6, 4}};
  const auto padding = PaddingMode::VALID;
  const auto params = getPoolingParams<3, 1>(in_shape, padding);
  const DataType max_input_val = 2048.0;
  this->test_pool(exp_out, params, max_input_val);
}
TYPED_TEST(AvgWindow3Stride1Grad, SAME3x4x4x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      2.0833333333,  3.3611111111,  4.6111111111,  3.6111111111,  4.6944444444,
      7.1944444444,  8.9444444444,  6.8333333333,  9.6944444444,  14.1944444444,
      15.9444444444, 11.8333333333, 8.1944444444,  11.9166666667, 13.1666666667,
      9.7222222222,  13.1944444444, 18.9166666667, 20.1666666667, 14.7222222222,
      20.25,         28.9722222222, 30.7222222222, 22.3888888889, 25.25,
      35.9722222222, 37.7222222222, 27.3888888889, 19.3055555556, 27.4722222222,
      28.7222222222, 20.8333333333, 24.3055555556, 34.4722222222, 35.7222222222,
      25.8333333333, 35.8055555556, 50.75,         52.5,          37.9444444444,
      40.8055555556, 57.75,         59.5,          42.9444444444, 30.4166666667,
      43.0277777778, 44.2777777778, 31.9444444444};
  const std::array<int, 4> in_shape = {{3, 4, 4, 1}};
  const auto padding = PaddingMode::SAME;
  const auto params = getPoolingParams<3, 1>(in_shape, padding);
  const DataType max_input_val = 2048.0;
  this->test_pool(exp_out, params, max_input_val);
}
TYPED_TEST(AvgWindow3Stride1Grad, VALID3x4x4x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      0.1111111111, 0.3333333333, 0.3333333333, 0.2222222222, 0.4444444444,
      1.1111111111, 1.1111111111, 0.6666666667, 0.4444444444, 1.1111111111,
      1.1111111111, 0.6666666667, 0.3333333333, 0.7777777778, 0.7777777778,
      0.4444444444, 0.5555555556, 1.2222222222, 1.2222222222, 0.6666666667,
      1.3333333333, 2.8888888889, 2.8888888889, 1.5555555556, 1.3333333333,
      2.8888888889, 2.8888888889, 1.5555555556, 0.7777777778, 1.6666666667,
      1.6666666667, 0.8888888889, 1.,           2.1111111111, 2.1111111111,
      1.1111111111, 2.2222222222, 4.6666666667, 4.6666666667, 2.4444444444,
      2.2222222222, 4.6666666667, 4.6666666667, 2.4444444444, 1.2222222222,
      2.5555555556, 2.5555555556, 1.3333333333};
  const std::array<int, 4> in_shape = {{3, 4, 4, 1}};
  const auto padding = PaddingMode::VALID;
  const auto params = getPoolingParams<3, 1>(in_shape, padding);
  const DataType max_input_val = 2048.0;
  this->test_pool(exp_out, params, max_input_val);
}
TYPED_TEST(AvgWindow3Stride1Grad, SAME3x4x4x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      3.4722222222,   4.1666666667,  5.75,           6.7222222222,
      8.25,           9.2222222222,  6.5277777778,   7.2222222222,
      8.4166666667,   9.3888888889,  13.0277777778,  14.3888888889,
      16.5277777778,  17.8888888889, 12.6944444444,  13.6666666667,
      18.4166666667,  19.3888888889, 27.0277777778,  28.3888888889,
      30.5277777778,  31.8888888889, 22.6944444444,  23.6666666667,
      15.6944444444,  16.3888888889, 22.8611111111,  23.8333333333,
      25.3611111111,  26.3333333333, 18.75,          19.4444444444,
      25.6944444444,  26.3888888889, 36.8611111111,  37.8333333333,
      39.3611111111,  40.3333333333, 28.75,          29.4444444444,
      39.5277777778,  40.5,          56.5833333333,  57.9444444444,
      60.0833333333,  61.4444444444, 43.8055555556,  44.7777777778,
      49.5277777778,  50.5,          70.5833333333,  71.9444444444,
      74.0833333333,  75.4444444444, 53.8055555556,  54.7777777778,
      37.9166666667,  38.6111111111, 53.9722222222,  54.9444444444,
      56.4722222222,  57.4444444444, 40.9722222222,  41.6666666667,
      47.9166666667,  48.6111111111, 67.9722222222,  68.9444444444,
      70.4722222222,  71.4444444444, 50.9722222222,  51.6666666667,
      70.6388888889,  71.6111111111, 100.1388888889, 101.5,
      103.6388888889, 105.,          74.9166666667,  75.8888888889,
      80.6388888889,  81.6111111111, 114.1388888889, 115.5,
      117.6388888889, 119.,          84.9166666667,  85.8888888889,
      60.1388888889,  60.8333333333, 85.0833333333,  86.0555555556,
      87.5833333333,  88.5555555556, 63.1944444444,  63.8888888889};
  const std::array<int, 4> in_shape = {{3, 4, 4, 2}};
  const auto padding = PaddingMode::SAME;
  const auto params = getPoolingParams<3, 1>(in_shape, padding);
  const DataType max_input_val = 2048.0;
  this->test_pool(exp_out, params, max_input_val);
}
TYPED_TEST(AvgWindow3Stride1Grad, VALID3x4x4x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      0.1111111111, 0.2222222222, 0.4444444444, 0.6666666667, 0.4444444444,
      0.6666666667, 0.3333333333, 0.4444444444, 0.6666666667, 0.8888888889,
      1.7777777778, 2.2222222222, 1.7777777778, 2.2222222222, 1.1111111111,
      1.3333333333, 0.6666666667, 0.8888888889, 1.7777777778, 2.2222222222,
      1.7777777778, 2.2222222222, 1.1111111111, 1.3333333333, 0.5555555556,
      0.6666666667, 1.3333333333, 1.5555555556, 1.3333333333, 1.5555555556,
      0.7777777778, 0.8888888889, 1.,           1.1111111111, 2.2222222222,
      2.4444444444, 2.2222222222, 2.4444444444, 1.2222222222, 1.3333333333,
      2.4444444444, 2.6666666667, 5.3333333333, 5.7777777778, 5.3333333333,
      5.7777777778, 2.8888888889, 3.1111111111, 2.4444444444, 2.6666666667,
      5.3333333333, 5.7777777778, 5.3333333333, 5.7777777778, 2.8888888889,
      3.1111111111, 1.4444444444, 1.5555555556, 3.1111111111, 3.3333333333,
      3.1111111111, 3.3333333333, 1.6666666667, 1.7777777778, 1.8888888889,
      2.,           4.,           4.2222222222, 4.,           4.2222222222,
      2.1111111111, 2.2222222222, 4.2222222222, 4.4444444444, 8.8888888889,
      9.3333333333, 8.8888888889, 9.3333333333, 4.6666666667, 4.8888888889,
      4.2222222222, 4.4444444444, 8.8888888889, 9.3333333333, 8.8888888889,
      9.3333333333, 4.6666666667, 4.8888888889, 2.3333333333, 2.4444444444,
      4.8888888889, 5.1111111111, 4.8888888889, 5.1111111111, 2.5555555556,
      2.6666666667};
  const std::array<int, 4> in_shape = {{3, 4, 4, 2}};
  const auto padding = PaddingMode::VALID;
  const auto params = getPoolingParams<3, 1>(in_shape, padding);
  const DataType max_input_val = 2048.0;
  this->test_pool(exp_out, params, max_input_val);
}
TYPED_TEST(AvgWindow3Stride1Grad, SAME3x4x4x4) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      6.25,           6.9444444444,   7.6388888889,   8.3333333333,
      10.5277777778,  11.5,           12.4722222222,  13.4444444444,
      15.5277777778,  16.5,           17.4722222222,  18.4444444444,
      12.3611111111,  13.0555555556,  13.75,          14.4444444444,
      15.8611111111,  16.8333333333,  17.8055555556,  18.7777777778,
      24.6944444444,  26.0555555556,  27.4166666667,  28.7777777778,
      31.6944444444,  33.0555555556,  34.4166666667,  35.7777777778,
      24.4166666667,  25.3888888889,  26.3611111111,  27.3333333333,
      35.8611111111,  36.8333333333,  37.8055555556,  38.7777777778,
      52.6944444444,  54.0555555556,  55.4166666667,  56.7777777778,
      59.6944444444,  61.0555555556,  62.4166666667,  63.7777777778,
      44.4166666667,  45.3888888889,  46.3611111111,  47.3333333333,
      30.6944444444,  31.3888888889,  32.0833333333,  32.7777777778,
      44.75,          45.7222222222,  46.6944444444,  47.6666666667,
      49.75,          50.7222222222,  51.6944444444,  52.6666666667,
      36.8055555556,  37.5,           38.1944444444,  38.8888888889,
      50.6944444444,  51.3888888889,  52.0833333333,  52.7777777778,
      72.75,          73.7222222222,  74.6944444444,  75.6666666667,
      77.75,          78.7222222222,  79.6944444444,  80.6666666667,
      56.8055555556,  57.5,           58.1944444444,  58.8888888889,
      78.0833333333,  79.0555555556,  80.0277777778,  81.,
      111.8055555556, 113.1666666667, 114.5277777778, 115.8888888889,
      118.8055555556, 120.1666666667, 121.5277777778, 122.8888888889,
      86.6388888889,  87.6111111111,  88.5833333333,  89.5555555556,
      98.0833333333,  99.0555555556,  100.0277777778, 101.,
      139.8055555556, 141.1666666667, 142.5277777778, 143.8888888889,
      146.8055555556, 148.1666666667, 149.5277777778, 150.8888888889,
      106.6388888889, 107.6111111111, 108.5833333333, 109.5555555556,
      75.1388888889,  75.8333333333,  76.5277777778,  77.2222222222,
      106.9722222222, 107.9444444444, 108.9166666667, 109.8888888889,
      111.9722222222, 112.9444444444, 113.9166666667, 114.8888888889,
      81.25,          81.9444444444,  82.6388888889,  83.3333333333,
      95.1388888889,  95.8333333333,  96.5277777778,  97.2222222222,
      134.9722222222, 135.9444444444, 136.9166666667, 137.8888888889,
      139.9722222222, 140.9444444444, 141.9166666667, 142.8888888889,
      101.25,         101.9444444444, 102.6388888889, 103.3333333333,
      140.3055555556, 141.2777777778, 142.25,         143.2222222222,
      198.9166666667, 200.2777777778, 201.6388888889, 203.,
      205.9166666667, 207.2777777778, 208.6388888889, 210.,
      148.8611111111, 149.8333333333, 150.8055555556, 151.7777777778,
      160.3055555556, 161.2777777778, 162.25,         163.2222222222,
      226.9166666667, 228.2777777778, 229.6388888889, 231.,
      233.9166666667, 235.2777777778, 236.6388888889, 238.,
      168.8611111111, 169.8333333333, 170.8055555556, 171.7777777778,
      119.5833333333, 120.2777777778, 120.9722222222, 121.6666666667,
      169.1944444444, 170.1666666667, 171.1388888889, 172.1111111111,
      174.1944444444, 175.1666666667, 176.1388888889, 177.1111111111,
      125.6944444444, 126.3888888889, 127.0833333333, 127.7777777778};
  const std::array<int, 4> in_shape = {{3, 4, 4, 4}};
  const auto padding = PaddingMode::SAME;
  const auto params = getPoolingParams<3, 1>(in_shape, padding);
  const DataType max_input_val = 2048.0;
  this->test_pool(exp_out, params, max_input_val);
}
TYPED_TEST(AvgWindow3Stride1Grad, VALID3x4x4x4) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {0.1111111111,
                                         0.2222222222,
                                         0.3333333333,
                                         0.4444444444,
                                         0.6666666667,
                                         0.8888888889,
                                         1.1111111111,
                                         1.3333333333,
                                         0.6666666667,
                                         0.8888888889,
                                         1.1111111111,
                                         1.3333333333,
                                         0.5555555556,
                                         0.6666666667,
                                         0.7777777778,
                                         0.8888888889,
                                         1.1111111111,
                                         1.3333333333,
                                         1.5555555556,
                                         1.7777777778,
                                         3.1111111111,
                                         3.5555555556,
                                         4.,
                                         4.4444444444,
                                         3.1111111111,
                                         3.5555555556,
                                         4.,
                                         4.4444444444,
                                         2.,
                                         2.2222222222,
                                         2.4444444444,
                                         2.6666666667,
                                         1.1111111111,
                                         1.3333333333,
                                         1.5555555556,
                                         1.7777777778,
                                         3.1111111111,
                                         3.5555555556,
                                         4.,
                                         4.4444444444,
                                         3.1111111111,
                                         3.5555555556,
                                         4.,
                                         4.4444444444,
                                         2.,
                                         2.2222222222,
                                         2.4444444444,
                                         2.6666666667,
                                         1.,
                                         1.1111111111,
                                         1.2222222222,
                                         1.3333333333,
                                         2.4444444444,
                                         2.6666666667,
                                         2.8888888889,
                                         3.1111111111,
                                         2.4444444444,
                                         2.6666666667,
                                         2.8888888889,
                                         3.1111111111,
                                         1.4444444444,
                                         1.5555555556,
                                         1.6666666667,
                                         1.7777777778,
                                         1.8888888889,
                                         2.,
                                         2.1111111111,
                                         2.2222222222,
                                         4.2222222222,
                                         4.4444444444,
                                         4.6666666667,
                                         4.8888888889,
                                         4.2222222222,
                                         4.4444444444,
                                         4.6666666667,
                                         4.8888888889,
                                         2.3333333333,
                                         2.4444444444,
                                         2.5555555556,
                                         2.6666666667,
                                         4.6666666667,
                                         4.8888888889,
                                         5.1111111111,
                                         5.3333333333,
                                         10.2222222222,
                                         10.6666666667,
                                         11.1111111111,
                                         11.5555555556,
                                         10.2222222222,
                                         10.6666666667,
                                         11.1111111111,
                                         11.5555555556,
                                         5.5555555556,
                                         5.7777777778,
                                         6.,
                                         6.2222222222,
                                         4.6666666667,
                                         4.8888888889,
                                         5.1111111111,
                                         5.3333333333,
                                         10.2222222222,
                                         10.6666666667,
                                         11.1111111111,
                                         11.5555555556,
                                         10.2222222222,
                                         10.6666666667,
                                         11.1111111111,
                                         11.5555555556,
                                         5.5555555556,
                                         5.7777777778,
                                         6.,
                                         6.2222222222,
                                         2.7777777778,
                                         2.8888888889,
                                         3.,
                                         3.1111111111,
                                         6.,
                                         6.2222222222,
                                         6.4444444444,
                                         6.6666666667,
                                         6.,
                                         6.2222222222,
                                         6.4444444444,
                                         6.6666666667,
                                         3.2222222222,
                                         3.3333333333,
                                         3.4444444444,
                                         3.5555555556,
                                         3.6666666667,
                                         3.7777777778,
                                         3.8888888889,
                                         4.,
                                         7.7777777778,
                                         8.,
                                         8.2222222222,
                                         8.4444444444,
                                         7.7777777778,
                                         8.,
                                         8.2222222222,
                                         8.4444444444,
                                         4.1111111111,
                                         4.2222222222,
                                         4.3333333333,
                                         4.4444444444,
                                         8.2222222222,
                                         8.4444444444,
                                         8.6666666667,
                                         8.8888888889,
                                         17.3333333333,
                                         17.7777777778,
                                         18.2222222222,
                                         18.6666666667,
                                         17.3333333333,
                                         17.7777777778,
                                         18.2222222222,
                                         18.6666666667,
                                         9.1111111111,
                                         9.3333333333,
                                         9.5555555556,
                                         9.7777777778,
                                         8.2222222222,
                                         8.4444444444,
                                         8.6666666667,
                                         8.8888888889,
                                         17.3333333333,
                                         17.7777777778,
                                         18.2222222222,
                                         18.6666666667,
                                         17.3333333333,
                                         17.7777777778,
                                         18.2222222222,
                                         18.6666666667,
                                         9.1111111111,
                                         9.3333333333,
                                         9.5555555556,
                                         9.7777777778,
                                         4.5555555556,
                                         4.6666666667,
                                         4.7777777778,
                                         4.8888888889,
                                         9.5555555556,
                                         9.7777777778,
                                         10.,
                                         10.2222222222,
                                         9.5555555556,
                                         9.7777777778,
                                         10.,
                                         10.2222222222,
                                         5.,
                                         5.1111111111,
                                         5.2222222222,
                                         5.3333333333};
  const std::array<int, 4> in_shape = {{3, 4, 4, 4}};
  const auto padding = PaddingMode::VALID;
  const auto params = getPoolingParams<3, 1>(in_shape, padding);
  const DataType max_input_val = 2048.0;
  this->test_pool(exp_out, params, max_input_val);
}
TYPED_TEST(AvgWindow3Stride1Grad, SAME3x4x5x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      2.3611111111,  3.75,          4.1666666667,  5.9722222222,  4.5833333333,
      5.5277777778,  8.3611111111,  8.5,           11.4722222222, 8.6388888889,
      11.7777777778, 17.1111111111, 16.,           20.2222222222, 14.8888888889,
      10.,           14.4444444444, 13.3333333333, 16.6666666667, 12.2222222222,
      16.25,         23.1944444444, 20.8333333333, 25.4166666667, 18.4722222222,
      24.9722222222, 35.5833333333, 31.8333333333, 38.6944444444, 28.0833333333,
      31.2222222222, 44.3333333333, 39.3333333333, 47.4444444444, 34.3333333333,
      23.8888888889, 33.8888888889, 30.,           36.1111111111, 26.1111111111,
      30.1388888889, 42.6388888889, 37.5,          44.8611111111, 32.3611111111,
      44.4166666667, 62.8055555556, 55.1666666667, 65.9166666667, 47.5277777778,
      50.6666666667, 71.5555555556, 62.6666666667, 74.6666666667, 53.7777777778,
      37.7777777778, 53.3333333333, 46.6666666667, 55.5555555556, 40.,
  };
  const std::array<int, 4> in_shape = {{3, 4, 5, 1}};
  const auto padding = PaddingMode::SAME;
  const auto params = getPoolingParams<3, 1>(in_shape, padding);
  const DataType max_input_val = 2048.0;
  this->test_pool(exp_out, params, max_input_val);
}
TYPED_TEST(AvgWindow3Stride1Grad, VALID3x4x5x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      0.1111111111, 0.3333333333, 0.6666666667,  0.5555555556, 0.3333333333,
      0.5555555556, 1.3333333333, 2.3333333333,  1.7777777778, 1.,
      0.5555555556, 1.3333333333, 2.3333333333,  1.7777777778, 1.,
      0.4444444444, 1.,           1.6666666667,  1.2222222222, 0.6666666667,
      0.7777777778, 1.6666666667, 2.6666666667,  1.8888888889, 1.,
      1.8888888889, 4.,           6.3333333333,  4.4444444444, 2.3333333333,
      1.8888888889, 4.,           6.3333333333,  4.4444444444, 2.3333333333,
      1.1111111111, 2.3333333333, 3.6666666667,  2.5555555556, 1.3333333333,
      1.4444444444, 3.,           4.6666666667,  3.2222222222, 1.6666666667,
      3.2222222222, 6.6666666667, 10.3333333333, 7.1111111111, 3.6666666667,
      3.2222222222, 6.6666666667, 10.3333333333, 7.1111111111, 3.6666666667,
      1.7777777778, 3.6666666667, 5.6666666667,  3.8888888889, 2.,
  };
  const std::array<int, 4> in_shape = {{3, 4, 5, 1}};
  const auto padding = PaddingMode::VALID;
  const auto params = getPoolingParams<3, 1>(in_shape, padding);
  const DataType max_input_val = 2048.0;
  this->test_pool(exp_out, params, max_input_val);
}
TYPED_TEST(AvgWindow3Stride1Grad, SAME3x4x5x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      4.0277777778,
      4.7222222222,
      6.5277777778,
      7.5,
      7.5,
      8.3333333333,
      10.9722222222,
      11.9444444444,
      8.4722222222,
      9.1666666667,
      10.0833333333,
      11.0555555556,
      15.3611111111,
      16.7222222222,
      15.8333333333,
      17.,
      21.5833333333,
      22.9444444444,
      16.3055555556,
      17.2777777778,
      22.5833333333,
      23.5555555556,
      32.8611111111,
      34.2222222222,
      30.8333333333,
      32.,
      39.0833333333,
      40.4444444444,
      28.8055555556,
      29.7777777778,
      19.3055555556,
      20.,
      27.9166666667,
      28.8888888889,
      25.8333333333,
      26.6666666667,
      32.3611111111,
      33.3333333333,
      23.75,
      24.4444444444,
      31.8055555556,
      32.5,
      45.4166666667,
      46.3888888889,
      40.8333333333,
      41.6666666667,
      49.8611111111,
      50.8333333333,
      36.25,
      36.9444444444,
      48.9722222222,
      49.9444444444,
      69.8055555556,
      71.1666666667,
      62.5,
      63.6666666667,
      76.0277777778,
      77.3888888889,
      55.1944444444,
      56.1666666667,
      61.4722222222,
      62.4444444444,
      87.3055555556,
      88.6666666667,
      77.5,
      78.6666666667,
      93.5277777778,
      94.8888888889,
      67.6944444444,
      68.6666666667,
      47.0833333333,
      47.7777777778,
      66.8055555556,
      67.7777777778,
      59.1666666667,
      60.,
      71.25,
      72.2222222222,
      51.5277777778,
      52.2222222222,
      59.5833333333,
      60.2777777778,
      84.3055555556,
      85.2777777778,
      74.1666666667,
      75.,
      88.75,
      89.7222222222,
      64.0277777778,
      64.7222222222,
      87.8611111111,
      88.8333333333,
      124.25,
      125.6111111111,
      109.1666666667,
      110.3333333333,
      130.4722222222,
      131.8333333333,
      94.0833333333,
      95.0555555556,
      100.3611111111,
      101.3333333333,
      141.75,
      143.1111111111,
      124.1666666667,
      125.3333333333,
      147.9722222222,
      149.3333333333,
      106.5833333333,
      107.5555555556,
      74.8611111111,
      75.5555555556,
      105.6944444444,
      106.6666666667,
      92.5,
      93.3333333333,
      110.1388888889,
      111.1111111111,
      79.3055555556,
      80.,
  };
  const std::array<int, 4> in_shape = {{3, 4, 5, 2}};
  const auto padding = PaddingMode::SAME;
  const auto params = getPoolingParams<3, 1>(in_shape, padding);
  const DataType max_input_val = 2048.0;
  this->test_pool(exp_out, params, max_input_val);
}
TYPED_TEST(AvgWindow3Stride1Grad, VALID3x4x5x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      0.1111111111,
      0.2222222222,
      0.4444444444,
      0.6666666667,
      1.,
      1.3333333333,
      0.8888888889,
      1.1111111111,
      0.5555555556,
      0.6666666667,
      0.8888888889,
      1.1111111111,
      2.2222222222,
      2.6666666667,
      4.,
      4.6666666667,
      3.1111111111,
      3.5555555556,
      1.7777777778,
      2.,
      0.8888888889,
      1.1111111111,
      2.2222222222,
      2.6666666667,
      4.,
      4.6666666667,
      3.1111111111,
      3.5555555556,
      1.7777777778,
      2.,
      0.7777777778,
      0.8888888889,
      1.7777777778,
      2.,
      3.,
      3.3333333333,
      2.2222222222,
      2.4444444444,
      1.2222222222,
      1.3333333333,
      1.4444444444,
      1.5555555556,
      3.1111111111,
      3.3333333333,
      5.,
      5.3333333333,
      3.5555555556,
      3.7777777778,
      1.8888888889,
      2.,
      3.5555555556,
      3.7777777778,
      7.5555555556,
      8.,
      12.,
      12.6666666667,
      8.4444444444,
      8.8888888889,
      4.4444444444,
      4.6666666667,
      3.5555555556,
      3.7777777778,
      7.5555555556,
      8.,
      12.,
      12.6666666667,
      8.4444444444,
      8.8888888889,
      4.4444444444,
      4.6666666667,
      2.1111111111,
      2.2222222222,
      4.4444444444,
      4.6666666667,
      7.,
      7.3333333333,
      4.8888888889,
      5.1111111111,
      2.5555555556,
      2.6666666667,
      2.7777777778,
      2.8888888889,
      5.7777777778,
      6.,
      9.,
      9.3333333333,
      6.2222222222,
      6.4444444444,
      3.2222222222,
      3.3333333333,
      6.2222222222,
      6.4444444444,
      12.8888888889,
      13.3333333333,
      20.,
      20.6666666667,
      13.7777777778,
      14.2222222222,
      7.1111111111,
      7.3333333333,
      6.2222222222,
      6.4444444444,
      12.8888888889,
      13.3333333333,
      20.,
      20.6666666667,
      13.7777777778,
      14.2222222222,
      7.1111111111,
      7.3333333333,
      3.4444444444,
      3.5555555556,
      7.1111111111,
      7.3333333333,
      11.,
      11.3333333333,
      7.5555555556,
      7.7777777778,
      3.8888888889,
      4.,
  };
  const std::array<int, 4> in_shape = {{3, 4, 5, 2}};
  const auto padding = PaddingMode::VALID;
  const auto params = getPoolingParams<3, 1>(in_shape, padding);
  const DataType max_input_val = 2048.0;
  this->test_pool(exp_out, params, max_input_val);
}
TYPED_TEST(AvgWindow3Stride1Grad, SAME3x4x5x4) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      7.3611111111,   8.0555555556,
      8.75,           9.4444444444,
      12.0833333333,  13.0555555556,
      14.0277777778,  15.,
      14.1666666667,  15.,
      15.8333333333,  16.6666666667,
      20.9722222222,  21.9444444444,
      22.9166666667,  23.8888888889,
      16.25,          16.9444444444,
      17.6388888889,  18.3333333333,
      19.1944444444,  20.1666666667,
      21.1388888889,  22.1111111111,
      29.3611111111,  30.7222222222,
      32.0833333333,  33.4444444444,
      30.5,           31.6666666667,
      32.8333333333,  34.,
      41.8055555556,  43.1666666667,
      44.5277777778,  45.8888888889,
      31.6388888889,  32.6111111111,
      33.5833333333,  34.5555555556,
      44.1944444444,  45.1666666667,
      46.1388888889,  47.1111111111,
      64.3611111111,  65.7222222222,
      67.0833333333,  68.4444444444,
      60.5,           61.6666666667,
      62.8333333333,  64.,
      76.8055555556,  78.1666666667,
      79.5277777778,  80.8888888889,
      56.6388888889,  57.6111111111,
      58.5833333333,  59.5555555556,
      37.9166666667,  38.6111111111,
      39.3055555556,  40.,
      54.8611111111,  55.8333333333,
      56.8055555556,  57.7777777778,
      50.8333333333,  51.6666666667,
      52.5,           53.3333333333,
      63.75,          64.7222222222,
      65.6944444444,  66.6666666667,
      46.8055555556,  47.5,
      48.1944444444,  48.8888888889,
      62.9166666667,  63.6111111111,
      64.3055555556,  65.,
      89.8611111111,  90.8333333333,
      91.8055555556,  92.7777777778,
      80.8333333333,  81.6666666667,
      82.5,           83.3333333333,
      98.75,          99.7222222222,
      100.6944444444, 101.6666666667,
      71.8055555556,  72.5,
      73.1944444444,  73.8888888889,
      96.9722222222,  97.9444444444,
      98.9166666667,  99.8888888889,
      138.25,         139.6111111111,
      140.9722222222, 142.3333333333,
      123.8333333333, 125.,
      126.1666666667, 127.3333333333,
      150.6944444444, 152.0555555556,
      153.4166666667, 154.7777777778,
      109.4166666667, 110.3888888889,
      111.3611111111, 112.3333333333,
      121.9722222222, 122.9444444444,
      123.9166666667, 124.8888888889,
      173.25,         174.6111111111,
      175.9722222222, 177.3333333333,
      153.8333333333, 155.,
      156.1666666667, 157.3333333333,
      185.6944444444, 187.0555555556,
      188.4166666667, 189.7777777778,
      134.4166666667, 135.3888888889,
      136.3611111111, 137.3333333333,
      93.4722222222,  94.1666666667,
      94.8611111111,  95.5555555556,
      132.6388888889, 133.6111111111,
      134.5833333333, 135.5555555556,
      117.5,          118.3333333333,
      119.1666666667, 120.,
      141.5277777778, 142.5,
      143.4722222222, 144.4444444444,
      102.3611111111, 103.0555555556,
      103.75,         104.4444444444,
      118.4722222222, 119.1666666667,
      119.8611111111, 120.5555555556,
      167.6388888889, 168.6111111111,
      169.5833333333, 170.5555555556,
      147.5,          148.3333333333,
      149.1666666667, 150.,
      176.5277777778, 177.5,
      178.4722222222, 179.4444444444,
      127.3611111111, 128.0555555556,
      128.75,         129.4444444444,
      174.75,         175.7222222222,
      176.6944444444, 177.6666666667,
      247.1388888889, 248.5,
      249.8611111111, 251.2222222222,
      217.1666666667, 218.3333333333,
      219.5,          220.6666666667,
      259.5833333333, 260.9444444444,
      262.3055555556, 263.6666666667,
      187.1944444444, 188.1666666667,
      189.1388888889, 190.1111111111,
      199.75,         200.7222222222,
      201.6944444444, 202.6666666667,
      282.1388888889, 283.5,
      284.8611111111, 286.2222222222,
      247.1666666667, 248.3333333333,
      249.5,          250.6666666667,
      294.5833333333, 295.9444444444,
      297.3055555556, 298.6666666667,
      212.1944444444, 213.1666666667,
      214.1388888889, 215.1111111111,
      149.0277777778, 149.7222222222,
      150.4166666667, 151.1111111111,
      210.4166666667, 211.3888888889,
      212.3611111111, 213.3333333333,
      184.1666666667, 185.,
      185.8333333333, 186.6666666667,
      219.3055555556, 220.2777777778,
      221.25,         222.2222222222,
      157.9166666667, 158.6111111111,
      159.3055555556, 160.,
  };
  const std::array<int, 4> in_shape = {{3, 4, 5, 4}};
  const auto padding = PaddingMode::SAME;
  const auto params = getPoolingParams<3, 1>(in_shape, padding);
  const DataType max_input_val = 2048.0;
  this->test_pool(exp_out, params, max_input_val);
}
TYPED_TEST(AvgWindow3Stride1Grad, VALID3x4x5x4) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      0.1111111111,
      0.2222222222,
      0.3333333333,
      0.4444444444,
      0.6666666667,
      0.8888888889,
      1.1111111111,
      1.3333333333,
      1.6666666667,
      2.,
      2.3333333333,
      2.6666666667,
      1.5555555556,
      1.7777777778,
      2.,
      2.2222222222,
      1.,
      1.1111111111,
      1.2222222222,
      1.3333333333,
      1.5555555556,
      1.7777777778,
      2.,
      2.2222222222,
      4.,
      4.4444444444,
      4.8888888889,
      5.3333333333,
      7.3333333333,
      8.,
      8.6666666667,
      9.3333333333,
      5.7777777778,
      6.2222222222,
      6.6666666667,
      7.1111111111,
      3.3333333333,
      3.5555555556,
      3.7777777778,
      4.,
      1.5555555556,
      1.7777777778,
      2.,
      2.2222222222,
      4.,
      4.4444444444,
      4.8888888889,
      5.3333333333,
      7.3333333333,
      8.,
      8.6666666667,
      9.3333333333,
      5.7777777778,
      6.2222222222,
      6.6666666667,
      7.1111111111,
      3.3333333333,
      3.5555555556,
      3.7777777778,
      4.,
      1.4444444444,
      1.5555555556,
      1.6666666667,
      1.7777777778,
      3.3333333333,
      3.5555555556,
      3.7777777778,
      4.,
      5.6666666667,
      6.,
      6.3333333333,
      6.6666666667,
      4.2222222222,
      4.4444444444,
      4.6666666667,
      4.8888888889,
      2.3333333333,
      2.4444444444,
      2.5555555556,
      2.6666666667,
      2.7777777778,
      2.8888888889,
      3.,
      3.1111111111,
      6.,
      6.2222222222,
      6.4444444444,
      6.6666666667,
      9.6666666667,
      10.,
      10.3333333333,
      10.6666666667,
      6.8888888889,
      7.1111111111,
      7.3333333333,
      7.5555555556,
      3.6666666667,
      3.7777777778,
      3.8888888889,
      4.,
      6.8888888889,
      7.1111111111,
      7.3333333333,
      7.5555555556,
      14.6666666667,
      15.1111111111,
      15.5555555556,
      16.,
      23.3333333333,
      24.,
      24.6666666667,
      25.3333333333,
      16.4444444444,
      16.8888888889,
      17.3333333333,
      17.7777777778,
      8.6666666667,
      8.8888888889,
      9.1111111111,
      9.3333333333,
      6.8888888889,
      7.1111111111,
      7.3333333333,
      7.5555555556,
      14.6666666667,
      15.1111111111,
      15.5555555556,
      16.,
      23.3333333333,
      24.,
      24.6666666667,
      25.3333333333,
      16.4444444444,
      16.8888888889,
      17.3333333333,
      17.7777777778,
      8.6666666667,
      8.8888888889,
      9.1111111111,
      9.3333333333,
      4.1111111111,
      4.2222222222,
      4.3333333333,
      4.4444444444,
      8.6666666667,
      8.8888888889,
      9.1111111111,
      9.3333333333,
      13.6666666667,
      14.,
      14.3333333333,
      14.6666666667,
      9.5555555556,
      9.7777777778,
      10.,
      10.2222222222,
      5.,
      5.1111111111,
      5.2222222222,
      5.3333333333,
      5.4444444444,
      5.5555555556,
      5.6666666667,
      5.7777777778,
      11.3333333333,
      11.5555555556,
      11.7777777778,
      12.,
      17.6666666667,
      18.,
      18.3333333333,
      18.6666666667,
      12.2222222222,
      12.4444444444,
      12.6666666667,
      12.8888888889,
      6.3333333333,
      6.4444444444,
      6.5555555556,
      6.6666666667,
      12.2222222222,
      12.4444444444,
      12.6666666667,
      12.8888888889,
      25.3333333333,
      25.7777777778,
      26.2222222222,
      26.6666666667,
      39.3333333333,
      40.,
      40.6666666667,
      41.3333333333,
      27.1111111111,
      27.5555555556,
      28.,
      28.4444444444,
      14.,
      14.2222222222,
      14.4444444444,
      14.6666666667,
      12.2222222222,
      12.4444444444,
      12.6666666667,
      12.8888888889,
      25.3333333333,
      25.7777777778,
      26.2222222222,
      26.6666666667,
      39.3333333333,
      40.,
      40.6666666667,
      41.3333333333,
      27.1111111111,
      27.5555555556,
      28.,
      28.4444444444,
      14.,
      14.2222222222,
      14.4444444444,
      14.6666666667,
      6.7777777778,
      6.8888888889,
      7.,
      7.1111111111,
      14.,
      14.2222222222,
      14.4444444444,
      14.6666666667,
      21.6666666667,
      22.,
      22.3333333333,
      22.6666666667,
      14.8888888889,
      15.1111111111,
      15.3333333333,
      15.5555555556,
      7.6666666667,
      7.7777777778,
      7.8888888889,
      8.,
  };
  const std::array<int, 4> in_shape = {{3, 4, 5, 4}};
  const auto padding = PaddingMode::VALID;
  const auto params = getPoolingParams<3, 1>(in_shape, padding);
  const DataType max_input_val = 2048.0;
  this->test_pool(exp_out, params, max_input_val);
}
TYPED_TEST(AvgWindow3Stride1Grad, SAME3x4x6x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      2.6388888889,  4.1388888889,  4.5,           5.3333333333,  7.3333333333,
      5.5555555556,  6.3611111111,  9.5277777778,  9.5,           10.6666666667,
      14.,           10.4444444444, 13.8611111111, 20.0277777778, 18.5,
      19.6666666667, 24.5,          17.9444444444, 11.8055555556, 16.9722222222,
      15.5,          16.3333333333, 20.1666666667, 14.7222222222, 19.3055555556,
      27.4722222222, 24.5,          25.3333333333, 30.6666666667, 22.2222222222,
      29.6944444444, 42.1944444444, 37.5,          38.6666666667, 46.6666666667,
      33.7777777778, 37.1944444444, 52.6944444444, 46.5,          47.6666666667,
      57.1666666667, 41.2777777778, 28.4722222222, 40.3055555556, 35.5,
      36.3333333333, 43.5,          31.3888888889, 35.9722222222, 50.8055555556,
      44.5,          45.3333333333, 54.,           38.8888888889, 53.0277777778,
      74.8611111111, 65.5,          66.6666666667, 79.3333333333, 57.1111111111,
      60.5277777778, 85.3611111111, 74.5,          75.6666666667, 89.8333333333,
      64.6111111111, 45.1388888889, 63.6388888889, 55.5,          56.3333333333,
      66.8333333333, 48.0555555556};
  const std::array<int, 4> in_shape = {{3, 4, 6, 1}};
  const auto padding = PaddingMode::SAME;
  const auto params = getPoolingParams<3, 1>(in_shape, padding);
  const DataType max_input_val = 2048.0;
  this->test_pool(exp_out, params, max_input_val);
}
TYPED_TEST(AvgWindow3Stride1Grad, VALID3x4x6x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      0.1111111111, 0.3333333333, 0.6666666667,
      1.,           0.7777777778, 0.4444444444,
      0.6666666667, 1.5555555556, 2.6666666667,
      3.3333333333, 2.4444444444, 1.3333333333,
      0.6666666667, 1.5555555556, 2.6666666667,
      3.3333333333, 2.4444444444, 1.3333333333,
      0.5555555556, 1.2222222222, 2.,
      2.3333333333, 1.6666666667, 0.8888888889,
      1.,           2.1111111111, 3.3333333333,
      3.6666666667, 2.5555555556, 1.3333333333,
      2.4444444444, 5.1111111111, 8.,
      8.6666666667, 6.,           3.1111111111,
      2.4444444444, 5.1111111111, 8.,
      8.6666666667, 6.,           3.1111111111,
      1.4444444444, 3.,           4.6666666667,
      5.,           3.4444444444, 1.7777777778,
      1.8888888889, 3.8888888889, 6.,
      6.3333333333, 4.3333333333, 2.2222222222,
      4.2222222222, 8.6666666667, 13.3333333333,
      14.,          9.5555555556, 4.8888888889,
      4.2222222222, 8.6666666667, 13.3333333333,
      14.,          9.5555555556, 4.8888888889,
      2.3333333333, 4.7777777778, 7.3333333333,
      7.6666666667, 5.2222222222, 2.6666666667};
  const std::array<int, 4> in_shape = {{3, 4, 6, 1}};
  const auto padding = PaddingMode::VALID;
  const auto params = getPoolingParams<3, 1>(in_shape, padding);
  const DataType max_input_val = 2048.0;
  this->test_pool(exp_out, params, max_input_val);
}
TYPED_TEST(AvgWindow3Stride1Grad, SAME3x4x6x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {4.5833333333,   5.2777777778,
                                         7.3055555556,   8.2777777778,
                                         8.1666666667,   9.,
                                         9.8333333333,   10.6666666667,
                                         13.6944444444,  14.6666666667,
                                         10.4166666667,  11.1111111111,
                                         11.75,          12.7222222222,
                                         17.6944444444,  19.0555555556,
                                         17.8333333333,  19.,
                                         20.1666666667,  21.3333333333,
                                         26.6388888889,  28.,
                                         19.9166666667,  20.8888888889,
                                         26.75,          27.7222222222,
                                         38.6944444444,  40.0555555556,
                                         35.8333333333,  37.,
                                         38.1666666667,  39.3333333333,
                                         47.6388888889,  49.,
                                         34.9166666667,  35.8888888889,
                                         22.9166666667,  23.6111111111,
                                         32.9722222222,  33.9444444444,
                                         30.1666666667,  31.,
                                         31.8333333333,  32.6666666667,
                                         39.3611111111,  40.3333333333,
                                         28.75,          29.4444444444,
                                         37.9166666667,  38.6111111111,
                                         53.9722222222,  54.9444444444,
                                         48.1666666667,  49.,
                                         49.8333333333,  50.6666666667,
                                         60.3611111111,  61.3333333333,
                                         43.75,          44.4444444444,
                                         58.4166666667,  59.3888888889,
                                         83.0277777778,  84.3888888889,
                                         73.8333333333,  75.,
                                         76.1666666667,  77.3333333333,
                                         91.9722222222,  93.3333333333,
                                         66.5833333333,  67.5555555556,
                                         73.4166666667,  74.3888888889,
                                         104.0277777778, 105.3888888889,
                                         91.8333333333,  93.,
                                         94.1666666667,  95.3333333333,
                                         112.9722222222, 114.3333333333,
                                         81.5833333333,  82.5555555556,
                                         56.25,          56.9444444444,
                                         79.6388888889,  80.6111111111,
                                         70.1666666667,  71.,
                                         71.8333333333,  72.6666666667,
                                         86.0277777778,  87.,
                                         62.0833333333,  62.7777777778,
                                         71.25,          71.9444444444,
                                         100.6388888889, 101.6111111111,
                                         88.1666666667,  89.,
                                         89.8333333333,  90.6666666667,
                                         107.0277777778, 108.,
                                         77.0833333333,  77.7777777778,
                                         105.0833333333, 106.0555555556,
                                         148.3611111111, 149.7222222222,
                                         129.8333333333, 131.,
                                         132.1666666667, 133.3333333333,
                                         157.3055555556, 158.6666666667,
                                         113.25,         114.2222222222,
                                         120.0833333333, 121.0555555556,
                                         169.3611111111, 170.7222222222,
                                         147.8333333333, 149.,
                                         150.1666666667, 151.3333333333,
                                         178.3055555556, 179.6666666667,
                                         128.25,         129.2222222222,
                                         89.5833333333,  90.2777777778,
                                         126.3055555556, 127.2777777778,
                                         110.1666666667, 111.,
                                         111.8333333333, 112.6666666667,
                                         132.6944444444, 133.6666666667,
                                         95.4166666667,  96.1111111111};
  const std::array<int, 4> in_shape = {{3, 4, 6, 2}};
  const auto padding = PaddingMode::SAME;
  const auto params = getPoolingParams<3, 1>(in_shape, padding);
  const DataType max_input_val = 2048.0;
  this->test_pool(exp_out, params, max_input_val);
}
TYPED_TEST(AvgWindow3Stride1Grad, VALID3x4x6x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {0.1111111111,
                                         0.2222222222,
                                         0.4444444444,
                                         0.6666666667,
                                         1.,
                                         1.3333333333,
                                         1.6666666667,
                                         2.,
                                         1.3333333333,
                                         1.5555555556,
                                         0.7777777778,
                                         0.8888888889,
                                         1.1111111111,
                                         1.3333333333,
                                         2.6666666667,
                                         3.1111111111,
                                         4.6666666667,
                                         5.3333333333,
                                         6.,
                                         6.6666666667,
                                         4.4444444444,
                                         4.8888888889,
                                         2.4444444444,
                                         2.6666666667,
                                         1.1111111111,
                                         1.3333333333,
                                         2.6666666667,
                                         3.1111111111,
                                         4.6666666667,
                                         5.3333333333,
                                         6.,
                                         6.6666666667,
                                         4.4444444444,
                                         4.8888888889,
                                         2.4444444444,
                                         2.6666666667,
                                         1.,
                                         1.1111111111,
                                         2.2222222222,
                                         2.4444444444,
                                         3.6666666667,
                                         4.,
                                         4.3333333333,
                                         4.6666666667,
                                         3.1111111111,
                                         3.3333333333,
                                         1.6666666667,
                                         1.7777777778,
                                         1.8888888889,
                                         2.,
                                         4.,
                                         4.2222222222,
                                         6.3333333333,
                                         6.6666666667,
                                         7.,
                                         7.3333333333,
                                         4.8888888889,
                                         5.1111111111,
                                         2.5555555556,
                                         2.6666666667,
                                         4.6666666667,
                                         4.8888888889,
                                         9.7777777778,
                                         10.2222222222,
                                         15.3333333333,
                                         16.,
                                         16.6666666667,
                                         17.3333333333,
                                         11.5555555556,
                                         12.,
                                         6.,
                                         6.2222222222,
                                         4.6666666667,
                                         4.8888888889,
                                         9.7777777778,
                                         10.2222222222,
                                         15.3333333333,
                                         16.,
                                         16.6666666667,
                                         17.3333333333,
                                         11.5555555556,
                                         12.,
                                         6.,
                                         6.2222222222,
                                         2.7777777778,
                                         2.8888888889,
                                         5.7777777778,
                                         6.,
                                         9.,
                                         9.3333333333,
                                         9.6666666667,
                                         10.,
                                         6.6666666667,
                                         6.8888888889,
                                         3.4444444444,
                                         3.5555555556,
                                         3.6666666667,
                                         3.7777777778,
                                         7.5555555556,
                                         7.7777777778,
                                         11.6666666667,
                                         12.,
                                         12.3333333333,
                                         12.6666666667,
                                         8.4444444444,
                                         8.6666666667,
                                         4.3333333333,
                                         4.4444444444,
                                         8.2222222222,
                                         8.4444444444,
                                         16.8888888889,
                                         17.3333333333,
                                         26.,
                                         26.6666666667,
                                         27.3333333333,
                                         28.,
                                         18.6666666667,
                                         19.1111111111,
                                         9.5555555556,
                                         9.7777777778,
                                         8.2222222222,
                                         8.4444444444,
                                         16.8888888889,
                                         17.3333333333,
                                         26.,
                                         26.6666666667,
                                         27.3333333333,
                                         28.,
                                         18.6666666667,
                                         19.1111111111,
                                         9.5555555556,
                                         9.7777777778,
                                         4.5555555556,
                                         4.6666666667,
                                         9.3333333333,
                                         9.5555555556,
                                         14.3333333333,
                                         14.6666666667,
                                         15.,
                                         15.3333333333,
                                         10.2222222222,
                                         10.4444444444,
                                         5.2222222222,
                                         5.3333333333};
  const std::array<int, 4> in_shape = {{3, 4, 6, 2}};
  const auto padding = PaddingMode::VALID;
  const auto params = getPoolingParams<3, 1>(in_shape, padding);
  const DataType max_input_val = 2048.0;
  this->test_pool(exp_out, params, max_input_val);
}
TYPED_TEST(AvgWindow3Stride1Grad, SAME3x4x6x4) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      8.4722222222,   9.1666666667,   9.8611111111,   10.5555555556,
      13.6388888889,  14.6111111111,  15.5833333333,  16.5555555556,
      15.5,           16.3333333333,  17.1666666667,  18.,
      18.8333333333,  19.6666666667,  20.5,           21.3333333333,
      26.4166666667,  27.3888888889,  28.3611111111,  29.3333333333,
      20.1388888889,  20.8333333333,  21.5277777778,  22.2222222222,
      22.5277777778,  23.5,           24.4722222222,  25.4444444444,
      34.0277777778,  35.3888888889,  36.75,          38.1111111111,
      34.5,           35.6666666667,  36.8333333333,  38.,
      39.1666666667,  40.3333333333,  41.5,           42.6666666667,
      51.9166666667,  53.2777777778,  54.6388888889,  56.,
      38.8611111111,  39.8333333333,  40.8055555556,  41.7777777778,
      52.5277777778,  53.5,           54.4722222222,  55.4444444444,
      76.0277777778,  77.3888888889,  78.75,          80.1111111111,
      70.5,           71.6666666667,  72.8333333333,  74.,
      75.1666666667,  76.3333333333,  77.5,           78.6666666667,
      93.9166666667,  95.2777777778,  96.6388888889,  98.,
      68.8611111111,  69.8333333333,  70.8055555556,  71.7777777778,
      45.1388888889,  45.8333333333,  46.5277777778,  47.2222222222,
      64.9722222222,  65.9444444444,  66.9166666667,  67.8888888889,
      59.5,           60.3333333333,  61.1666666667,  62.,
      62.8333333333,  63.6666666667,  64.5,           65.3333333333,
      77.75,          78.7222222222,  79.6944444444,  80.6666666667,
      56.8055555556,  57.5,           58.1944444444,  58.8888888889,
      75.1388888889,  75.8333333333,  76.5277777778,  77.2222222222,
      106.9722222222, 107.9444444444, 108.9166666667, 109.8888888889,
      95.5,           96.3333333333,  97.1666666667,  98.,
      98.8333333333,  99.6666666667,  100.5,          101.3333333333,
      119.75,         120.7222222222, 121.6944444444, 122.6666666667,
      86.8055555556,  87.5,           88.1944444444,  88.8888888889,
      115.8611111111, 116.8333333333, 117.8055555556, 118.7777777778,
      164.6944444444, 166.0555555556, 167.4166666667, 168.7777777778,
      146.5,          147.6666666667, 148.8333333333, 150.,
      151.1666666667, 152.3333333333, 153.5,          154.6666666667,
      182.5833333333, 183.9444444444, 185.3055555556, 186.6666666667,
      132.1944444444, 133.1666666667, 134.1388888889, 135.1111111111,
      145.8611111111, 146.8333333333, 147.8055555556, 148.7777777778,
      206.6944444444, 208.0555555556, 209.4166666667, 210.7777777778,
      182.5,          183.6666666667, 184.8333333333, 186.,
      187.1666666667, 188.3333333333, 189.5,          190.6666666667,
      224.5833333333, 225.9444444444, 227.3055555556, 228.6666666667,
      162.1944444444, 163.1666666667, 164.1388888889, 165.1111111111,
      111.8055555556, 112.5,          113.1944444444, 113.8888888889,
      158.3055555556, 159.2777777778, 160.25,         161.2222222222,
      139.5,          140.3333333333, 141.1666666667, 142.,
      142.8333333333, 143.6666666667, 144.5,          145.3333333333,
      171.0833333333, 172.0555555556, 173.0277777778, 174.,
      123.4722222222, 124.1666666667, 124.8611111111, 125.5555555556,
      141.8055555556, 142.5,          143.1944444444, 143.8888888889,
      200.3055555556, 201.2777777778, 202.25,         203.2222222222,
      175.5,          176.3333333333, 177.1666666667, 178.,
      178.8333333333, 179.6666666667, 180.5,          181.3333333333,
      213.0833333333, 214.0555555556, 215.0277777778, 216.,
      153.4722222222, 154.1666666667, 154.8611111111, 155.5555555556,
      209.1944444444, 210.1666666667, 211.1388888889, 212.1111111111,
      295.3611111111, 296.7222222222, 298.0833333333, 299.4444444444,
      258.5,          259.6666666667, 260.8333333333, 262.,
      263.1666666667, 264.3333333333, 265.5,          266.6666666667,
      313.25,         314.6111111111, 315.9722222222, 317.3333333333,
      225.5277777778, 226.5,          227.4722222222, 228.4444444444,
      239.1944444444, 240.1666666667, 241.1388888889, 242.1111111111,
      337.3611111111, 338.7222222222, 340.0833333333, 341.4444444444,
      294.5,          295.6666666667, 296.8333333333, 298.,
      299.1666666667, 300.3333333333, 301.5,          302.6666666667,
      355.25,         356.6111111111, 357.9722222222, 359.3333333333,
      255.5277777778, 256.5,          257.4722222222, 258.4444444444,
      178.4722222222, 179.1666666667, 179.8611111111, 180.5555555556,
      251.6388888889, 252.6111111111, 253.5833333333, 254.5555555556,
      219.5,          220.3333333333, 221.1666666667, 222.,
      222.8333333333, 223.6666666667, 224.5,          225.3333333333,
      264.4166666667, 265.3888888889, 266.3611111111, 267.3333333333,
      190.1388888889, 190.8333333333, 191.5277777778, 192.2222222222};
  const std::array<int, 4> in_shape = {{3, 4, 6, 4}};
  const auto padding = PaddingMode::SAME;
  const auto params = getPoolingParams<3, 1>(in_shape, padding);
  const DataType max_input_val = 2048.0;
  this->test_pool(exp_out, params, max_input_val);
}
TYPED_TEST(AvgWindow3Stride1Grad, VALID3x4x6x4) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {0.1111111111,
                                         0.2222222222,
                                         0.3333333333,
                                         0.4444444444,
                                         0.6666666667,
                                         0.8888888889,
                                         1.1111111111,
                                         1.3333333333,
                                         1.6666666667,
                                         2.,
                                         2.3333333333,
                                         2.6666666667,
                                         3.,
                                         3.3333333333,
                                         3.6666666667,
                                         4.,
                                         2.4444444444,
                                         2.6666666667,
                                         2.8888888889,
                                         3.1111111111,
                                         1.4444444444,
                                         1.5555555556,
                                         1.6666666667,
                                         1.7777777778,
                                         2.,
                                         2.2222222222,
                                         2.4444444444,
                                         2.6666666667,
                                         4.8888888889,
                                         5.3333333333,
                                         5.7777777778,
                                         6.2222222222,
                                         8.6666666667,
                                         9.3333333333,
                                         10.,
                                         10.6666666667,
                                         11.3333333333,
                                         12.,
                                         12.6666666667,
                                         13.3333333333,
                                         8.4444444444,
                                         8.8888888889,
                                         9.3333333333,
                                         9.7777777778,
                                         4.6666666667,
                                         4.8888888889,
                                         5.1111111111,
                                         5.3333333333,
                                         2.,
                                         2.2222222222,
                                         2.4444444444,
                                         2.6666666667,
                                         4.8888888889,
                                         5.3333333333,
                                         5.7777777778,
                                         6.2222222222,
                                         8.6666666667,
                                         9.3333333333,
                                         10.,
                                         10.6666666667,
                                         11.3333333333,
                                         12.,
                                         12.6666666667,
                                         13.3333333333,
                                         8.4444444444,
                                         8.8888888889,
                                         9.3333333333,
                                         9.7777777778,
                                         4.6666666667,
                                         4.8888888889,
                                         5.1111111111,
                                         5.3333333333,
                                         1.8888888889,
                                         2.,
                                         2.1111111111,
                                         2.2222222222,
                                         4.2222222222,
                                         4.4444444444,
                                         4.6666666667,
                                         4.8888888889,
                                         7.,
                                         7.3333333333,
                                         7.6666666667,
                                         8.,
                                         8.3333333333,
                                         8.6666666667,
                                         9.,
                                         9.3333333333,
                                         6.,
                                         6.2222222222,
                                         6.4444444444,
                                         6.6666666667,
                                         3.2222222222,
                                         3.3333333333,
                                         3.4444444444,
                                         3.5555555556,
                                         3.6666666667,
                                         3.7777777778,
                                         3.8888888889,
                                         4.,
                                         7.7777777778,
                                         8.,
                                         8.2222222222,
                                         8.4444444444,
                                         12.3333333333,
                                         12.6666666667,
                                         13.,
                                         13.3333333333,
                                         13.6666666667,
                                         14.,
                                         14.3333333333,
                                         14.6666666667,
                                         9.5555555556,
                                         9.7777777778,
                                         10.,
                                         10.2222222222,
                                         5.,
                                         5.1111111111,
                                         5.2222222222,
                                         5.3333333333,
                                         9.1111111111,
                                         9.3333333333,
                                         9.5555555556,
                                         9.7777777778,
                                         19.1111111111,
                                         19.5555555556,
                                         20.,
                                         20.4444444444,
                                         30.,
                                         30.6666666667,
                                         31.3333333333,
                                         32.,
                                         32.6666666667,
                                         33.3333333333,
                                         34.,
                                         34.6666666667,
                                         22.6666666667,
                                         23.1111111111,
                                         23.5555555556,
                                         24.,
                                         11.7777777778,
                                         12.,
                                         12.2222222222,
                                         12.4444444444,
                                         9.1111111111,
                                         9.3333333333,
                                         9.5555555556,
                                         9.7777777778,
                                         19.1111111111,
                                         19.5555555556,
                                         20.,
                                         20.4444444444,
                                         30.,
                                         30.6666666667,
                                         31.3333333333,
                                         32.,
                                         32.6666666667,
                                         33.3333333333,
                                         34.,
                                         34.6666666667,
                                         22.6666666667,
                                         23.1111111111,
                                         23.5555555556,
                                         24.,
                                         11.7777777778,
                                         12.,
                                         12.2222222222,
                                         12.4444444444,
                                         5.4444444444,
                                         5.5555555556,
                                         5.6666666667,
                                         5.7777777778,
                                         11.3333333333,
                                         11.5555555556,
                                         11.7777777778,
                                         12.,
                                         17.6666666667,
                                         18.,
                                         18.3333333333,
                                         18.6666666667,
                                         19.,
                                         19.3333333333,
                                         19.6666666667,
                                         20.,
                                         13.1111111111,
                                         13.3333333333,
                                         13.5555555556,
                                         13.7777777778,
                                         6.7777777778,
                                         6.8888888889,
                                         7.,
                                         7.1111111111,
                                         7.2222222222,
                                         7.3333333333,
                                         7.4444444444,
                                         7.5555555556,
                                         14.8888888889,
                                         15.1111111111,
                                         15.3333333333,
                                         15.5555555556,
                                         23.,
                                         23.3333333333,
                                         23.6666666667,
                                         24.,
                                         24.3333333333,
                                         24.6666666667,
                                         25.,
                                         25.3333333333,
                                         16.6666666667,
                                         16.8888888889,
                                         17.1111111111,
                                         17.3333333333,
                                         8.5555555556,
                                         8.6666666667,
                                         8.7777777778,
                                         8.8888888889,
                                         16.2222222222,
                                         16.4444444444,
                                         16.6666666667,
                                         16.8888888889,
                                         33.3333333333,
                                         33.7777777778,
                                         34.2222222222,
                                         34.6666666667,
                                         51.3333333333,
                                         52.,
                                         52.6666666667,
                                         53.3333333333,
                                         54.,
                                         54.6666666667,
                                         55.3333333333,
                                         56.,
                                         36.8888888889,
                                         37.3333333333,
                                         37.7777777778,
                                         38.2222222222,
                                         18.8888888889,
                                         19.1111111111,
                                         19.3333333333,
                                         19.5555555556,
                                         16.2222222222,
                                         16.4444444444,
                                         16.6666666667,
                                         16.8888888889,
                                         33.3333333333,
                                         33.7777777778,
                                         34.2222222222,
                                         34.6666666667,
                                         51.3333333333,
                                         52.,
                                         52.6666666667,
                                         53.3333333333,
                                         54.,
                                         54.6666666667,
                                         55.3333333333,
                                         56.,
                                         36.8888888889,
                                         37.3333333333,
                                         37.7777777778,
                                         38.2222222222,
                                         18.8888888889,
                                         19.1111111111,
                                         19.3333333333,
                                         19.5555555556,
                                         9.,
                                         9.1111111111,
                                         9.2222222222,
                                         9.3333333333,
                                         18.4444444444,
                                         18.6666666667,
                                         18.8888888889,
                                         19.1111111111,
                                         28.3333333333,
                                         28.6666666667,
                                         29.,
                                         29.3333333333,
                                         29.6666666667,
                                         30.,
                                         30.3333333333,
                                         30.6666666667,
                                         20.2222222222,
                                         20.4444444444,
                                         20.6666666667,
                                         20.8888888889,
                                         10.3333333333,
                                         10.4444444444,
                                         10.5555555556,
                                         10.6666666667};
  const std::array<int, 4> in_shape = {{3, 4, 6, 4}};
  const auto padding = PaddingMode::VALID;
  const auto params = getPoolingParams<3, 1>(in_shape, padding);
  const DataType max_input_val = 2048.0;
  this->test_pool(exp_out, params, max_input_val);
}
TYPED_TEST(AvgWindow3Stride1Grad, SAME3x5x4x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      2.0833333333,  3.3611111111,  4.6111111111,  3.6111111111,
      4.6944444444,  7.1944444444,  8.9444444444,  6.8333333333,
      7.8333333333,  11.5,          13.,           9.6666666667,
      13.5833333333, 19.6388888889, 21.3888888889, 15.7222222222,
      10.9722222222, 15.8055555556, 17.0555555556, 12.5,
      15.9722222222, 22.8055555556, 24.0555555556, 17.5,
      24.1388888889, 34.4166666667, 36.1666666667, 26.2777777778,
      24.5,          34.8333333333, 36.3333333333, 26.3333333333,
      33.0277777778, 46.8611111111, 48.6111111111, 35.1666666667,
      24.8611111111, 35.25,         36.5,          26.3888888889,
      29.8611111111, 42.25,         43.5,          31.3888888889,
      43.5833333333, 61.6388888889, 63.3888888889, 45.7222222222,
      41.1666666667, 58.1666666667, 59.6666666667, 43.,
      52.4722222222, 74.0833333333, 75.8333333333, 54.6111111111,
      38.75,         54.6944444444, 55.9444444444, 40.2777777778};
  const std::array<int, 4> in_shape = {{3, 5, 4, 1}};
  const auto padding = PaddingMode::SAME;
  const auto params = getPoolingParams<3, 1>(in_shape, padding);
  const DataType max_input_val = 2048.0;
  this->test_pool(exp_out, params, max_input_val);
}
TYPED_TEST(AvgWindow3Stride1Grad, VALID3x5x4x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      0.1111111111,  0.3333333333, 0.3333333333, 0.2222222222, 0.4444444444,
      1.1111111111,  1.1111111111, 0.6666666667, 1.,           2.3333333333,
      2.3333333333,  1.3333333333, 0.8888888889, 2.,           2.,
      1.1111111111,  0.5555555556, 1.2222222222, 1.2222222222, 0.6666666667,
      0.7777777778,  1.6666666667, 1.6666666667, 0.8888888889, 1.7777777778,
      3.7777777778,  3.7777777778, 2.,           3.,           6.3333333333,
      6.3333333333,  3.3333333333, 2.2222222222, 4.6666666667, 4.6666666667,
      2.4444444444,  1.2222222222, 2.5555555556, 2.5555555556, 1.3333333333,
      1.4444444444,  3.,           3.,           1.5555555556, 3.1111111111,
      6.4444444444,  6.4444444444, 3.3333333333, 5.,           10.3333333333,
      10.3333333333, 5.3333333333, 3.5555555556, 7.3333333333, 7.3333333333,
      3.7777777778,  1.8888888889, 3.8888888889, 3.8888888889, 2.,
  };
  const std::array<int, 4> in_shape = {{3, 5, 4, 1}};
  const auto padding = PaddingMode::VALID;
  const auto params = getPoolingParams<3, 1>(in_shape, padding);
  const DataType max_input_val = 2048.0;
  this->test_pool(exp_out, params, max_input_val);
}
TYPED_TEST(AvgWindow3Stride1Grad, SAME3x5x4x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {3.4722222222,   4.1666666667,
                                         5.75,           6.7222222222,
                                         8.25,           9.2222222222,
                                         6.5277777778,   7.2222222222,
                                         8.4166666667,   9.3888888889,
                                         13.0277777778,  14.3888888889,
                                         16.5277777778,  17.8888888889,
                                         12.6944444444,  13.6666666667,
                                         14.8333333333,  15.6666666667,
                                         21.8333333333,  23.,
                                         24.8333333333,  26.,
                                         18.5,           19.3333333333,
                                         26.1944444444,  27.1666666667,
                                         37.9166666667,  39.2777777778,
                                         41.4166666667,  42.7777777778,
                                         30.4722222222,  31.4444444444,
                                         21.25,          21.9444444444,
                                         30.6388888889,  31.6111111111,
                                         33.1388888889,  34.1111111111,
                                         24.3055555556,  25.,
                                         31.25,          31.9444444444,
                                         44.6388888889,  45.6111111111,
                                         47.1388888889,  48.1111111111,
                                         34.3055555556,  35.,
                                         47.3055555556,  48.2777777778,
                                         67.4722222222,  68.8333333333,
                                         70.9722222222,  72.3333333333,
                                         51.5833333333,  52.5555555556,
                                         48.1666666667,  49.,
                                         68.5,           69.6666666667,
                                         71.5,           72.6666666667,
                                         51.8333333333,  52.6666666667,
                                         65.0833333333,  66.0555555556,
                                         92.3611111111,  93.7222222222,
                                         95.8611111111,  97.2222222222,
                                         69.3611111111,  70.3333333333,
                                         49.0277777778,  49.7222222222,
                                         69.5277777778,  70.5,
                                         72.0277777778,  73.,
                                         52.0833333333,  52.7777777778,
                                         59.0277777778,  59.7222222222,
                                         83.5277777778,  84.5,
                                         86.0277777778,  87.,
                                         62.0833333333,  62.7777777778,
                                         86.1944444444,  87.1666666667,
                                         121.9166666667, 123.2777777778,
                                         125.4166666667, 126.7777777778,
                                         90.4722222222,  91.4444444444,
                                         81.5,           82.3333333333,
                                         115.1666666667, 116.3333333333,
                                         118.1666666667, 119.3333333333,
                                         85.1666666667,  86.,
                                         103.9722222222, 104.9444444444,
                                         146.8055555556, 148.1666666667,
                                         150.3055555556, 151.6666666667,
                                         108.25,         109.2222222222,
                                         76.8055555556,  77.5,
                                         108.4166666667, 109.3888888889,
                                         110.9166666667, 111.8888888889,
                                         79.8611111111,  80.5555555556};
  const std::array<int, 4> in_shape = {{3, 5, 4, 2}};
  const auto padding = PaddingMode::SAME;
  const auto params = getPoolingParams<3, 1>(in_shape, padding);
  const DataType max_input_val = 2048.0;
  this->test_pool(exp_out, params, max_input_val);
}
TYPED_TEST(AvgWindow3Stride1Grad, VALID3x5x4x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      0.1111111111,
      0.2222222222,
      0.4444444444,
      0.6666666667,
      0.4444444444,
      0.6666666667,
      0.3333333333,
      0.4444444444,
      0.6666666667,
      0.8888888889,
      1.7777777778,
      2.2222222222,
      1.7777777778,
      2.2222222222,
      1.1111111111,
      1.3333333333,
      1.6666666667,
      2.,
      4.,
      4.6666666667,
      4.,
      4.6666666667,
      2.3333333333,
      2.6666666667,
      1.5555555556,
      1.7777777778,
      3.5555555556,
      4.,
      3.5555555556,
      4.,
      2.,
      2.2222222222,
      1.,
      1.1111111111,
      2.2222222222,
      2.4444444444,
      2.2222222222,
      2.4444444444,
      1.2222222222,
      1.3333333333,
      1.4444444444,
      1.5555555556,
      3.1111111111,
      3.3333333333,
      3.1111111111,
      3.3333333333,
      1.6666666667,
      1.7777777778,
      3.3333333333,
      3.5555555556,
      7.1111111111,
      7.5555555556,
      7.1111111111,
      7.5555555556,
      3.7777777778,
      4.,
      5.6666666667,
      6.,
      12.,
      12.6666666667,
      12.,
      12.6666666667,
      6.3333333333,
      6.6666666667,
      4.2222222222,
      4.4444444444,
      8.8888888889,
      9.3333333333,
      8.8888888889,
      9.3333333333,
      4.6666666667,
      4.8888888889,
      2.3333333333,
      2.4444444444,
      4.8888888889,
      5.1111111111,
      4.8888888889,
      5.1111111111,
      2.5555555556,
      2.6666666667,
      2.7777777778,
      2.8888888889,
      5.7777777778,
      6.,
      5.7777777778,
      6.,
      3.,
      3.1111111111,
      6.,
      6.2222222222,
      12.4444444444,
      12.8888888889,
      12.4444444444,
      12.8888888889,
      6.4444444444,
      6.6666666667,
      9.6666666667,
      10.,
      20.,
      20.6666666667,
      20.,
      20.6666666667,
      10.3333333333,
      10.6666666667,
      6.8888888889,
      7.1111111111,
      14.2222222222,
      14.6666666667,
      14.2222222222,
      14.6666666667,
      7.3333333333,
      7.5555555556,
      3.6666666667,
      3.7777777778,
      7.5555555556,
      7.7777777778,
      7.5555555556,
      7.7777777778,
      3.8888888889,
      4.,
  };
  const std::array<int, 4> in_shape = {{3, 5, 4, 2}};
  const auto padding = PaddingMode::VALID;
  const auto params = getPoolingParams<3, 1>(in_shape, padding);
  const DataType max_input_val = 2048.0;
  this->test_pool(exp_out, params, max_input_val);
}
TYPED_TEST(AvgWindow3Stride1Grad, SAME3x5x4x4) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {6.25,           6.9444444444,
                                         7.6388888889,   8.3333333333,
                                         10.5277777778,  11.5,
                                         12.4722222222,  13.4444444444,
                                         15.5277777778,  16.5,
                                         17.4722222222,  18.4444444444,
                                         12.3611111111,  13.0555555556,
                                         13.75,          14.4444444444,
                                         15.8611111111,  16.8333333333,
                                         17.8055555556,  18.7777777778,
                                         24.6944444444,  26.0555555556,
                                         27.4166666667,  28.7777777778,
                                         31.6944444444,  33.0555555556,
                                         34.4166666667,  35.7777777778,
                                         24.4166666667,  25.3888888889,
                                         26.3611111111,  27.3333333333,
                                         28.8333333333,  29.6666666667,
                                         30.5,           31.3333333333,
                                         42.5,           43.6666666667,
                                         44.8333333333,  46.,
                                         48.5,           49.6666666667,
                                         50.8333333333,  52.,
                                         36.1666666667,  37.,
                                         37.8333333333,  38.6666666667,
                                         51.4166666667,  52.3888888889,
                                         53.3611111111,  54.3333333333,
                                         74.4722222222,  75.8333333333,
                                         77.1944444444,  78.5555555556,
                                         81.4722222222,  82.8333333333,
                                         84.1944444444,  85.5555555556,
                                         59.9722222222,  60.9444444444,
                                         61.9166666667,  62.8888888889,
                                         41.8055555556,  42.5,
                                         43.1944444444,  43.8888888889,
                                         60.3055555556,  61.2777777778,
                                         62.25,          63.2222222222,
                                         65.3055555556,  66.2777777778,
                                         67.25,          68.2222222222,
                                         47.9166666667,  48.6111111111,
                                         49.3055555556,  50.,
                                         61.8055555556,  62.5,
                                         63.1944444444,  63.8888888889,
                                         88.3055555556,  89.2777777778,
                                         90.25,          91.2222222222,
                                         93.3055555556,  94.2777777778,
                                         95.25,          96.2222222222,
                                         67.9166666667,  68.6111111111,
                                         69.3055555556,  70.,
                                         93.6388888889,  94.6111111111,
                                         95.5833333333,  96.5555555556,
                                         133.5833333333, 134.9444444444,
                                         136.3055555556, 137.6666666667,
                                         140.5833333333, 141.9444444444,
                                         143.3055555556, 144.6666666667,
                                         102.1944444444, 103.1666666667,
                                         104.1388888889, 105.1111111111,
                                         95.5,           96.3333333333,
                                         97.1666666667,  98.,
                                         135.8333333333, 137.,
                                         138.1666666667, 139.3333333333,
                                         141.8333333333, 143.,
                                         144.1666666667, 145.3333333333,
                                         102.8333333333, 103.6666666667,
                                         104.5,          105.3333333333,
                                         129.1944444444, 130.1666666667,
                                         131.1388888889, 132.1111111111,
                                         183.3611111111, 184.7222222222,
                                         186.0833333333, 187.4444444444,
                                         190.3611111111, 191.7222222222,
                                         193.0833333333, 194.4444444444,
                                         137.75,         138.7222222222,
                                         139.6944444444, 140.6666666667,
                                         97.3611111111,  98.0555555556,
                                         98.75,          99.4444444444,
                                         138.0833333333, 139.0555555556,
                                         140.0277777778, 141.,
                                         143.0833333333, 144.0555555556,
                                         145.0277777778, 146.,
                                         103.4722222222, 104.1666666667,
                                         104.8611111111, 105.5555555556,
                                         117.3611111111, 118.0555555556,
                                         118.75,         119.4444444444,
                                         166.0833333333, 167.0555555556,
                                         168.0277777778, 169.,
                                         171.0833333333, 172.0555555556,
                                         173.0277777778, 174.,
                                         123.4722222222, 124.1666666667,
                                         124.8611111111, 125.5555555556,
                                         171.4166666667, 172.3888888889,
                                         173.3611111111, 174.3333333333,
                                         242.4722222222, 243.8333333333,
                                         245.1944444444, 246.5555555556,
                                         249.4722222222, 250.8333333333,
                                         252.1944444444, 253.5555555556,
                                         179.9722222222, 180.9444444444,
                                         181.9166666667, 182.8888888889,
                                         162.1666666667, 163.,
                                         163.8333333333, 164.6666666667,
                                         229.1666666667, 230.3333333333,
                                         231.5,          232.6666666667,
                                         235.1666666667, 236.3333333333,
                                         237.5,          238.6666666667,
                                         169.5,          170.3333333333,
                                         171.1666666667, 172.,
                                         206.9722222222, 207.9444444444,
                                         208.9166666667, 209.8888888889,
                                         292.25,         293.6111111111,
                                         294.9722222222, 296.3333333333,
                                         299.25,         300.6111111111,
                                         301.9722222222, 303.3333333333,
                                         215.5277777778, 216.5,
                                         217.4722222222, 218.4444444444,
                                         152.9166666667, 153.6111111111,
                                         154.3055555556, 155.,
                                         215.8611111111, 216.8333333333,
                                         217.8055555556, 218.7777777778,
                                         220.8611111111, 221.8333333333,
                                         222.8055555556, 223.7777777778,
                                         159.0277777778, 159.7222222222,
                                         160.4166666667, 161.1111111111};
  const std::array<int, 4> in_shape = {{3, 5, 4, 4}};
  const auto padding = PaddingMode::SAME;
  const auto params = getPoolingParams<3, 1>(in_shape, padding);
  const DataType max_input_val = 2048.0;
  this->test_pool(exp_out, params, max_input_val);
}
TYPED_TEST(AvgWindow3Stride1Grad, VALID3x5x4x4) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      0.1111111111,
      0.2222222222,
      0.3333333333,
      0.4444444444,
      0.6666666667,
      0.8888888889,
      1.1111111111,
      1.3333333333,
      0.6666666667,
      0.8888888889,
      1.1111111111,
      1.3333333333,
      0.5555555556,
      0.6666666667,
      0.7777777778,
      0.8888888889,
      1.1111111111,
      1.3333333333,
      1.5555555556,
      1.7777777778,
      3.1111111111,
      3.5555555556,
      4.,
      4.4444444444,
      3.1111111111,
      3.5555555556,
      4.,
      4.4444444444,
      2.,
      2.2222222222,
      2.4444444444,
      2.6666666667,
      3.,
      3.3333333333,
      3.6666666667,
      4.,
      7.3333333333,
      8.,
      8.6666666667,
      9.3333333333,
      7.3333333333,
      8.,
      8.6666666667,
      9.3333333333,
      4.3333333333,
      4.6666666667,
      5.,
      5.3333333333,
      2.8888888889,
      3.1111111111,
      3.3333333333,
      3.5555555556,
      6.6666666667,
      7.1111111111,
      7.5555555556,
      8.,
      6.6666666667,
      7.1111111111,
      7.5555555556,
      8.,
      3.7777777778,
      4.,
      4.2222222222,
      4.4444444444,
      1.8888888889,
      2.,
      2.1111111111,
      2.2222222222,
      4.2222222222,
      4.4444444444,
      4.6666666667,
      4.8888888889,
      4.2222222222,
      4.4444444444,
      4.6666666667,
      4.8888888889,
      2.3333333333,
      2.4444444444,
      2.5555555556,
      2.6666666667,
      2.7777777778,
      2.8888888889,
      3.,
      3.1111111111,
      6.,
      6.2222222222,
      6.4444444444,
      6.6666666667,
      6.,
      6.2222222222,
      6.4444444444,
      6.6666666667,
      3.2222222222,
      3.3333333333,
      3.4444444444,
      3.5555555556,
      6.4444444444,
      6.6666666667,
      6.8888888889,
      7.1111111111,
      13.7777777778,
      14.2222222222,
      14.6666666667,
      15.1111111111,
      13.7777777778,
      14.2222222222,
      14.6666666667,
      15.1111111111,
      7.3333333333,
      7.5555555556,
      7.7777777778,
      8.,
      11.,
      11.3333333333,
      11.6666666667,
      12.,
      23.3333333333,
      24.,
      24.6666666667,
      25.3333333333,
      23.3333333333,
      24.,
      24.6666666667,
      25.3333333333,
      12.3333333333,
      12.6666666667,
      13.,
      13.3333333333,
      8.2222222222,
      8.4444444444,
      8.6666666667,
      8.8888888889,
      17.3333333333,
      17.7777777778,
      18.2222222222,
      18.6666666667,
      17.3333333333,
      17.7777777778,
      18.2222222222,
      18.6666666667,
      9.1111111111,
      9.3333333333,
      9.5555555556,
      9.7777777778,
      4.5555555556,
      4.6666666667,
      4.7777777778,
      4.8888888889,
      9.5555555556,
      9.7777777778,
      10.,
      10.2222222222,
      9.5555555556,
      9.7777777778,
      10.,
      10.2222222222,
      5.,
      5.1111111111,
      5.2222222222,
      5.3333333333,
      5.4444444444,
      5.5555555556,
      5.6666666667,
      5.7777777778,
      11.3333333333,
      11.5555555556,
      11.7777777778,
      12.,
      11.3333333333,
      11.5555555556,
      11.7777777778,
      12.,
      5.8888888889,
      6.,
      6.1111111111,
      6.2222222222,
      11.7777777778,
      12.,
      12.2222222222,
      12.4444444444,
      24.4444444444,
      24.8888888889,
      25.3333333333,
      25.7777777778,
      24.4444444444,
      24.8888888889,
      25.3333333333,
      25.7777777778,
      12.6666666667,
      12.8888888889,
      13.1111111111,
      13.3333333333,
      19.,
      19.3333333333,
      19.6666666667,
      20.,
      39.3333333333,
      40.,
      40.6666666667,
      41.3333333333,
      39.3333333333,
      40.,
      40.6666666667,
      41.3333333333,
      20.3333333333,
      20.6666666667,
      21.,
      21.3333333333,
      13.5555555556,
      13.7777777778,
      14.,
      14.2222222222,
      28.,
      28.4444444444,
      28.8888888889,
      29.3333333333,
      28.,
      28.4444444444,
      28.8888888889,
      29.3333333333,
      14.4444444444,
      14.6666666667,
      14.8888888889,
      15.1111111111,
      7.2222222222,
      7.3333333333,
      7.4444444444,
      7.5555555556,
      14.8888888889,
      15.1111111111,
      15.3333333333,
      15.5555555556,
      14.8888888889,
      15.1111111111,
      15.3333333333,
      15.5555555556,
      7.6666666667,
      7.7777777778,
      7.8888888889,
      8.,
  };
  const std::array<int, 4> in_shape = {{3, 5, 4, 4}};
  const auto padding = PaddingMode::VALID;
  const auto params = getPoolingParams<3, 1>(in_shape, padding);
  const DataType max_input_val = 2048.0;
  this->test_pool(exp_out, params, max_input_val);
}
TYPED_TEST(AvgWindow3Stride1Grad, SAME3x5x5x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      2.3611111111,  3.75,          4.1666666667,  5.9722222222,
      4.5833333333,  5.5277777778,  8.3611111111,  8.5,
      11.4722222222, 8.6388888889,  9.5,           13.8333333333,
      13.,           16.5,          12.1666666667, 16.6388888889,
      23.9166666667, 21.8333333333, 27.0277777778, 19.75,
      13.4722222222, 19.3055555556, 17.5,          21.5277777778,
      15.6944444444, 19.7222222222, 28.0555555556, 25.,
      30.2777777778, 21.9444444444, 29.8333333333, 42.3888888889,
      37.6666666667, 45.5,          32.9444444444, 30.3333333333,
      43.,           38.,           45.6666666667, 33.,
      40.9444444444, 57.9444444444, 51.,           61.0555555556,
      44.0555555556, 30.8333333333, 43.6111111111, 38.3333333333,
      45.8333333333, 33.0555555556, 37.0833333333, 52.3611111111,
      45.8333333333, 54.5833333333, 39.3055555556, 54.1388888889,
      76.4166666667, 66.8333333333, 79.5277777778, 57.25,
      51.1666666667, 72.1666666667, 63.,           74.8333333333,
      53.8333333333, 65.25,         91.9722222222, 80.1666666667,
      95.0833333333, 68.3611111111, 48.1944444444, 67.9166666667,
      59.1666666667, 70.1388888889, 50.4166666667};
  const std::array<int, 4> in_shape = {{3, 5, 5, 1}};
  const auto padding = PaddingMode::SAME;
  const auto params = getPoolingParams<3, 1>(in_shape, padding);
  const DataType max_input_val = 2048.0;
  this->test_pool(exp_out, params, max_input_val);
}
TYPED_TEST(AvgWindow3Stride1Grad, VALID3x5x5x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      0.1111111111,
      0.3333333333,
      0.6666666667,
      0.5555555556,
      0.3333333333,
      0.5555555556,
      1.3333333333,
      2.3333333333,
      1.7777777778,
      1.,
      1.3333333333,
      3.,
      5.,
      3.6666666667,
      2.,
      1.2222222222,
      2.6666666667,
      4.3333333333,
      3.1111111111,
      1.6666666667,
      0.7777777778,
      1.6666666667,
      2.6666666667,
      1.8888888889,
      1.,
      1.1111111111,
      2.3333333333,
      3.6666666667,
      2.5555555556,
      1.3333333333,
      2.5555555556,
      5.3333333333,
      8.3333333333,
      5.7777777778,
      3.,
      4.3333333333,
      9.,
      14.,
      9.6666666667,
      5.,
      3.2222222222,
      6.6666666667,
      10.3333333333,
      7.1111111111,
      3.6666666667,
      1.7777777778,
      3.6666666667,
      5.6666666667,
      3.8888888889,
      2.,
      2.1111111111,
      4.3333333333,
      6.6666666667,
      4.5555555556,
      2.3333333333,
      4.5555555556,
      9.3333333333,
      14.3333333333,
      9.7777777778,
      5.,
      7.3333333333,
      15.,
      23.,
      15.6666666667,
      8.,
      5.2222222222,
      10.6666666667,
      16.3333333333,
      11.1111111111,
      5.6666666667,
      2.7777777778,
      5.6666666667,
      8.6666666667,
      5.8888888889,
      3.,
  };
  const std::array<int, 4> in_shape = {{3, 5, 5, 1}};
  const auto padding = PaddingMode::VALID;
  const auto params = getPoolingParams<3, 1>(in_shape, padding);
  const DataType max_input_val = 2048.0;
  this->test_pool(exp_out, params, max_input_val);
}
TYPED_TEST(AvgWindow3Stride1Grad, SAME3x5x5x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {4.0277777778,
                                         4.7222222222,
                                         6.5277777778,
                                         7.5,
                                         7.5,
                                         8.3333333333,
                                         10.9722222222,
                                         11.9444444444,
                                         8.4722222222,
                                         9.1666666667,
                                         10.0833333333,
                                         11.0555555556,
                                         15.3611111111,
                                         16.7222222222,
                                         15.8333333333,
                                         17.,
                                         21.5833333333,
                                         22.9444444444,
                                         16.3055555556,
                                         17.2777777778,
                                         18.1666666667,
                                         19.,
                                         26.5,
                                         27.6666666667,
                                         25.,
                                         26.,
                                         31.8333333333,
                                         33.,
                                         23.5,
                                         24.3333333333,
                                         32.3055555556,
                                         33.2777777778,
                                         46.4722222222,
                                         47.8333333333,
                                         42.5,
                                         43.6666666667,
                                         52.6944444444,
                                         54.0555555556,
                                         38.5277777778,
                                         39.5,
                                         26.25,
                                         26.9444444444,
                                         37.6388888889,
                                         38.6111111111,
                                         34.1666666667,
                                         35.,
                                         42.0833333333,
                                         43.0555555556,
                                         30.6944444444,
                                         31.3888888889,
                                         38.75,
                                         39.4444444444,
                                         55.1388888889,
                                         56.1111111111,
                                         49.1666666667,
                                         50.,
                                         59.5833333333,
                                         60.5555555556,
                                         43.1944444444,
                                         43.8888888889,
                                         58.6944444444,
                                         59.6666666667,
                                         83.4166666667,
                                         84.7777777778,
                                         74.1666666667,
                                         75.3333333333,
                                         89.6388888889,
                                         91.,
                                         64.9166666667,
                                         65.8888888889,
                                         59.8333333333,
                                         60.6666666667,
                                         84.8333333333,
                                         86.,
                                         75.,
                                         76.,
                                         90.1666666667,
                                         91.3333333333,
                                         65.1666666667,
                                         66.,
                                         80.9166666667,
                                         81.8888888889,
                                         114.5277777778,
                                         115.8888888889,
                                         100.8333333333,
                                         102.,
                                         120.75,
                                         122.1111111111,
                                         87.1388888889,
                                         88.1111111111,
                                         60.9722222222,
                                         61.6666666667,
                                         86.25,
                                         87.2222222222,
                                         75.8333333333,
                                         76.6666666667,
                                         90.6944444444,
                                         91.6666666667,
                                         65.4166666667,
                                         66.1111111111,
                                         73.4722222222,
                                         74.1666666667,
                                         103.75,
                                         104.7222222222,
                                         90.8333333333,
                                         91.6666666667,
                                         108.1944444444,
                                         109.1666666667,
                                         77.9166666667,
                                         78.6111111111,
                                         107.3055555556,
                                         108.2777777778,
                                         151.4722222222,
                                         152.8333333333,
                                         132.5,
                                         133.6666666667,
                                         157.6944444444,
                                         159.0555555556,
                                         113.5277777778,
                                         114.5,
                                         101.5,
                                         102.3333333333,
                                         143.1666666667,
                                         144.3333333333,
                                         125.,
                                         126.,
                                         148.5,
                                         149.6666666667,
                                         106.8333333333,
                                         107.6666666667,
                                         129.5277777778,
                                         130.5,
                                         182.5833333333,
                                         183.9444444444,
                                         159.1666666667,
                                         160.3333333333,
                                         188.8055555556,
                                         190.1666666667,
                                         135.75,
                                         136.7222222222,
                                         95.6944444444,
                                         96.3888888889,
                                         134.8611111111,
                                         135.8333333333,
                                         117.5,
                                         118.3333333333,
                                         139.3055555556,
                                         140.2777777778,
                                         100.1388888889,
                                         100.8333333333};
  const std::array<int, 4> in_shape = {{3, 5, 5, 2}};
  const auto padding = PaddingMode::SAME;
  const auto params = getPoolingParams<3, 1>(in_shape, padding);
  const DataType max_input_val = 2048.0;
  this->test_pool(exp_out, params, max_input_val);
}
TYPED_TEST(AvgWindow3Stride1Grad, VALID3x5x5x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      0.1111111111,
      0.2222222222,
      0.4444444444,
      0.6666666667,
      1.,
      1.3333333333,
      0.8888888889,
      1.1111111111,
      0.5555555556,
      0.6666666667,
      0.8888888889,
      1.1111111111,
      2.2222222222,
      2.6666666667,
      4.,
      4.6666666667,
      3.1111111111,
      3.5555555556,
      1.7777777778,
      2.,
      2.3333333333,
      2.6666666667,
      5.3333333333,
      6.,
      9.,
      10.,
      6.6666666667,
      7.3333333333,
      3.6666666667,
      4.,
      2.2222222222,
      2.4444444444,
      4.8888888889,
      5.3333333333,
      8.,
      8.6666666667,
      5.7777777778,
      6.2222222222,
      3.1111111111,
      3.3333333333,
      1.4444444444,
      1.5555555556,
      3.1111111111,
      3.3333333333,
      5.,
      5.3333333333,
      3.5555555556,
      3.7777777778,
      1.8888888889,
      2.,
      2.1111111111,
      2.2222222222,
      4.4444444444,
      4.6666666667,
      7.,
      7.3333333333,
      4.8888888889,
      5.1111111111,
      2.5555555556,
      2.6666666667,
      4.8888888889,
      5.1111111111,
      10.2222222222,
      10.6666666667,
      16.,
      16.6666666667,
      11.1111111111,
      11.5555555556,
      5.7777777778,
      6.,
      8.3333333333,
      8.6666666667,
      17.3333333333,
      18.,
      27.,
      28.,
      18.6666666667,
      19.3333333333,
      9.6666666667,
      10.,
      6.2222222222,
      6.4444444444,
      12.8888888889,
      13.3333333333,
      20.,
      20.6666666667,
      13.7777777778,
      14.2222222222,
      7.1111111111,
      7.3333333333,
      3.4444444444,
      3.5555555556,
      7.1111111111,
      7.3333333333,
      11.,
      11.3333333333,
      7.5555555556,
      7.7777777778,
      3.8888888889,
      4.,
      4.1111111111,
      4.2222222222,
      8.4444444444,
      8.6666666667,
      13.,
      13.3333333333,
      8.8888888889,
      9.1111111111,
      4.5555555556,
      4.6666666667,
      8.8888888889,
      9.1111111111,
      18.2222222222,
      18.6666666667,
      28.,
      28.6666666667,
      19.1111111111,
      19.5555555556,
      9.7777777778,
      10.,
      14.3333333333,
      14.6666666667,
      29.3333333333,
      30.,
      45.,
      46.,
      30.6666666667,
      31.3333333333,
      15.6666666667,
      16.,
      10.2222222222,
      10.4444444444,
      20.8888888889,
      21.3333333333,
      32.,
      32.6666666667,
      21.7777777778,
      22.2222222222,
      11.1111111111,
      11.3333333333,
      5.4444444444,
      5.5555555556,
      11.1111111111,
      11.3333333333,
      17.,
      17.3333333333,
      11.5555555556,
      11.7777777778,
      5.8888888889,
      6.,
  };
  const std::array<int, 4> in_shape = {{3, 5, 5, 2}};
  const auto padding = PaddingMode::VALID;
  const auto params = getPoolingParams<3, 1>(in_shape, padding);
  const DataType max_input_val = 2048.0;
  this->test_pool(exp_out, params, max_input_val);
}
TYPED_TEST(AvgWindow3Stride1Grad, SAME3x5x5x4) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {7.3611111111,
                                         8.0555555556,
                                         8.75,
                                         9.4444444444,
                                         12.0833333333,
                                         13.0555555556,
                                         14.0277777778,
                                         15.,
                                         14.1666666667,
                                         15.,
                                         15.8333333333,
                                         16.6666666667,
                                         20.9722222222,
                                         21.9444444444,
                                         22.9166666667,
                                         23.8888888889,
                                         16.25,
                                         16.9444444444,
                                         17.6388888889,
                                         18.3333333333,
                                         19.1944444444,
                                         20.1666666667,
                                         21.1388888889,
                                         22.1111111111,
                                         29.3611111111,
                                         30.7222222222,
                                         32.0833333333,
                                         33.4444444444,
                                         30.5,
                                         31.6666666667,
                                         32.8333333333,
                                         34.,
                                         41.8055555556,
                                         43.1666666667,
                                         44.5277777778,
                                         45.8888888889,
                                         31.6388888889,
                                         32.6111111111,
                                         33.5833333333,
                                         34.5555555556,
                                         35.5,
                                         36.3333333333,
                                         37.1666666667,
                                         38.,
                                         51.8333333333,
                                         53.,
                                         54.1666666667,
                                         55.3333333333,
                                         49.,
                                         50.,
                                         51.,
                                         52.,
                                         62.5,
                                         63.6666666667,
                                         64.8333333333,
                                         66.,
                                         46.1666666667,
                                         47.,
                                         47.8333333333,
                                         48.6666666667,
                                         63.6388888889,
                                         64.6111111111,
                                         65.5833333333,
                                         66.5555555556,
                                         91.5833333333,
                                         92.9444444444,
                                         94.3055555556,
                                         95.6666666667,
                                         83.8333333333,
                                         85.,
                                         86.1666666667,
                                         87.3333333333,
                                         104.0277777778,
                                         105.3888888889,
                                         106.75,
                                         108.1111111111,
                                         76.0833333333,
                                         77.0555555556,
                                         78.0277777778,
                                         79.,
                                         51.8055555556,
                                         52.5,
                                         53.1944444444,
                                         53.8888888889,
                                         74.3055555556,
                                         75.2777777778,
                                         76.25,
                                         77.2222222222,
                                         67.5,
                                         68.3333333333,
                                         69.1666666667,
                                         70.,
                                         83.1944444444,
                                         84.1666666667,
                                         85.1388888889,
                                         86.1111111111,
                                         60.6944444444,
                                         61.3888888889,
                                         62.0833333333,
                                         62.7777777778,
                                         76.8055555556,
                                         77.5,
                                         78.1944444444,
                                         78.8888888889,
                                         109.3055555556,
                                         110.2777777778,
                                         111.25,
                                         112.2222222222,
                                         97.5,
                                         98.3333333333,
                                         99.1666666667,
                                         100.,
                                         118.1944444444,
                                         119.1666666667,
                                         120.1388888889,
                                         121.1111111111,
                                         85.6944444444,
                                         86.3888888889,
                                         87.0833333333,
                                         87.7777777778,
                                         116.4166666667,
                                         117.3888888889,
                                         118.3611111111,
                                         119.3333333333,
                                         165.4722222222,
                                         166.8333333333,
                                         168.1944444444,
                                         169.5555555556,
                                         147.1666666667,
                                         148.3333333333,
                                         149.5,
                                         150.6666666667,
                                         177.9166666667,
                                         179.2777777778,
                                         180.6388888889,
                                         182.,
                                         128.8611111111,
                                         129.8333333333,
                                         130.8055555556,
                                         131.7777777778,
                                         118.8333333333,
                                         119.6666666667,
                                         120.5,
                                         121.3333333333,
                                         168.5,
                                         169.6666666667,
                                         170.8333333333,
                                         172.,
                                         149.,
                                         150.,
                                         151.,
                                         152.,
                                         179.1666666667,
                                         180.3333333333,
                                         181.5,
                                         182.6666666667,
                                         129.5,
                                         130.3333333333,
                                         131.1666666667,
                                         132.,
                                         160.8611111111,
                                         161.8333333333,
                                         162.8055555556,
                                         163.7777777778,
                                         227.6944444444,
                                         229.0555555556,
                                         230.4166666667,
                                         231.7777777778,
                                         200.5,
                                         201.6666666667,
                                         202.8333333333,
                                         204.,
                                         240.1388888889,
                                         241.5,
                                         242.8611111111,
                                         244.2222222222,
                                         173.3055555556,
                                         174.2777777778,
                                         175.25,
                                         176.2222222222,
                                         121.25,
                                         121.9444444444,
                                         122.6388888889,
                                         123.3333333333,
                                         171.5277777778,
                                         172.5,
                                         173.4722222222,
                                         174.4444444444,
                                         150.8333333333,
                                         151.6666666667,
                                         152.5,
                                         153.3333333333,
                                         180.4166666667,
                                         181.3888888889,
                                         182.3611111111,
                                         183.3333333333,
                                         130.1388888889,
                                         130.8333333333,
                                         131.5277777778,
                                         132.2222222222,
                                         146.25,
                                         146.9444444444,
                                         147.6388888889,
                                         148.3333333333,
                                         206.5277777778,
                                         207.5,
                                         208.4722222222,
                                         209.4444444444,
                                         180.8333333333,
                                         181.6666666667,
                                         182.5,
                                         183.3333333333,
                                         215.4166666667,
                                         216.3888888889,
                                         217.3611111111,
                                         218.3333333333,
                                         155.1388888889,
                                         155.8333333333,
                                         156.5277777778,
                                         157.2222222222,
                                         213.6388888889,
                                         214.6111111111,
                                         215.5833333333,
                                         216.5555555556,
                                         301.5833333333,
                                         302.9444444444,
                                         304.3055555556,
                                         305.6666666667,
                                         263.8333333333,
                                         265.,
                                         266.1666666667,
                                         267.3333333333,
                                         314.0277777778,
                                         315.3888888889,
                                         316.75,
                                         318.1111111111,
                                         226.0833333333,
                                         227.0555555556,
                                         228.0277777778,
                                         229.,
                                         202.1666666667,
                                         203.,
                                         203.8333333333,
                                         204.6666666667,
                                         285.1666666667,
                                         286.3333333333,
                                         287.5,
                                         288.6666666667,
                                         249.,
                                         250.,
                                         251.,
                                         252.,
                                         295.8333333333,
                                         297.,
                                         298.1666666667,
                                         299.3333333333,
                                         212.8333333333,
                                         213.6666666667,
                                         214.5,
                                         215.3333333333,
                                         258.0833333333,
                                         259.0555555556,
                                         260.0277777778,
                                         261.,
                                         363.8055555556,
                                         365.1666666667,
                                         366.5277777778,
                                         367.8888888889,
                                         317.1666666667,
                                         318.3333333333,
                                         319.5,
                                         320.6666666667,
                                         376.25,
                                         377.6111111111,
                                         378.9722222222,
                                         380.3333333333,
                                         270.5277777778,
                                         271.5,
                                         272.4722222222,
                                         273.4444444444,
                                         190.6944444444,
                                         191.3888888889,
                                         192.0833333333,
                                         192.7777777778,
                                         268.75,
                                         269.7222222222,
                                         270.6944444444,
                                         271.6666666667,
                                         234.1666666667,
                                         235.,
                                         235.8333333333,
                                         236.6666666667,
                                         277.6388888889,
                                         278.6111111111,
                                         279.5833333333,
                                         280.5555555556,
                                         199.5833333333,
                                         200.2777777778,
                                         200.9722222222,
                                         201.6666666667};
  const std::array<int, 4> in_shape = {{3, 5, 5, 4}};
  const auto padding = PaddingMode::SAME;
  const auto params = getPoolingParams<3, 1>(in_shape, padding);
  const DataType max_input_val = 2048.0;
  this->test_pool(exp_out, params, max_input_val);
}
TYPED_TEST(AvgWindow3Stride1Grad, VALID3x5x5x4) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      0.1111111111,
      0.2222222222,
      0.3333333333,
      0.4444444444,
      0.6666666667,
      0.8888888889,
      1.1111111111,
      1.3333333333,
      1.6666666667,
      2.,
      2.3333333333,
      2.6666666667,
      1.5555555556,
      1.7777777778,
      2.,
      2.2222222222,
      1.,
      1.1111111111,
      1.2222222222,
      1.3333333333,
      1.5555555556,
      1.7777777778,
      2.,
      2.2222222222,
      4.,
      4.4444444444,
      4.8888888889,
      5.3333333333,
      7.3333333333,
      8.,
      8.6666666667,
      9.3333333333,
      5.7777777778,
      6.2222222222,
      6.6666666667,
      7.1111111111,
      3.3333333333,
      3.5555555556,
      3.7777777778,
      4.,
      4.3333333333,
      4.6666666667,
      5.,
      5.3333333333,
      10.,
      10.6666666667,
      11.3333333333,
      12.,
      17.,
      18.,
      19.,
      20.,
      12.6666666667,
      13.3333333333,
      14.,
      14.6666666667,
      7.,
      7.3333333333,
      7.6666666667,
      8.,
      4.2222222222,
      4.4444444444,
      4.6666666667,
      4.8888888889,
      9.3333333333,
      9.7777777778,
      10.2222222222,
      10.6666666667,
      15.3333333333,
      16.,
      16.6666666667,
      17.3333333333,
      11.1111111111,
      11.5555555556,
      12.,
      12.4444444444,
      6.,
      6.2222222222,
      6.4444444444,
      6.6666666667,
      2.7777777778,
      2.8888888889,
      3.,
      3.1111111111,
      6.,
      6.2222222222,
      6.4444444444,
      6.6666666667,
      9.6666666667,
      10.,
      10.3333333333,
      10.6666666667,
      6.8888888889,
      7.1111111111,
      7.3333333333,
      7.5555555556,
      3.6666666667,
      3.7777777778,
      3.8888888889,
      4.,
      4.1111111111,
      4.2222222222,
      4.3333333333,
      4.4444444444,
      8.6666666667,
      8.8888888889,
      9.1111111111,
      9.3333333333,
      13.6666666667,
      14.,
      14.3333333333,
      14.6666666667,
      9.5555555556,
      9.7777777778,
      10.,
      10.2222222222,
      5.,
      5.1111111111,
      5.2222222222,
      5.3333333333,
      9.5555555556,
      9.7777777778,
      10.,
      10.2222222222,
      20.,
      20.4444444444,
      20.8888888889,
      21.3333333333,
      31.3333333333,
      32.,
      32.6666666667,
      33.3333333333,
      21.7777777778,
      22.2222222222,
      22.6666666667,
      23.1111111111,
      11.3333333333,
      11.5555555556,
      11.7777777778,
      12.,
      16.3333333333,
      16.6666666667,
      17.,
      17.3333333333,
      34.,
      34.6666666667,
      35.3333333333,
      36.,
      53.,
      54.,
      55.,
      56.,
      36.6666666667,
      37.3333333333,
      38.,
      38.6666666667,
      19.,
      19.3333333333,
      19.6666666667,
      20.,
      12.2222222222,
      12.4444444444,
      12.6666666667,
      12.8888888889,
      25.3333333333,
      25.7777777778,
      26.2222222222,
      26.6666666667,
      39.3333333333,
      40.,
      40.6666666667,
      41.3333333333,
      27.1111111111,
      27.5555555556,
      28.,
      28.4444444444,
      14.,
      14.2222222222,
      14.4444444444,
      14.6666666667,
      6.7777777778,
      6.8888888889,
      7.,
      7.1111111111,
      14.,
      14.2222222222,
      14.4444444444,
      14.6666666667,
      21.6666666667,
      22.,
      22.3333333333,
      22.6666666667,
      14.8888888889,
      15.1111111111,
      15.3333333333,
      15.5555555556,
      7.6666666667,
      7.7777777778,
      7.8888888889,
      8.,
      8.1111111111,
      8.2222222222,
      8.3333333333,
      8.4444444444,
      16.6666666667,
      16.8888888889,
      17.1111111111,
      17.3333333333,
      25.6666666667,
      26.,
      26.3333333333,
      26.6666666667,
      17.5555555556,
      17.7777777778,
      18.,
      18.2222222222,
      9.,
      9.1111111111,
      9.2222222222,
      9.3333333333,
      17.5555555556,
      17.7777777778,
      18.,
      18.2222222222,
      36.,
      36.4444444444,
      36.8888888889,
      37.3333333333,
      55.3333333333,
      56.,
      56.6666666667,
      57.3333333333,
      37.7777777778,
      38.2222222222,
      38.6666666667,
      39.1111111111,
      19.3333333333,
      19.5555555556,
      19.7777777778,
      20.,
      28.3333333333,
      28.6666666667,
      29.,
      29.3333333333,
      58.,
      58.6666666667,
      59.3333333333,
      60.,
      89.,
      90.,
      91.,
      92.,
      60.6666666667,
      61.3333333333,
      62.,
      62.6666666667,
      31.,
      31.3333333333,
      31.6666666667,
      32.,
      20.2222222222,
      20.4444444444,
      20.6666666667,
      20.8888888889,
      41.3333333333,
      41.7777777778,
      42.2222222222,
      42.6666666667,
      63.3333333333,
      64.,
      64.6666666667,
      65.3333333333,
      43.1111111111,
      43.5555555556,
      44.,
      44.4444444444,
      22.,
      22.2222222222,
      22.4444444444,
      22.6666666667,
      10.7777777778,
      10.8888888889,
      11.,
      11.1111111111,
      22.,
      22.2222222222,
      22.4444444444,
      22.6666666667,
      33.6666666667,
      34.,
      34.3333333333,
      34.6666666667,
      22.8888888889,
      23.1111111111,
      23.3333333333,
      23.5555555556,
      11.6666666667,
      11.7777777778,
      11.8888888889,
      12.,
  };
  const std::array<int, 4> in_shape = {{3, 5, 5, 4}};
  const auto padding = PaddingMode::VALID;
  const auto params = getPoolingParams<3, 1>(in_shape, padding);
  const DataType max_input_val = 2048.0;
  this->test_pool(exp_out, params, max_input_val);
}
TYPED_TEST(AvgWindow3Stride1Grad, SAME3x5x6x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {2.6388888889,
                                         4.1388888889,
                                         4.5,
                                         5.3333333333,
                                         7.3333333333,
                                         5.5555555556,
                                         6.3611111111,
                                         9.5277777778,
                                         9.5,
                                         10.6666666667,
                                         14.,
                                         10.4444444444,
                                         11.1666666667,
                                         16.1666666667,
                                         15.,
                                         16.,
                                         20.,
                                         14.6666666667,
                                         19.6944444444,
                                         28.1944444444,
                                         25.5,
                                         26.6666666667,
                                         32.6666666667,
                                         23.7777777778,
                                         15.9722222222,
                                         22.8055555556,
                                         20.5,
                                         21.3333333333,
                                         26.,
                                         18.8888888889,
                                         23.4722222222,
                                         33.3055555556,
                                         29.5,
                                         30.3333333333,
                                         36.5,
                                         26.3888888889,
                                         35.5277777778,
                                         50.3611111111,
                                         44.5,
                                         45.6666666667,
                                         54.8333333333,
                                         39.6111111111,
                                         36.1666666667,
                                         51.1666666667,
                                         45.,
                                         46.,
                                         55.,
                                         39.6666666667,
                                         48.8611111111,
                                         69.0277777778,
                                         60.5,
                                         61.6666666667,
                                         73.5,
                                         52.9444444444,
                                         36.8055555556,
                                         51.9722222222,
                                         45.5,
                                         46.3333333333,
                                         55.1666666667,
                                         39.7222222222,
                                         44.3055555556,
                                         62.4722222222,
                                         54.5,
                                         55.3333333333,
                                         65.6666666667,
                                         47.2222222222,
                                         64.6944444444,
                                         91.1944444444,
                                         79.5,
                                         80.6666666667,
                                         95.6666666667,
                                         68.7777777778,
                                         61.1666666667,
                                         86.1666666667,
                                         75.,
                                         76.,
                                         90.,
                                         64.6666666667,
                                         78.0277777778,
                                         109.8611111111,
                                         95.5,
                                         96.6666666667,
                                         114.3333333333,
                                         82.1111111111,
                                         57.6388888889,
                                         81.1388888889,
                                         70.5,
                                         71.3333333333,
                                         84.3333333333,
                                         60.5555555556};
  const std::array<int, 4> in_shape = {{3, 5, 6, 1}};
  const auto padding = PaddingMode::SAME;
  const auto params = getPoolingParams<3, 1>(in_shape, padding);
  const DataType max_input_val = 2048.0;
  this->test_pool(exp_out, params, max_input_val);
}
TYPED_TEST(AvgWindow3Stride1Grad, VALID3x5x6x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      0.1111111111,
      0.3333333333,
      0.6666666667,
      1.,
      0.7777777778,
      0.4444444444,
      0.6666666667,
      1.5555555556,
      2.6666666667,
      3.3333333333,
      2.4444444444,
      1.3333333333,
      1.6666666667,
      3.6666666667,
      6.,
      7.,
      5.,
      2.6666666667,
      1.5555555556,
      3.3333333333,
      5.3333333333,
      6.,
      4.2222222222,
      2.2222222222,
      1.,
      2.1111111111,
      3.3333333333,
      3.6666666667,
      2.5555555556,
      1.3333333333,
      1.4444444444,
      3.,
      4.6666666667,
      5.,
      3.4444444444,
      1.7777777778,
      3.3333333333,
      6.8888888889,
      10.6666666667,
      11.3333333333,
      7.7777777778,
      4.,
      5.6666666667,
      11.6666666667,
      18.,
      19.,
      13.,
      6.6666666667,
      4.2222222222,
      8.6666666667,
      13.3333333333,
      14.,
      9.5555555556,
      4.8888888889,
      2.3333333333,
      4.7777777778,
      7.3333333333,
      7.6666666667,
      5.2222222222,
      2.6666666667,
      2.7777777778,
      5.6666666667,
      8.6666666667,
      9.,
      6.1111111111,
      3.1111111111,
      6.,
      12.2222222222,
      18.6666666667,
      19.3333333333,
      13.1111111111,
      6.6666666667,
      9.6666666667,
      19.6666666667,
      30.,
      31.,
      21.,
      10.6666666667,
      6.8888888889,
      14.,
      21.3333333333,
      22.,
      14.8888888889,
      7.5555555556,
      3.6666666667,
      7.4444444444,
      11.3333333333,
      11.6666666667,
      7.8888888889,
      4.,
  };
  const std::array<int, 4> in_shape = {{3, 5, 6, 1}};
  const auto padding = PaddingMode::VALID;
  const auto params = getPoolingParams<3, 1>(in_shape, padding);
  const DataType max_input_val = 2048.0;
  this->test_pool(exp_out, params, max_input_val);
}
TYPED_TEST(AvgWindow3Stride1Grad, SAME3x5x6x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {4.5833333333,
                                         5.2777777778,
                                         7.3055555556,
                                         8.2777777778,
                                         8.1666666667,
                                         9.,
                                         9.8333333333,
                                         10.6666666667,
                                         13.6944444444,
                                         14.6666666667,
                                         10.4166666667,
                                         11.1111111111,
                                         11.75,
                                         12.7222222222,
                                         17.6944444444,
                                         19.0555555556,
                                         17.8333333333,
                                         19.,
                                         20.1666666667,
                                         21.3333333333,
                                         26.6388888889,
                                         28.,
                                         19.9166666667,
                                         20.8888888889,
                                         21.5,
                                         22.3333333333,
                                         31.1666666667,
                                         32.3333333333,
                                         29.,
                                         30.,
                                         31.,
                                         32.,
                                         38.8333333333,
                                         40.,
                                         28.5,
                                         29.3333333333,
                                         38.4166666667,
                                         39.3888888889,
                                         55.0277777778,
                                         56.3888888889,
                                         49.8333333333,
                                         51.,
                                         52.1666666667,
                                         53.3333333333,
                                         63.9722222222,
                                         65.3333333333,
                                         46.5833333333,
                                         47.5555555556,
                                         31.25,
                                         31.9444444444,
                                         44.6388888889,
                                         45.6111111111,
                                         40.1666666667,
                                         41.,
                                         41.8333333333,
                                         42.6666666667,
                                         51.0277777778,
                                         52.,
                                         37.0833333333,
                                         37.7777777778,
                                         46.25,
                                         46.9444444444,
                                         65.6388888889,
                                         66.6111111111,
                                         58.1666666667,
                                         59.,
                                         59.8333333333,
                                         60.6666666667,
                                         72.0277777778,
                                         73.,
                                         52.0833333333,
                                         52.7777777778,
                                         70.0833333333,
                                         71.0555555556,
                                         99.3611111111,
                                         100.7222222222,
                                         87.8333333333,
                                         89.,
                                         90.1666666667,
                                         91.3333333333,
                                         108.3055555556,
                                         109.6666666667,
                                         78.25,
                                         79.2222222222,
                                         71.5,
                                         72.3333333333,
                                         101.1666666667,
                                         102.3333333333,
                                         89.,
                                         90.,
                                         91.,
                                         92.,
                                         108.8333333333,
                                         110.,
                                         78.5,
                                         79.3333333333,
                                         96.75,
                                         97.7222222222,
                                         136.6944444444,
                                         138.0555555556,
                                         119.8333333333,
                                         121.,
                                         122.1666666667,
                                         123.3333333333,
                                         145.6388888889,
                                         147.,
                                         104.9166666667,
                                         105.8888888889,
                                         72.9166666667,
                                         73.6111111111,
                                         102.9722222222,
                                         103.9444444444,
                                         90.1666666667,
                                         91.,
                                         91.8333333333,
                                         92.6666666667,
                                         109.3611111111,
                                         110.3333333333,
                                         78.75,
                                         79.4444444444,
                                         87.9166666667,
                                         88.6111111111,
                                         123.9722222222,
                                         124.9444444444,
                                         108.1666666667,
                                         109.,
                                         109.8333333333,
                                         110.6666666667,
                                         130.3611111111,
                                         131.3333333333,
                                         93.75,
                                         94.4444444444,
                                         128.4166666667,
                                         129.3888888889,
                                         181.0277777778,
                                         182.3888888889,
                                         157.8333333333,
                                         159.,
                                         160.1666666667,
                                         161.3333333333,
                                         189.9722222222,
                                         191.3333333333,
                                         136.5833333333,
                                         137.5555555556,
                                         121.5,
                                         122.3333333333,
                                         171.1666666667,
                                         172.3333333333,
                                         149.,
                                         150.,
                                         151.,
                                         152.,
                                         178.8333333333,
                                         180.,
                                         128.5,
                                         129.3333333333,
                                         155.0833333333,
                                         156.0555555556,
                                         218.3611111111,
                                         219.7222222222,
                                         189.8333333333,
                                         191.,
                                         192.1666666667,
                                         193.3333333333,
                                         227.3055555556,
                                         228.6666666667,
                                         163.25,
                                         164.2222222222,
                                         114.5833333333,
                                         115.2777777778,
                                         161.3055555556,
                                         162.2777777778,
                                         140.1666666667,
                                         141.,
                                         141.8333333333,
                                         142.6666666667,
                                         167.6944444444,
                                         168.6666666667,
                                         120.4166666667,
                                         121.1111111111};
  const std::array<int, 4> in_shape = {{3, 5, 6, 2}};
  const auto padding = PaddingMode::SAME;
  const auto params = getPoolingParams<3, 1>(in_shape, padding);
  const DataType max_input_val = 2048.0;
  this->test_pool(exp_out, params, max_input_val);
}
TYPED_TEST(AvgWindow3Stride1Grad, VALID3x5x6x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      0.1111111111,
      0.2222222222,
      0.4444444444,
      0.6666666667,
      1.,
      1.3333333333,
      1.6666666667,
      2.,
      1.3333333333,
      1.5555555556,
      0.7777777778,
      0.8888888889,
      1.1111111111,
      1.3333333333,
      2.6666666667,
      3.1111111111,
      4.6666666667,
      5.3333333333,
      6.,
      6.6666666667,
      4.4444444444,
      4.8888888889,
      2.4444444444,
      2.6666666667,
      3.,
      3.3333333333,
      6.6666666667,
      7.3333333333,
      11.,
      12.,
      13.,
      14.,
      9.3333333333,
      10.,
      5.,
      5.3333333333,
      2.8888888889,
      3.1111111111,
      6.2222222222,
      6.6666666667,
      10.,
      10.6666666667,
      11.3333333333,
      12.,
      8.,
      8.4444444444,
      4.2222222222,
      4.4444444444,
      1.8888888889,
      2.,
      4.,
      4.2222222222,
      6.3333333333,
      6.6666666667,
      7.,
      7.3333333333,
      4.8888888889,
      5.1111111111,
      2.5555555556,
      2.6666666667,
      2.7777777778,
      2.8888888889,
      5.7777777778,
      6.,
      9.,
      9.3333333333,
      9.6666666667,
      10.,
      6.6666666667,
      6.8888888889,
      3.4444444444,
      3.5555555556,
      6.4444444444,
      6.6666666667,
      13.3333333333,
      13.7777777778,
      20.6666666667,
      21.3333333333,
      22.,
      22.6666666667,
      15.1111111111,
      15.5555555556,
      7.7777777778,
      8.,
      11.,
      11.3333333333,
      22.6666666667,
      23.3333333333,
      35.,
      36.,
      37.,
      38.,
      25.3333333333,
      26.,
      13.,
      13.3333333333,
      8.2222222222,
      8.4444444444,
      16.8888888889,
      17.3333333333,
      26.,
      26.6666666667,
      27.3333333333,
      28.,
      18.6666666667,
      19.1111111111,
      9.5555555556,
      9.7777777778,
      4.5555555556,
      4.6666666667,
      9.3333333333,
      9.5555555556,
      14.3333333333,
      14.6666666667,
      15.,
      15.3333333333,
      10.2222222222,
      10.4444444444,
      5.2222222222,
      5.3333333333,
      5.4444444444,
      5.5555555556,
      11.1111111111,
      11.3333333333,
      17.,
      17.3333333333,
      17.6666666667,
      18.,
      12.,
      12.2222222222,
      6.1111111111,
      6.2222222222,
      11.7777777778,
      12.,
      24.,
      24.4444444444,
      36.6666666667,
      37.3333333333,
      38.,
      38.6666666667,
      25.7777777778,
      26.2222222222,
      13.1111111111,
      13.3333333333,
      19.,
      19.3333333333,
      38.6666666667,
      39.3333333333,
      59.,
      60.,
      61.,
      62.,
      41.3333333333,
      42.,
      21.,
      21.3333333333,
      13.5555555556,
      13.7777777778,
      27.5555555556,
      28.,
      42.,
      42.6666666667,
      43.3333333333,
      44.,
      29.3333333333,
      29.7777777778,
      14.8888888889,
      15.1111111111,
      7.2222222222,
      7.3333333333,
      14.6666666667,
      14.8888888889,
      22.3333333333,
      22.6666666667,
      23.,
      23.3333333333,
      15.5555555556,
      15.7777777778,
      7.8888888889,
      8.,
  };
  const std::array<int, 4> in_shape = {{3, 5, 6, 2}};
  const auto padding = PaddingMode::VALID;
  const auto params = getPoolingParams<3, 1>(in_shape, padding);
  const DataType max_input_val = 2048.0;
  this->test_pool(exp_out, params, max_input_val);
}
TYPED_TEST(AvgWindow3Stride1Grad, SAME3x5x6x4) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {8.4722222222,
                                         9.1666666667,
                                         9.8611111111,
                                         10.5555555556,
                                         13.6388888889,
                                         14.6111111111,
                                         15.5833333333,
                                         16.5555555556,
                                         15.5,
                                         16.3333333333,
                                         17.1666666667,
                                         18.,
                                         18.8333333333,
                                         19.6666666667,
                                         20.5,
                                         21.3333333333,
                                         26.4166666667,
                                         27.3888888889,
                                         28.3611111111,
                                         29.3333333333,
                                         20.1388888889,
                                         20.8333333333,
                                         21.5277777778,
                                         22.2222222222,
                                         22.5277777778,
                                         23.5,
                                         24.4722222222,
                                         25.4444444444,
                                         34.0277777778,
                                         35.3888888889,
                                         36.75,
                                         38.1111111111,
                                         34.5,
                                         35.6666666667,
                                         36.8333333333,
                                         38.,
                                         39.1666666667,
                                         40.3333333333,
                                         41.5,
                                         42.6666666667,
                                         51.9166666667,
                                         53.2777777778,
                                         54.6388888889,
                                         56.,
                                         38.8611111111,
                                         39.8333333333,
                                         40.8055555556,
                                         41.7777777778,
                                         42.1666666667,
                                         43.,
                                         43.8333333333,
                                         44.6666666667,
                                         61.1666666667,
                                         62.3333333333,
                                         63.5,
                                         64.6666666667,
                                         57.,
                                         58.,
                                         59.,
                                         60.,
                                         61.,
                                         62.,
                                         63.,
                                         64.,
                                         76.5,
                                         77.6666666667,
                                         78.8333333333,
                                         80.,
                                         56.1666666667,
                                         57.,
                                         57.8333333333,
                                         58.6666666667,
                                         75.8611111111,
                                         76.8333333333,
                                         77.8055555556,
                                         78.7777777778,
                                         108.6944444444,
                                         110.0555555556,
                                         111.4166666667,
                                         112.7777777778,
                                         98.5,
                                         99.6666666667,
                                         100.8333333333,
                                         102.,
                                         103.1666666667,
                                         104.3333333333,
                                         105.5,
                                         106.6666666667,
                                         126.5833333333,
                                         127.9444444444,
                                         129.3055555556,
                                         130.6666666667,
                                         92.1944444444,
                                         93.1666666667,
                                         94.1388888889,
                                         95.1111111111,
                                         61.8055555556,
                                         62.5,
                                         63.1944444444,
                                         63.8888888889,
                                         88.3055555556,
                                         89.2777777778,
                                         90.25,
                                         91.2222222222,
                                         79.5,
                                         80.3333333333,
                                         81.1666666667,
                                         82.,
                                         82.8333333333,
                                         83.6666666667,
                                         84.5,
                                         85.3333333333,
                                         101.0833333333,
                                         102.0555555556,
                                         103.0277777778,
                                         104.,
                                         73.4722222222,
                                         74.1666666667,
                                         74.8611111111,
                                         75.5555555556,
                                         91.8055555556,
                                         92.5,
                                         93.1944444444,
                                         93.8888888889,
                                         130.3055555556,
                                         131.2777777778,
                                         132.25,
                                         133.2222222222,
                                         115.5,
                                         116.3333333333,
                                         117.1666666667,
                                         118.,
                                         118.8333333333,
                                         119.6666666667,
                                         120.5,
                                         121.3333333333,
                                         143.0833333333,
                                         144.0555555556,
                                         145.0277777778,
                                         146.,
                                         103.4722222222,
                                         104.1666666667,
                                         104.8611111111,
                                         105.5555555556,
                                         139.1944444444,
                                         140.1666666667,
                                         141.1388888889,
                                         142.1111111111,
                                         197.3611111111,
                                         198.7222222222,
                                         200.0833333333,
                                         201.4444444444,
                                         174.5,
                                         175.6666666667,
                                         176.8333333333,
                                         178.,
                                         179.1666666667,
                                         180.3333333333,
                                         181.5,
                                         182.6666666667,
                                         215.25,
                                         216.6111111111,
                                         217.9722222222,
                                         219.3333333333,
                                         155.5277777778,
                                         156.5,
                                         157.4722222222,
                                         158.4444444444,
                                         142.1666666667,
                                         143.,
                                         143.8333333333,
                                         144.6666666667,
                                         201.1666666667,
                                         202.3333333333,
                                         203.5,
                                         204.6666666667,
                                         177.,
                                         178.,
                                         179.,
                                         180.,
                                         181.,
                                         182.,
                                         183.,
                                         184.,
                                         216.5,
                                         217.6666666667,
                                         218.8333333333,
                                         220.,
                                         156.1666666667,
                                         157.,
                                         157.8333333333,
                                         158.6666666667,
                                         192.5277777778,
                                         193.5,
                                         194.4722222222,
                                         195.4444444444,
                                         272.0277777778,
                                         273.3888888889,
                                         274.75,
                                         276.1111111111,
                                         238.5,
                                         239.6666666667,
                                         240.8333333333,
                                         242.,
                                         243.1666666667,
                                         244.3333333333,
                                         245.5,
                                         246.6666666667,
                                         289.9166666667,
                                         291.2777777778,
                                         292.6388888889,
                                         294.,
                                         208.8611111111,
                                         209.8333333333,
                                         210.8055555556,
                                         211.7777777778,
                                         145.1388888889,
                                         145.8333333333,
                                         146.5277777778,
                                         147.2222222222,
                                         204.9722222222,
                                         205.9444444444,
                                         206.9166666667,
                                         207.8888888889,
                                         179.5,
                                         180.3333333333,
                                         181.1666666667,
                                         182.,
                                         182.8333333333,
                                         183.6666666667,
                                         184.5,
                                         185.3333333333,
                                         217.75,
                                         218.7222222222,
                                         219.6944444444,
                                         220.6666666667,
                                         156.8055555556,
                                         157.5,
                                         158.1944444444,
                                         158.8888888889,
                                         175.1388888889,
                                         175.8333333333,
                                         176.5277777778,
                                         177.2222222222,
                                         246.9722222222,
                                         247.9444444444,
                                         248.9166666667,
                                         249.8888888889,
                                         215.5,
                                         216.3333333333,
                                         217.1666666667,
                                         218.,
                                         218.8333333333,
                                         219.6666666667,
                                         220.5,
                                         221.3333333333,
                                         259.75,
                                         260.7222222222,
                                         261.6944444444,
                                         262.6666666667,
                                         186.8055555556,
                                         187.5,
                                         188.1944444444,
                                         188.8888888889,
                                         255.8611111111,
                                         256.8333333333,
                                         257.8055555556,
                                         258.7777777778,
                                         360.6944444444,
                                         362.0555555556,
                                         363.4166666667,
                                         364.7777777778,
                                         314.5,
                                         315.6666666667,
                                         316.8333333333,
                                         318.,
                                         319.1666666667,
                                         320.3333333333,
                                         321.5,
                                         322.6666666667,
                                         378.5833333333,
                                         379.9444444444,
                                         381.3055555556,
                                         382.6666666667,
                                         272.1944444444,
                                         273.1666666667,
                                         274.1388888889,
                                         275.1111111111,
                                         242.1666666667,
                                         243.,
                                         243.8333333333,
                                         244.6666666667,
                                         341.1666666667,
                                         342.3333333333,
                                         343.5,
                                         344.6666666667,
                                         297.,
                                         298.,
                                         299.,
                                         300.,
                                         301.,
                                         302.,
                                         303.,
                                         304.,
                                         356.5,
                                         357.6666666667,
                                         358.8333333333,
                                         360.,
                                         256.1666666667,
                                         257.,
                                         257.8333333333,
                                         258.6666666667,
                                         309.1944444444,
                                         310.1666666667,
                                         311.1388888889,
                                         312.1111111111,
                                         435.3611111111,
                                         436.7222222222,
                                         438.0833333333,
                                         439.4444444444,
                                         378.5,
                                         379.6666666667,
                                         380.8333333333,
                                         382.,
                                         383.1666666667,
                                         384.3333333333,
                                         385.5,
                                         386.6666666667,
                                         453.25,
                                         454.6111111111,
                                         455.9722222222,
                                         457.3333333333,
                                         325.5277777778,
                                         326.5,
                                         327.4722222222,
                                         328.4444444444,
                                         228.4722222222,
                                         229.1666666667,
                                         229.8611111111,
                                         230.5555555556,
                                         321.6388888889,
                                         322.6111111111,
                                         323.5833333333,
                                         324.5555555556,
                                         279.5,
                                         280.3333333333,
                                         281.1666666667,
                                         282.,
                                         282.8333333333,
                                         283.6666666667,
                                         284.5,
                                         285.3333333333,
                                         334.4166666667,
                                         335.3888888889,
                                         336.3611111111,
                                         337.3333333333,
                                         240.1388888889,
                                         240.8333333333,
                                         241.5277777778,
                                         242.2222222222};
  const std::array<int, 4> in_shape = {{3, 5, 6, 4}};
  const auto padding = PaddingMode::SAME;
  const auto params = getPoolingParams<3, 1>(in_shape, padding);
  const DataType max_input_val = 2048.0;
  this->test_pool(exp_out, params, max_input_val);
}
TYPED_TEST(AvgWindow3Stride1Grad, VALID3x5x6x4) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      0.1111111111,
      0.2222222222,
      0.3333333333,
      0.4444444444,
      0.6666666667,
      0.8888888889,
      1.1111111111,
      1.3333333333,
      1.6666666667,
      2.,
      2.3333333333,
      2.6666666667,
      3.,
      3.3333333333,
      3.6666666667,
      4.,
      2.4444444444,
      2.6666666667,
      2.8888888889,
      3.1111111111,
      1.4444444444,
      1.5555555556,
      1.6666666667,
      1.7777777778,
      2.,
      2.2222222222,
      2.4444444444,
      2.6666666667,
      4.8888888889,
      5.3333333333,
      5.7777777778,
      6.2222222222,
      8.6666666667,
      9.3333333333,
      10.,
      10.6666666667,
      11.3333333333,
      12.,
      12.6666666667,
      13.3333333333,
      8.4444444444,
      8.8888888889,
      9.3333333333,
      9.7777777778,
      4.6666666667,
      4.8888888889,
      5.1111111111,
      5.3333333333,
      5.6666666667,
      6.,
      6.3333333333,
      6.6666666667,
      12.6666666667,
      13.3333333333,
      14.,
      14.6666666667,
      21.,
      22.,
      23.,
      24.,
      25.,
      26.,
      27.,
      28.,
      18.,
      18.6666666667,
      19.3333333333,
      20.,
      9.6666666667,
      10.,
      10.3333333333,
      10.6666666667,
      5.5555555556,
      5.7777777778,
      6.,
      6.2222222222,
      12.,
      12.4444444444,
      12.8888888889,
      13.3333333333,
      19.3333333333,
      20.,
      20.6666666667,
      21.3333333333,
      22.,
      22.6666666667,
      23.3333333333,
      24.,
      15.5555555556,
      16.,
      16.4444444444,
      16.8888888889,
      8.2222222222,
      8.4444444444,
      8.6666666667,
      8.8888888889,
      3.6666666667,
      3.7777777778,
      3.8888888889,
      4.,
      7.7777777778,
      8.,
      8.2222222222,
      8.4444444444,
      12.3333333333,
      12.6666666667,
      13.,
      13.3333333333,
      13.6666666667,
      14.,
      14.3333333333,
      14.6666666667,
      9.5555555556,
      9.7777777778,
      10.,
      10.2222222222,
      5.,
      5.1111111111,
      5.2222222222,
      5.3333333333,
      5.4444444444,
      5.5555555556,
      5.6666666667,
      5.7777777778,
      11.3333333333,
      11.5555555556,
      11.7777777778,
      12.,
      17.6666666667,
      18.,
      18.3333333333,
      18.6666666667,
      19.,
      19.3333333333,
      19.6666666667,
      20.,
      13.1111111111,
      13.3333333333,
      13.5555555556,
      13.7777777778,
      6.7777777778,
      6.8888888889,
      7.,
      7.1111111111,
      12.6666666667,
      12.8888888889,
      13.1111111111,
      13.3333333333,
      26.2222222222,
      26.6666666667,
      27.1111111111,
      27.5555555556,
      40.6666666667,
      41.3333333333,
      42.,
      42.6666666667,
      43.3333333333,
      44.,
      44.6666666667,
      45.3333333333,
      29.7777777778,
      30.2222222222,
      30.6666666667,
      31.1111111111,
      15.3333333333,
      15.5555555556,
      15.7777777778,
      16.,
      21.6666666667,
      22.,
      22.3333333333,
      22.6666666667,
      44.6666666667,
      45.3333333333,
      46.,
      46.6666666667,
      69.,
      70.,
      71.,
      72.,
      73.,
      74.,
      75.,
      76.,
      50.,
      50.6666666667,
      51.3333333333,
      52.,
      25.6666666667,
      26.,
      26.3333333333,
      26.6666666667,
      16.2222222222,
      16.4444444444,
      16.6666666667,
      16.8888888889,
      33.3333333333,
      33.7777777778,
      34.2222222222,
      34.6666666667,
      51.3333333333,
      52.,
      52.6666666667,
      53.3333333333,
      54.,
      54.6666666667,
      55.3333333333,
      56.,
      36.8888888889,
      37.3333333333,
      37.7777777778,
      38.2222222222,
      18.8888888889,
      19.1111111111,
      19.3333333333,
      19.5555555556,
      9.,
      9.1111111111,
      9.2222222222,
      9.3333333333,
      18.4444444444,
      18.6666666667,
      18.8888888889,
      19.1111111111,
      28.3333333333,
      28.6666666667,
      29.,
      29.3333333333,
      29.6666666667,
      30.,
      30.3333333333,
      30.6666666667,
      20.2222222222,
      20.4444444444,
      20.6666666667,
      20.8888888889,
      10.3333333333,
      10.4444444444,
      10.5555555556,
      10.6666666667,
      10.7777777778,
      10.8888888889,
      11.,
      11.1111111111,
      22.,
      22.2222222222,
      22.4444444444,
      22.6666666667,
      33.6666666667,
      34.,
      34.3333333333,
      34.6666666667,
      35.,
      35.3333333333,
      35.6666666667,
      36.,
      23.7777777778,
      24.,
      24.2222222222,
      24.4444444444,
      12.1111111111,
      12.2222222222,
      12.3333333333,
      12.4444444444,
      23.3333333333,
      23.5555555556,
      23.7777777778,
      24.,
      47.5555555556,
      48.,
      48.4444444444,
      48.8888888889,
      72.6666666667,
      73.3333333333,
      74.,
      74.6666666667,
      75.3333333333,
      76.,
      76.6666666667,
      77.3333333333,
      51.1111111111,
      51.5555555556,
      52.,
      52.4444444444,
      26.,
      26.2222222222,
      26.4444444444,
      26.6666666667,
      37.6666666667,
      38.,
      38.3333333333,
      38.6666666667,
      76.6666666667,
      77.3333333333,
      78.,
      78.6666666667,
      117.,
      118.,
      119.,
      120.,
      121.,
      122.,
      123.,
      124.,
      82.,
      82.6666666667,
      83.3333333333,
      84.,
      41.6666666667,
      42.,
      42.3333333333,
      42.6666666667,
      26.8888888889,
      27.1111111111,
      27.3333333333,
      27.5555555556,
      54.6666666667,
      55.1111111111,
      55.5555555556,
      56.,
      83.3333333333,
      84.,
      84.6666666667,
      85.3333333333,
      86.,
      86.6666666667,
      87.3333333333,
      88.,
      58.2222222222,
      58.6666666667,
      59.1111111111,
      59.5555555556,
      29.5555555556,
      29.7777777778,
      30.,
      30.2222222222,
      14.3333333333,
      14.4444444444,
      14.5555555556,
      14.6666666667,
      29.1111111111,
      29.3333333333,
      29.5555555556,
      29.7777777778,
      44.3333333333,
      44.6666666667,
      45.,
      45.3333333333,
      45.6666666667,
      46.,
      46.3333333333,
      46.6666666667,
      30.8888888889,
      31.1111111111,
      31.3333333333,
      31.5555555556,
      15.6666666667,
      15.7777777778,
      15.8888888889,
      16.,
  };
  const std::array<int, 4> in_shape = {{3, 5, 6, 4}};
  const auto padding = PaddingMode::VALID;
  const auto params = getPoolingParams<3, 1>(in_shape, padding);
  const DataType max_input_val = 2048.0;
  this->test_pool(exp_out, params, max_input_val);
}
TYPED_TEST(AvgWindow3Stride1Grad, SAME3x6x4x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      2.0833333333,  3.3611111111,  4.6111111111,  3.6111111111,  4.6944444444,
      7.1944444444,  8.9444444444,  6.8333333333,  7.8333333333,  11.5,
      13.,           9.6666666667,  11.1666666667, 16.1666666667, 17.6666666667,
      13.,           17.4722222222, 25.0833333333, 26.8333333333, 19.6111111111,
      13.75,         19.6944444444, 20.9444444444, 15.2777777778, 18.75,
      26.6944444444, 27.9444444444, 20.2777777778, 28.0277777778, 39.8611111111,
      41.6111111111, 30.1666666667, 27.8333333333, 39.5,          41.,
      29.6666666667, 31.1666666667, 44.1666666667, 45.6666666667, 33.,
      40.8055555556, 57.75,         59.5,          42.9444444444, 30.4166666667,
      43.0277777778, 44.2777777778, 31.9444444444, 35.4166666667, 50.0277777778,
      51.2777777778, 36.9444444444, 51.3611111111, 72.5277777778, 74.2777777778,
      53.5,          47.8333333333, 67.5,          69.,           49.6666666667,
      51.1666666667, 72.1666666667, 73.6666666667, 53.,           64.1388888889,
      90.4166666667, 92.1666666667, 66.2777777778, 47.0833333333, 66.3611111111,
      67.6111111111, 48.6111111111};
  const std::array<int, 4> in_shape = {{3, 6, 4, 1}};
  const auto padding = PaddingMode::SAME;
  const auto params = getPoolingParams<3, 1>(in_shape, padding);
  const DataType max_input_val = 2048.0;
  this->test_pool(exp_out, params, max_input_val);
}
TYPED_TEST(AvgWindow3Stride1Grad, VALID3x6x4x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {0.1111111111,
                                         0.3333333333,
                                         0.3333333333,
                                         0.2222222222,
                                         0.4444444444,
                                         1.1111111111,
                                         1.1111111111,
                                         0.6666666667,
                                         1.,
                                         2.3333333333,
                                         2.3333333333,
                                         1.3333333333,
                                         1.6666666667,
                                         3.6666666667,
                                         3.6666666667,
                                         2.,
                                         1.3333333333,
                                         2.8888888889,
                                         2.8888888889,
                                         1.5555555556,
                                         0.7777777778,
                                         1.6666666667,
                                         1.6666666667,
                                         0.8888888889,
                                         1.,
                                         2.1111111111,
                                         2.1111111111,
                                         1.1111111111,
                                         2.2222222222,
                                         4.6666666667,
                                         4.6666666667,
                                         2.4444444444,
                                         3.6666666667,
                                         7.6666666667,
                                         7.6666666667,
                                         4.,
                                         4.3333333333,
                                         9.,
                                         9.,
                                         4.6666666667,
                                         3.1111111111,
                                         6.4444444444,
                                         6.4444444444,
                                         3.3333333333,
                                         1.6666666667,
                                         3.4444444444,
                                         3.4444444444,
                                         1.7777777778,
                                         1.8888888889,
                                         3.8888888889,
                                         3.8888888889,
                                         2.,
                                         4.,
                                         8.2222222222,
                                         8.2222222222,
                                         4.2222222222,
                                         6.3333333333,
                                         13.,
                                         13.,
                                         6.6666666667,
                                         7.,
                                         14.3333333333,
                                         14.3333333333,
                                         7.3333333333,
                                         4.8888888889,
                                         10.,
                                         10.,
                                         5.1111111111,
                                         2.5555555556,
                                         5.2222222222,
                                         5.2222222222,
                                         2.6666666667};
  const std::array<int, 4> in_shape = {{3, 6, 4, 1}};
  const auto padding = PaddingMode::VALID;
  const auto params = getPoolingParams<3, 1>(in_shape, padding);
  const DataType max_input_val = 2048.0;
  this->test_pool(exp_out, params, max_input_val);
}
TYPED_TEST(AvgWindow3Stride1Grad, SAME3x6x4x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {3.4722222222,   4.1666666667,
                                         5.75,           6.7222222222,
                                         8.25,           9.2222222222,
                                         6.5277777778,   7.2222222222,
                                         8.4166666667,   9.3888888889,
                                         13.0277777778,  14.3888888889,
                                         16.5277777778,  17.8888888889,
                                         12.6944444444,  13.6666666667,
                                         14.8333333333,  15.6666666667,
                                         21.8333333333,  23.,
                                         24.8333333333,  26.,
                                         18.5,           19.3333333333,
                                         21.5,           22.3333333333,
                                         31.1666666667,  32.3333333333,
                                         34.1666666667,  35.3333333333,
                                         25.1666666667,  26.,
                                         33.9722222222,  34.9444444444,
                                         48.8055555556,  50.1666666667,
                                         52.3055555556,  53.6666666667,
                                         38.25,          39.2222222222,
                                         26.8055555556,  27.5,
                                         38.4166666667,  39.3888888889,
                                         40.9166666667,  41.8888888889,
                                         29.8611111111,  30.5555555556,
                                         36.8055555556,  37.5,
                                         52.4166666667,  53.3888888889,
                                         54.9166666667,  55.8888888889,
                                         39.8611111111,  40.5555555556,
                                         55.0833333333,  56.0555555556,
                                         78.3611111111,  79.7222222222,
                                         81.8611111111,  83.2222222222,
                                         59.3611111111,  60.3333333333,
                                         54.8333333333,  55.6666666667,
                                         77.8333333333,  79.,
                                         80.8333333333,  82.,
                                         58.5,           59.3333333333,
                                         61.5,           62.3333333333,
                                         87.1666666667,  88.3333333333,
                                         90.1666666667,  91.3333333333,
                                         65.1666666667,  66.,
                                         80.6388888889,  81.6111111111,
                                         114.1388888889, 115.5,
                                         117.6388888889, 119.,
                                         84.9166666667,  85.8888888889,
                                         60.1388888889,  60.8333333333,
                                         85.0833333333,  86.0555555556,
                                         87.5833333333,  88.5555555556,
                                         63.1944444444,  63.8888888889,
                                         70.1388888889,  70.8333333333,
                                         99.0833333333,  100.0555555556,
                                         101.5833333333, 102.5555555556,
                                         73.1944444444,  73.8888888889,
                                         101.75,         102.7222222222,
                                         143.6944444444, 145.0555555556,
                                         147.1944444444, 148.5555555556,
                                         106.0277777778, 107.,
                                         94.8333333333,  95.6666666667,
                                         133.8333333333, 135.,
                                         136.8333333333, 138.,
                                         98.5,           99.3333333333,
                                         101.5,          102.3333333333,
                                         143.1666666667, 144.3333333333,
                                         146.1666666667, 147.3333333333,
                                         105.1666666667, 106.,
                                         127.3055555556, 128.2777777778,
                                         179.4722222222, 180.8333333333,
                                         182.9722222222, 184.3333333333,
                                         131.5833333333, 132.5555555556,
                                         93.4722222222,  94.1666666667,
                                         131.75,         132.7222222222,
                                         134.25,         135.2222222222,
                                         96.5277777778,  97.2222222222};
  const std::array<int, 4> in_shape = {{3, 6, 4, 2}};
  const auto padding = PaddingMode::SAME;
  const auto params = getPoolingParams<3, 1>(in_shape, padding);
  const DataType max_input_val = 2048.0;
  this->test_pool(exp_out, params, max_input_val);
}
TYPED_TEST(AvgWindow3Stride1Grad, VALID3x6x4x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {0.1111111111,
                                         0.2222222222,
                                         0.4444444444,
                                         0.6666666667,
                                         0.4444444444,
                                         0.6666666667,
                                         0.3333333333,
                                         0.4444444444,
                                         0.6666666667,
                                         0.8888888889,
                                         1.7777777778,
                                         2.2222222222,
                                         1.7777777778,
                                         2.2222222222,
                                         1.1111111111,
                                         1.3333333333,
                                         1.6666666667,
                                         2.,
                                         4.,
                                         4.6666666667,
                                         4.,
                                         4.6666666667,
                                         2.3333333333,
                                         2.6666666667,
                                         3.,
                                         3.3333333333,
                                         6.6666666667,
                                         7.3333333333,
                                         6.6666666667,
                                         7.3333333333,
                                         3.6666666667,
                                         4.,
                                         2.4444444444,
                                         2.6666666667,
                                         5.3333333333,
                                         5.7777777778,
                                         5.3333333333,
                                         5.7777777778,
                                         2.8888888889,
                                         3.1111111111,
                                         1.4444444444,
                                         1.5555555556,
                                         3.1111111111,
                                         3.3333333333,
                                         3.1111111111,
                                         3.3333333333,
                                         1.6666666667,
                                         1.7777777778,
                                         1.8888888889,
                                         2.,
                                         4.,
                                         4.2222222222,
                                         4.,
                                         4.2222222222,
                                         2.1111111111,
                                         2.2222222222,
                                         4.2222222222,
                                         4.4444444444,
                                         8.8888888889,
                                         9.3333333333,
                                         8.8888888889,
                                         9.3333333333,
                                         4.6666666667,
                                         4.8888888889,
                                         7.,
                                         7.3333333333,
                                         14.6666666667,
                                         15.3333333333,
                                         14.6666666667,
                                         15.3333333333,
                                         7.6666666667,
                                         8.,
                                         8.3333333333,
                                         8.6666666667,
                                         17.3333333333,
                                         18.,
                                         17.3333333333,
                                         18.,
                                         9.,
                                         9.3333333333,
                                         6.,
                                         6.2222222222,
                                         12.4444444444,
                                         12.8888888889,
                                         12.4444444444,
                                         12.8888888889,
                                         6.4444444444,
                                         6.6666666667,
                                         3.2222222222,
                                         3.3333333333,
                                         6.6666666667,
                                         6.8888888889,
                                         6.6666666667,
                                         6.8888888889,
                                         3.4444444444,
                                         3.5555555556,
                                         3.6666666667,
                                         3.7777777778,
                                         7.5555555556,
                                         7.7777777778,
                                         7.5555555556,
                                         7.7777777778,
                                         3.8888888889,
                                         4.,
                                         7.7777777778,
                                         8.,
                                         16.,
                                         16.4444444444,
                                         16.,
                                         16.4444444444,
                                         8.2222222222,
                                         8.4444444444,
                                         12.3333333333,
                                         12.6666666667,
                                         25.3333333333,
                                         26.,
                                         25.3333333333,
                                         26.,
                                         13.,
                                         13.3333333333,
                                         13.6666666667,
                                         14.,
                                         28.,
                                         28.6666666667,
                                         28.,
                                         28.6666666667,
                                         14.3333333333,
                                         14.6666666667,
                                         9.5555555556,
                                         9.7777777778,
                                         19.5555555556,
                                         20.,
                                         19.5555555556,
                                         20.,
                                         10.,
                                         10.2222222222,
                                         5.,
                                         5.1111111111,
                                         10.2222222222,
                                         10.4444444444,
                                         10.2222222222,
                                         10.4444444444,
                                         5.2222222222,
                                         5.3333333333};
  const std::array<int, 4> in_shape = {{3, 6, 4, 2}};
  const auto padding = PaddingMode::VALID;
  const auto params = getPoolingParams<3, 1>(in_shape, padding);
  const DataType max_input_val = 2048.0;
  this->test_pool(exp_out, params, max_input_val);
}
TYPED_TEST(AvgWindow3Stride1Grad, SAME3x6x4x4) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {6.25,           6.9444444444,
                                         7.6388888889,   8.3333333333,
                                         10.5277777778,  11.5,
                                         12.4722222222,  13.4444444444,
                                         15.5277777778,  16.5,
                                         17.4722222222,  18.4444444444,
                                         12.3611111111,  13.0555555556,
                                         13.75,          14.4444444444,
                                         15.8611111111,  16.8333333333,
                                         17.8055555556,  18.7777777778,
                                         24.6944444444,  26.0555555556,
                                         27.4166666667,  28.7777777778,
                                         31.6944444444,  33.0555555556,
                                         34.4166666667,  35.7777777778,
                                         24.4166666667,  25.3888888889,
                                         26.3611111111,  27.3333333333,
                                         28.8333333333,  29.6666666667,
                                         30.5,           31.3333333333,
                                         42.5,           43.6666666667,
                                         44.8333333333,  46.,
                                         48.5,           49.6666666667,
                                         50.8333333333,  52.,
                                         36.1666666667,  37.,
                                         37.8333333333,  38.6666666667,
                                         42.1666666667,  43.,
                                         43.8333333333,  44.6666666667,
                                         61.1666666667,  62.3333333333,
                                         63.5,           64.6666666667,
                                         67.1666666667,  68.3333333333,
                                         69.5,           70.6666666667,
                                         49.5,           50.3333333333,
                                         51.1666666667,  52.,
                                         66.9722222222,  67.9444444444,
                                         68.9166666667,  69.8888888889,
                                         96.25,          97.6111111111,
                                         98.9722222222,  100.3333333333,
                                         103.25,         104.6111111111,
                                         105.9722222222, 107.3333333333,
                                         75.5277777778,  76.5,
                                         77.4722222222,  78.4444444444,
                                         52.9166666667,  53.6111111111,
                                         54.3055555556,  55.,
                                         75.8611111111,  76.8333333333,
                                         77.8055555556,  78.7777777778,
                                         80.8611111111,  81.8333333333,
                                         82.8055555556,  83.7777777778,
                                         59.0277777778,  59.7222222222,
                                         60.4166666667,  61.1111111111,
                                         72.9166666667,  73.6111111111,
                                         74.3055555556,  75.,
                                         103.8611111111, 104.8333333333,
                                         105.8055555556, 106.7777777778,
                                         108.8611111111, 109.8333333333,
                                         110.8055555556, 111.7777777778,
                                         79.0277777778,  79.7222222222,
                                         80.4166666667,  81.1111111111,
                                         109.1944444444, 110.1666666667,
                                         111.1388888889, 112.1111111111,
                                         155.3611111111, 156.7222222222,
                                         158.0833333333, 159.4444444444,
                                         162.3611111111, 163.7222222222,
                                         165.0833333333, 166.4444444444,
                                         117.75,         118.7222222222,
                                         119.6944444444, 120.6666666667,
                                         108.8333333333, 109.6666666667,
                                         110.5,          111.3333333333,
                                         154.5,          155.6666666667,
                                         156.8333333333, 158.,
                                         160.5,          161.6666666667,
                                         162.8333333333, 164.,
                                         116.1666666667, 117.,
                                         117.8333333333, 118.6666666667,
                                         122.1666666667, 123.,
                                         123.8333333333, 124.6666666667,
                                         173.1666666667, 174.3333333333,
                                         175.5,          176.6666666667,
                                         179.1666666667, 180.3333333333,
                                         181.5,          182.6666666667,
                                         129.5,          130.3333333333,
                                         131.1666666667, 132.,
                                         160.3055555556, 161.2777777778,
                                         162.25,         163.2222222222,
                                         226.9166666667, 228.2777777778,
                                         229.6388888889, 231.,
                                         233.9166666667, 235.2777777778,
                                         236.6388888889, 238.,
                                         168.8611111111, 169.8333333333,
                                         170.8055555556, 171.7777777778,
                                         119.5833333333, 120.2777777778,
                                         120.9722222222, 121.6666666667,
                                         169.1944444444, 170.1666666667,
                                         171.1388888889, 172.1111111111,
                                         174.1944444444, 175.1666666667,
                                         176.1388888889, 177.1111111111,
                                         125.6944444444, 126.3888888889,
                                         127.0833333333, 127.7777777778,
                                         139.5833333333, 140.2777777778,
                                         140.9722222222, 141.6666666667,
                                         197.1944444444, 198.1666666667,
                                         199.1388888889, 200.1111111111,
                                         202.1944444444, 203.1666666667,
                                         204.1388888889, 205.1111111111,
                                         145.6944444444, 146.3888888889,
                                         147.0833333333, 147.7777777778,
                                         202.5277777778, 203.5,
                                         204.4722222222, 205.4444444444,
                                         286.0277777778, 287.3888888889,
                                         288.75,         290.1111111111,
                                         293.0277777778, 294.3888888889,
                                         295.75,         297.1111111111,
                                         211.0833333333, 212.0555555556,
                                         213.0277777778, 214.,
                                         188.8333333333, 189.6666666667,
                                         190.5,          191.3333333333,
                                         266.5,          267.6666666667,
                                         268.8333333333, 270.,
                                         272.5,          273.6666666667,
                                         274.8333333333, 276.,
                                         196.1666666667, 197.,
                                         197.8333333333, 198.6666666667,
                                         202.1666666667, 203.,
                                         203.8333333333, 204.6666666667,
                                         285.1666666667, 286.3333333333,
                                         287.5,          288.6666666667,
                                         291.1666666667, 292.3333333333,
                                         293.5,          294.6666666667,
                                         209.5,          210.3333333333,
                                         211.1666666667, 212.,
                                         253.6388888889, 254.6111111111,
                                         255.5833333333, 256.5555555556,
                                         357.5833333333, 358.9444444444,
                                         360.3055555556, 361.6666666667,
                                         364.5833333333, 365.9444444444,
                                         367.3055555556, 368.6666666667,
                                         262.1944444444, 263.1666666667,
                                         264.1388888889, 265.1111111111,
                                         186.25,         186.9444444444,
                                         187.6388888889, 188.3333333333,
                                         262.5277777778, 263.5,
                                         264.4722222222, 265.4444444444,
                                         267.5277777778, 268.5,
                                         269.4722222222, 270.4444444444,
                                         192.3611111111, 193.0555555556,
                                         193.75,         194.4444444444};
  const std::array<int, 4> in_shape = {{3, 6, 4, 4}};
  const auto padding = PaddingMode::SAME;
  const auto params = getPoolingParams<3, 1>(in_shape, padding);
  const DataType max_input_val = 2048.0;
  this->test_pool(exp_out, params, max_input_val);
}
TYPED_TEST(AvgWindow3Stride1Grad, VALID3x6x4x4) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {0.1111111111,
                                         0.2222222222,
                                         0.3333333333,
                                         0.4444444444,
                                         0.6666666667,
                                         0.8888888889,
                                         1.1111111111,
                                         1.3333333333,
                                         0.6666666667,
                                         0.8888888889,
                                         1.1111111111,
                                         1.3333333333,
                                         0.5555555556,
                                         0.6666666667,
                                         0.7777777778,
                                         0.8888888889,
                                         1.1111111111,
                                         1.3333333333,
                                         1.5555555556,
                                         1.7777777778,
                                         3.1111111111,
                                         3.5555555556,
                                         4.,
                                         4.4444444444,
                                         3.1111111111,
                                         3.5555555556,
                                         4.,
                                         4.4444444444,
                                         2.,
                                         2.2222222222,
                                         2.4444444444,
                                         2.6666666667,
                                         3.,
                                         3.3333333333,
                                         3.6666666667,
                                         4.,
                                         7.3333333333,
                                         8.,
                                         8.6666666667,
                                         9.3333333333,
                                         7.3333333333,
                                         8.,
                                         8.6666666667,
                                         9.3333333333,
                                         4.3333333333,
                                         4.6666666667,
                                         5.,
                                         5.3333333333,
                                         5.6666666667,
                                         6.,
                                         6.3333333333,
                                         6.6666666667,
                                         12.6666666667,
                                         13.3333333333,
                                         14.,
                                         14.6666666667,
                                         12.6666666667,
                                         13.3333333333,
                                         14.,
                                         14.6666666667,
                                         7.,
                                         7.3333333333,
                                         7.6666666667,
                                         8.,
                                         4.6666666667,
                                         4.8888888889,
                                         5.1111111111,
                                         5.3333333333,
                                         10.2222222222,
                                         10.6666666667,
                                         11.1111111111,
                                         11.5555555556,
                                         10.2222222222,
                                         10.6666666667,
                                         11.1111111111,
                                         11.5555555556,
                                         5.5555555556,
                                         5.7777777778,
                                         6.,
                                         6.2222222222,
                                         2.7777777778,
                                         2.8888888889,
                                         3.,
                                         3.1111111111,
                                         6.,
                                         6.2222222222,
                                         6.4444444444,
                                         6.6666666667,
                                         6.,
                                         6.2222222222,
                                         6.4444444444,
                                         6.6666666667,
                                         3.2222222222,
                                         3.3333333333,
                                         3.4444444444,
                                         3.5555555556,
                                         3.6666666667,
                                         3.7777777778,
                                         3.8888888889,
                                         4.,
                                         7.7777777778,
                                         8.,
                                         8.2222222222,
                                         8.4444444444,
                                         7.7777777778,
                                         8.,
                                         8.2222222222,
                                         8.4444444444,
                                         4.1111111111,
                                         4.2222222222,
                                         4.3333333333,
                                         4.4444444444,
                                         8.2222222222,
                                         8.4444444444,
                                         8.6666666667,
                                         8.8888888889,
                                         17.3333333333,
                                         17.7777777778,
                                         18.2222222222,
                                         18.6666666667,
                                         17.3333333333,
                                         17.7777777778,
                                         18.2222222222,
                                         18.6666666667,
                                         9.1111111111,
                                         9.3333333333,
                                         9.5555555556,
                                         9.7777777778,
                                         13.6666666667,
                                         14.,
                                         14.3333333333,
                                         14.6666666667,
                                         28.6666666667,
                                         29.3333333333,
                                         30.,
                                         30.6666666667,
                                         28.6666666667,
                                         29.3333333333,
                                         30.,
                                         30.6666666667,
                                         15.,
                                         15.3333333333,
                                         15.6666666667,
                                         16.,
                                         16.3333333333,
                                         16.6666666667,
                                         17.,
                                         17.3333333333,
                                         34.,
                                         34.6666666667,
                                         35.3333333333,
                                         36.,
                                         34.,
                                         34.6666666667,
                                         35.3333333333,
                                         36.,
                                         17.6666666667,
                                         18.,
                                         18.3333333333,
                                         18.6666666667,
                                         11.7777777778,
                                         12.,
                                         12.2222222222,
                                         12.4444444444,
                                         24.4444444444,
                                         24.8888888889,
                                         25.3333333333,
                                         25.7777777778,
                                         24.4444444444,
                                         24.8888888889,
                                         25.3333333333,
                                         25.7777777778,
                                         12.6666666667,
                                         12.8888888889,
                                         13.1111111111,
                                         13.3333333333,
                                         6.3333333333,
                                         6.4444444444,
                                         6.5555555556,
                                         6.6666666667,
                                         13.1111111111,
                                         13.3333333333,
                                         13.5555555556,
                                         13.7777777778,
                                         13.1111111111,
                                         13.3333333333,
                                         13.5555555556,
                                         13.7777777778,
                                         6.7777777778,
                                         6.8888888889,
                                         7.,
                                         7.1111111111,
                                         7.2222222222,
                                         7.3333333333,
                                         7.4444444444,
                                         7.5555555556,
                                         14.8888888889,
                                         15.1111111111,
                                         15.3333333333,
                                         15.5555555556,
                                         14.8888888889,
                                         15.1111111111,
                                         15.3333333333,
                                         15.5555555556,
                                         7.6666666667,
                                         7.7777777778,
                                         7.8888888889,
                                         8.,
                                         15.3333333333,
                                         15.5555555556,
                                         15.7777777778,
                                         16.,
                                         31.5555555556,
                                         32.,
                                         32.4444444444,
                                         32.8888888889,
                                         31.5555555556,
                                         32.,
                                         32.4444444444,
                                         32.8888888889,
                                         16.2222222222,
                                         16.4444444444,
                                         16.6666666667,
                                         16.8888888889,
                                         24.3333333333,
                                         24.6666666667,
                                         25.,
                                         25.3333333333,
                                         50.,
                                         50.6666666667,
                                         51.3333333333,
                                         52.,
                                         50.,
                                         50.6666666667,
                                         51.3333333333,
                                         52.,
                                         25.6666666667,
                                         26.,
                                         26.3333333333,
                                         26.6666666667,
                                         27.,
                                         27.3333333333,
                                         27.6666666667,
                                         28.,
                                         55.3333333333,
                                         56.,
                                         56.6666666667,
                                         57.3333333333,
                                         55.3333333333,
                                         56.,
                                         56.6666666667,
                                         57.3333333333,
                                         28.3333333333,
                                         28.6666666667,
                                         29.,
                                         29.3333333333,
                                         18.8888888889,
                                         19.1111111111,
                                         19.3333333333,
                                         19.5555555556,
                                         38.6666666667,
                                         39.1111111111,
                                         39.5555555556,
                                         40.,
                                         38.6666666667,
                                         39.1111111111,
                                         39.5555555556,
                                         40.,
                                         19.7777777778,
                                         20.,
                                         20.2222222222,
                                         20.4444444444,
                                         9.8888888889,
                                         10.,
                                         10.1111111111,
                                         10.2222222222,
                                         20.2222222222,
                                         20.4444444444,
                                         20.6666666667,
                                         20.8888888889,
                                         20.2222222222,
                                         20.4444444444,
                                         20.6666666667,
                                         20.8888888889,
                                         10.3333333333,
                                         10.4444444444,
                                         10.5555555556,
                                         10.6666666667};
  const std::array<int, 4> in_shape = {{3, 6, 4, 4}};
  const auto padding = PaddingMode::VALID;
  const auto params = getPoolingParams<3, 1>(in_shape, padding);
  const DataType max_input_val = 2048.0;
  this->test_pool(exp_out, params, max_input_val);
}
TYPED_TEST(AvgWindow3Stride1Grad, SAME3x6x5x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {2.3611111111,  3.75,
                                         4.1666666667,  5.9722222222,
                                         4.5833333333,  5.5277777778,
                                         8.3611111111,  8.5,
                                         11.4722222222, 8.6388888889,
                                         9.5,           13.8333333333,
                                         13.,           16.5,
                                         12.1666666667, 13.6666666667,
                                         19.6666666667, 18.,
                                         22.3333333333, 16.3333333333,
                                         21.5,          30.7222222222,
                                         27.6666666667, 33.8333333333,
                                         24.6111111111, 16.9444444444,
                                         24.1666666667, 21.6666666667,
                                         26.3888888889, 19.1666666667,
                                         23.1944444444, 32.9166666667,
                                         29.1666666667, 35.1388888889,
                                         25.4166666667, 34.6944444444,
                                         49.1944444444, 43.5,
                                         52.3055555556, 37.8055555556,
                                         34.5,          48.8333333333,
                                         43.,           51.5,
                                         37.1666666667, 38.6666666667,
                                         54.6666666667, 48.,
                                         57.3333333333, 41.3333333333,
                                         50.6666666667, 71.5555555556,
                                         62.6666666667, 74.6666666667,
                                         53.7777777778, 37.7777777778,
                                         53.3333333333, 46.6666666667,
                                         55.5555555556, 40.,
                                         44.0277777778, 62.0833333333,
                                         54.1666666667, 64.3055555556,
                                         46.25,         63.8611111111,
                                         90.0277777778, 78.5,
                                         93.1388888889, 66.9722222222,
                                         59.5,          83.8333333333,
                                         73.,           86.5,
                                         62.1666666667, 63.6666666667,
                                         89.6666666667, 78.,
                                         92.3333333333, 66.3333333333,
                                         79.8333333333, 112.3888888889,
                                         97.6666666667, 115.5,
                                         82.9444444444, 58.6111111111,
                                         82.5,          71.6666666667,
                                         84.7222222222, 60.8333333333};
  const std::array<int, 4> in_shape = {{3, 6, 5, 1}};
  const auto padding = PaddingMode::SAME;
  const auto params = getPoolingParams<3, 1>(in_shape, padding);
  const DataType max_input_val = 2048.0;
  this->test_pool(exp_out, params, max_input_val);
}
TYPED_TEST(AvgWindow3Stride1Grad, VALID3x6x5x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      0.1111111111,
      0.3333333333,
      0.6666666667,
      0.5555555556,
      0.3333333333,
      0.5555555556,
      1.3333333333,
      2.3333333333,
      1.7777777778,
      1.,
      1.3333333333,
      3.,
      5.,
      3.6666666667,
      2.,
      2.3333333333,
      5.,
      8.,
      5.6666666667,
      3.,
      1.8888888889,
      4.,
      6.3333333333,
      4.4444444444,
      2.3333333333,
      1.1111111111,
      2.3333333333,
      3.6666666667,
      2.5555555556,
      1.3333333333,
      1.4444444444,
      3.,
      4.6666666667,
      3.2222222222,
      1.6666666667,
      3.2222222222,
      6.6666666667,
      10.3333333333,
      7.1111111111,
      3.6666666667,
      5.3333333333,
      11.,
      17.,
      11.6666666667,
      6.,
      6.3333333333,
      13.,
      20.,
      13.6666666667,
      7.,
      4.5555555556,
      9.3333333333,
      14.3333333333,
      9.7777777778,
      5.,
      2.4444444444,
      5.,
      7.6666666667,
      5.2222222222,
      2.6666666667,
      2.7777777778,
      5.6666666667,
      8.6666666667,
      5.8888888889,
      3.,
      5.8888888889,
      12.,
      18.3333333333,
      12.4444444444,
      6.3333333333,
      9.3333333333,
      19.,
      29.,
      19.6666666667,
      10.,
      10.3333333333,
      21.,
      32.,
      21.6666666667,
      11.,
      7.2222222222,
      14.6666666667,
      22.3333333333,
      15.1111111111,
      7.6666666667,
      3.7777777778,
      7.6666666667,
      11.6666666667,
      7.8888888889,
      4.,
  };
  const std::array<int, 4> in_shape = {{3, 6, 5, 1}};
  const auto padding = PaddingMode::VALID;
  const auto params = getPoolingParams<3, 1>(in_shape, padding);
  const DataType max_input_val = 2048.0;
  this->test_pool(exp_out, params, max_input_val);
}
TYPED_TEST(AvgWindow3Stride1Grad, SAME3x6x5x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {4.0277777778,
                                         4.7222222222,
                                         6.5277777778,
                                         7.5,
                                         7.5,
                                         8.3333333333,
                                         10.9722222222,
                                         11.9444444444,
                                         8.4722222222,
                                         9.1666666667,
                                         10.0833333333,
                                         11.0555555556,
                                         15.3611111111,
                                         16.7222222222,
                                         15.8333333333,
                                         17.,
                                         21.5833333333,
                                         22.9444444444,
                                         16.3055555556,
                                         17.2777777778,
                                         18.1666666667,
                                         19.,
                                         26.5,
                                         27.6666666667,
                                         25.,
                                         26.,
                                         31.8333333333,
                                         33.,
                                         23.5,
                                         24.3333333333,
                                         26.5,
                                         27.3333333333,
                                         38.1666666667,
                                         39.3333333333,
                                         35.,
                                         36.,
                                         43.5,
                                         44.6666666667,
                                         31.8333333333,
                                         32.6666666667,
                                         42.0277777778,
                                         43.,
                                         60.0833333333,
                                         61.4444444444,
                                         54.1666666667,
                                         55.3333333333,
                                         66.3055555556,
                                         67.6666666667,
                                         48.25,
                                         49.2222222222,
                                         33.1944444444,
                                         33.8888888889,
                                         47.3611111111,
                                         48.3333333333,
                                         42.5,
                                         43.3333333333,
                                         51.8055555556,
                                         52.7777777778,
                                         37.6388888889,
                                         38.3333333333,
                                         45.6944444444,
                                         46.3888888889,
                                         64.8611111111,
                                         65.8333333333,
                                         57.5,
                                         58.3333333333,
                                         69.3055555556,
                                         70.2777777778,
                                         50.1388888889,
                                         50.8333333333,
                                         68.4166666667,
                                         69.3888888889,
                                         97.0277777778,
                                         98.3888888889,
                                         85.8333333333,
                                         87.,
                                         103.25,
                                         104.6111111111,
                                         74.6388888889,
                                         75.6111111111,
                                         68.1666666667,
                                         69.,
                                         96.5,
                                         97.6666666667,
                                         85.,
                                         86.,
                                         101.8333333333,
                                         103.,
                                         73.5,
                                         74.3333333333,
                                         76.5,
                                         77.3333333333,
                                         108.1666666667,
                                         109.3333333333,
                                         95.,
                                         96.,
                                         113.5,
                                         114.6666666667,
                                         81.8333333333,
                                         82.6666666667,
                                         100.3611111111,
                                         101.3333333333,
                                         141.75,
                                         143.1111111111,
                                         124.1666666667,
                                         125.3333333333,
                                         147.9722222222,
                                         149.3333333333,
                                         106.5833333333,
                                         107.5555555556,
                                         74.8611111111,
                                         75.5555555556,
                                         105.6944444444,
                                         106.6666666667,
                                         92.5,
                                         93.3333333333,
                                         110.1388888889,
                                         111.1111111111,
                                         79.3055555556,
                                         80.,
                                         87.3611111111,
                                         88.0555555556,
                                         123.1944444444,
                                         124.1666666667,
                                         107.5,
                                         108.3333333333,
                                         127.6388888889,
                                         128.6111111111,
                                         91.8055555556,
                                         92.5,
                                         126.75,
                                         127.7222222222,
                                         178.6944444444,
                                         180.0555555556,
                                         155.8333333333,
                                         157.,
                                         184.9166666667,
                                         186.2777777778,
                                         132.9722222222,
                                         133.9444444444,
                                         118.1666666667,
                                         119.,
                                         166.5,
                                         167.6666666667,
                                         145.,
                                         146.,
                                         171.8333333333,
                                         173.,
                                         123.5,
                                         124.3333333333,
                                         126.5,
                                         127.3333333333,
                                         178.1666666667,
                                         179.3333333333,
                                         155.,
                                         156.,
                                         183.5,
                                         184.6666666667,
                                         131.8333333333,
                                         132.6666666667,
                                         158.6944444444,
                                         159.6666666667,
                                         223.4166666667,
                                         224.7777777778,
                                         194.1666666667,
                                         195.3333333333,
                                         229.6388888889,
                                         231.,
                                         164.9166666667,
                                         165.8888888889,
                                         116.5277777778,
                                         117.2222222222,
                                         164.0277777778,
                                         165.,
                                         142.5,
                                         143.3333333333,
                                         168.4722222222,
                                         169.4444444444,
                                         120.9722222222,
                                         121.6666666667};
  const std::array<int, 4> in_shape = {{3, 6, 5, 2}};
  const auto padding = PaddingMode::SAME;
  const auto params = getPoolingParams<3, 1>(in_shape, padding);
  const DataType max_input_val = 2048.0;
  this->test_pool(exp_out, params, max_input_val);
}
TYPED_TEST(AvgWindow3Stride1Grad, VALID3x6x5x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      0.1111111111,
      0.2222222222,
      0.4444444444,
      0.6666666667,
      1.,
      1.3333333333,
      0.8888888889,
      1.1111111111,
      0.5555555556,
      0.6666666667,
      0.8888888889,
      1.1111111111,
      2.2222222222,
      2.6666666667,
      4.,
      4.6666666667,
      3.1111111111,
      3.5555555556,
      1.7777777778,
      2.,
      2.3333333333,
      2.6666666667,
      5.3333333333,
      6.,
      9.,
      10.,
      6.6666666667,
      7.3333333333,
      3.6666666667,
      4.,
      4.3333333333,
      4.6666666667,
      9.3333333333,
      10.,
      15.,
      16.,
      10.6666666667,
      11.3333333333,
      5.6666666667,
      6.,
      3.5555555556,
      3.7777777778,
      7.5555555556,
      8.,
      12.,
      12.6666666667,
      8.4444444444,
      8.8888888889,
      4.4444444444,
      4.6666666667,
      2.1111111111,
      2.2222222222,
      4.4444444444,
      4.6666666667,
      7.,
      7.3333333333,
      4.8888888889,
      5.1111111111,
      2.5555555556,
      2.6666666667,
      2.7777777778,
      2.8888888889,
      5.7777777778,
      6.,
      9.,
      9.3333333333,
      6.2222222222,
      6.4444444444,
      3.2222222222,
      3.3333333333,
      6.2222222222,
      6.4444444444,
      12.8888888889,
      13.3333333333,
      20.,
      20.6666666667,
      13.7777777778,
      14.2222222222,
      7.1111111111,
      7.3333333333,
      10.3333333333,
      10.6666666667,
      21.3333333333,
      22.,
      33.,
      34.,
      22.6666666667,
      23.3333333333,
      11.6666666667,
      12.,
      12.3333333333,
      12.6666666667,
      25.3333333333,
      26.,
      39.,
      40.,
      26.6666666667,
      27.3333333333,
      13.6666666667,
      14.,
      8.8888888889,
      9.1111111111,
      18.2222222222,
      18.6666666667,
      28.,
      28.6666666667,
      19.1111111111,
      19.5555555556,
      9.7777777778,
      10.,
      4.7777777778,
      4.8888888889,
      9.7777777778,
      10.,
      15.,
      15.3333333333,
      10.2222222222,
      10.4444444444,
      5.2222222222,
      5.3333333333,
      5.4444444444,
      5.5555555556,
      11.1111111111,
      11.3333333333,
      17.,
      17.3333333333,
      11.5555555556,
      11.7777777778,
      5.8888888889,
      6.,
      11.5555555556,
      11.7777777778,
      23.5555555556,
      24.,
      36.,
      36.6666666667,
      24.4444444444,
      24.8888888889,
      12.4444444444,
      12.6666666667,
      18.3333333333,
      18.6666666667,
      37.3333333333,
      38.,
      57.,
      58.,
      38.6666666667,
      39.3333333333,
      19.6666666667,
      20.,
      20.3333333333,
      20.6666666667,
      41.3333333333,
      42.,
      63.,
      64.,
      42.6666666667,
      43.3333333333,
      21.6666666667,
      22.,
      14.2222222222,
      14.4444444444,
      28.8888888889,
      29.3333333333,
      44.,
      44.6666666667,
      29.7777777778,
      30.2222222222,
      15.1111111111,
      15.3333333333,
      7.4444444444,
      7.5555555556,
      15.1111111111,
      15.3333333333,
      23.,
      23.3333333333,
      15.5555555556,
      15.7777777778,
      7.8888888889,
      8.,
  };
  const std::array<int, 4> in_shape = {{3, 6, 5, 2}};
  const auto padding = PaddingMode::VALID;
  const auto params = getPoolingParams<3, 1>(in_shape, padding);
  const DataType max_input_val = 2048.0;
  this->test_pool(exp_out, params, max_input_val);
}
TYPED_TEST(AvgWindow3Stride1Grad, SAME3x6x5x4) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {7.3611111111,
                                         8.0555555556,
                                         8.75,
                                         9.4444444444,
                                         12.0833333333,
                                         13.0555555556,
                                         14.0277777778,
                                         15.,
                                         14.1666666667,
                                         15.,
                                         15.8333333333,
                                         16.6666666667,
                                         20.9722222222,
                                         21.9444444444,
                                         22.9166666667,
                                         23.8888888889,
                                         16.25,
                                         16.9444444444,
                                         17.6388888889,
                                         18.3333333333,
                                         19.1944444444,
                                         20.1666666667,
                                         21.1388888889,
                                         22.1111111111,
                                         29.3611111111,
                                         30.7222222222,
                                         32.0833333333,
                                         33.4444444444,
                                         30.5,
                                         31.6666666667,
                                         32.8333333333,
                                         34.,
                                         41.8055555556,
                                         43.1666666667,
                                         44.5277777778,
                                         45.8888888889,
                                         31.6388888889,
                                         32.6111111111,
                                         33.5833333333,
                                         34.5555555556,
                                         35.5,
                                         36.3333333333,
                                         37.1666666667,
                                         38.,
                                         51.8333333333,
                                         53.,
                                         54.1666666667,
                                         55.3333333333,
                                         49.,
                                         50.,
                                         51.,
                                         52.,
                                         62.5,
                                         63.6666666667,
                                         64.8333333333,
                                         66.,
                                         46.1666666667,
                                         47.,
                                         47.8333333333,
                                         48.6666666667,
                                         52.1666666667,
                                         53.,
                                         53.8333333333,
                                         54.6666666667,
                                         75.1666666667,
                                         76.3333333333,
                                         77.5,
                                         78.6666666667,
                                         69.,
                                         70.,
                                         71.,
                                         72.,
                                         85.8333333333,
                                         87.,
                                         88.1666666667,
                                         89.3333333333,
                                         62.8333333333,
                                         63.6666666667,
                                         64.5,
                                         65.3333333333,
                                         83.0833333333,
                                         84.0555555556,
                                         85.0277777778,
                                         86.,
                                         118.8055555556,
                                         120.1666666667,
                                         121.5277777778,
                                         122.8888888889,
                                         107.1666666667,
                                         108.3333333333,
                                         109.5,
                                         110.6666666667,
                                         131.25,
                                         132.6111111111,
                                         133.9722222222,
                                         135.3333333333,
                                         95.5277777778,
                                         96.5,
                                         97.4722222222,
                                         98.4444444444,
                                         65.6944444444,
                                         66.3888888889,
                                         67.0833333333,
                                         67.7777777778,
                                         93.75,
                                         94.7222222222,
                                         95.6944444444,
                                         96.6666666667,
                                         84.1666666667,
                                         85.,
                                         85.8333333333,
                                         86.6666666667,
                                         102.6388888889,
                                         103.6111111111,
                                         104.5833333333,
                                         105.5555555556,
                                         74.5833333333,
                                         75.2777777778,
                                         75.9722222222,
                                         76.6666666667,
                                         90.6944444444,
                                         91.3888888889,
                                         92.0833333333,
                                         92.7777777778,
                                         128.75,
                                         129.7222222222,
                                         130.6944444444,
                                         131.6666666667,
                                         114.1666666667,
                                         115.,
                                         115.8333333333,
                                         116.6666666667,
                                         137.6388888889,
                                         138.6111111111,
                                         139.5833333333,
                                         140.5555555556,
                                         99.5833333333,
                                         100.2777777778,
                                         100.9722222222,
                                         101.6666666667,
                                         135.8611111111,
                                         136.8333333333,
                                         137.8055555556,
                                         138.7777777778,
                                         192.6944444444,
                                         194.0555555556,
                                         195.4166666667,
                                         196.7777777778,
                                         170.5,
                                         171.6666666667,
                                         172.8333333333,
                                         174.,
                                         205.1388888889,
                                         206.5,
                                         207.8611111111,
                                         209.2222222222,
                                         148.3055555556,
                                         149.2777777778,
                                         150.25,
                                         151.2222222222,
                                         135.5,
                                         136.3333333333,
                                         137.1666666667,
                                         138.,
                                         191.8333333333,
                                         193.,
                                         194.1666666667,
                                         195.3333333333,
                                         169.,
                                         170.,
                                         171.,
                                         172.,
                                         202.5,
                                         203.6666666667,
                                         204.8333333333,
                                         206.,
                                         146.1666666667,
                                         147.,
                                         147.8333333333,
                                         148.6666666667,
                                         152.1666666667,
                                         153.,
                                         153.8333333333,
                                         154.6666666667,
                                         215.1666666667,
                                         216.3333333333,
                                         217.5,
                                         218.6666666667,
                                         189.,
                                         190.,
                                         191.,
                                         192.,
                                         225.8333333333,
                                         227.,
                                         228.1666666667,
                                         229.3333333333,
                                         162.8333333333,
                                         163.6666666667,
                                         164.5,
                                         165.3333333333,
                                         199.75,
                                         200.7222222222,
                                         201.6944444444,
                                         202.6666666667,
                                         282.1388888889,
                                         283.5,
                                         284.8611111111,
                                         286.2222222222,
                                         247.1666666667,
                                         248.3333333333,
                                         249.5,
                                         250.6666666667,
                                         294.5833333333,
                                         295.9444444444,
                                         297.3055555556,
                                         298.6666666667,
                                         212.1944444444,
                                         213.1666666667,
                                         214.1388888889,
                                         215.1111111111,
                                         149.0277777778,
                                         149.7222222222,
                                         150.4166666667,
                                         151.1111111111,
                                         210.4166666667,
                                         211.3888888889,
                                         212.3611111111,
                                         213.3333333333,
                                         184.1666666667,
                                         185.,
                                         185.8333333333,
                                         186.6666666667,
                                         219.3055555556,
                                         220.2777777778,
                                         221.25,
                                         222.2222222222,
                                         157.9166666667,
                                         158.6111111111,
                                         159.3055555556,
                                         160.,
                                         174.0277777778,
                                         174.7222222222,
                                         175.4166666667,
                                         176.1111111111,
                                         245.4166666667,
                                         246.3888888889,
                                         247.3611111111,
                                         248.3333333333,
                                         214.1666666667,
                                         215.,
                                         215.8333333333,
                                         216.6666666667,
                                         254.3055555556,
                                         255.2777777778,
                                         256.25,
                                         257.2222222222,
                                         182.9166666667,
                                         183.6111111111,
                                         184.3055555556,
                                         185.,
                                         252.5277777778,
                                         253.5,
                                         254.4722222222,
                                         255.4444444444,
                                         356.0277777778,
                                         357.3888888889,
                                         358.75,
                                         360.1111111111,
                                         310.5,
                                         311.6666666667,
                                         312.8333333333,
                                         314.,
                                         368.4722222222,
                                         369.8333333333,
                                         371.1944444444,
                                         372.5555555556,
                                         264.9722222222,
                                         265.9444444444,
                                         266.9166666667,
                                         267.8888888889,
                                         235.5,
                                         236.3333333333,
                                         237.1666666667,
                                         238.,
                                         331.8333333333,
                                         333.,
                                         334.1666666667,
                                         335.3333333333,
                                         289.,
                                         290.,
                                         291.,
                                         292.,
                                         342.5,
                                         343.6666666667,
                                         344.8333333333,
                                         346.,
                                         246.1666666667,
                                         247.,
                                         247.8333333333,
                                         248.6666666667,
                                         252.1666666667,
                                         253.,
                                         253.8333333333,
                                         254.6666666667,
                                         355.1666666667,
                                         356.3333333333,
                                         357.5,
                                         358.6666666667,
                                         309.,
                                         310.,
                                         311.,
                                         312.,
                                         365.8333333333,
                                         367.,
                                         368.1666666667,
                                         369.3333333333,
                                         262.8333333333,
                                         263.6666666667,
                                         264.5,
                                         265.3333333333,
                                         316.4166666667,
                                         317.3888888889,
                                         318.3611111111,
                                         319.3333333333,
                                         445.4722222222,
                                         446.8333333333,
                                         448.1944444444,
                                         449.5555555556,
                                         387.1666666667,
                                         388.3333333333,
                                         389.5,
                                         390.6666666667,
                                         457.9166666667,
                                         459.2777777778,
                                         460.6388888889,
                                         462.,
                                         328.8611111111,
                                         329.8333333333,
                                         330.8055555556,
                                         331.7777777778,
                                         232.3611111111,
                                         233.0555555556,
                                         233.75,
                                         234.4444444444,
                                         327.0833333333,
                                         328.0555555556,
                                         329.0277777778,
                                         330.,
                                         284.1666666667,
                                         285.,
                                         285.8333333333,
                                         286.6666666667,
                                         335.9722222222,
                                         336.9444444444,
                                         337.9166666667,
                                         338.8888888889,
                                         241.25,
                                         241.9444444444,
                                         242.6388888889,
                                         243.3333333333};
  const std::array<int, 4> in_shape = {{3, 6, 5, 4}};
  const auto padding = PaddingMode::SAME;
  const auto params = getPoolingParams<3, 1>(in_shape, padding);
  const DataType max_input_val = 2048.0;
  this->test_pool(exp_out, params, max_input_val);
}
TYPED_TEST(AvgWindow3Stride1Grad, VALID3x6x5x4) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {
      0.1111111111,
      0.2222222222,
      0.3333333333,
      0.4444444444,
      0.6666666667,
      0.8888888889,
      1.1111111111,
      1.3333333333,
      1.6666666667,
      2.,
      2.3333333333,
      2.6666666667,
      1.5555555556,
      1.7777777778,
      2.,
      2.2222222222,
      1.,
      1.1111111111,
      1.2222222222,
      1.3333333333,
      1.5555555556,
      1.7777777778,
      2.,
      2.2222222222,
      4.,
      4.4444444444,
      4.8888888889,
      5.3333333333,
      7.3333333333,
      8.,
      8.6666666667,
      9.3333333333,
      5.7777777778,
      6.2222222222,
      6.6666666667,
      7.1111111111,
      3.3333333333,
      3.5555555556,
      3.7777777778,
      4.,
      4.3333333333,
      4.6666666667,
      5.,
      5.3333333333,
      10.,
      10.6666666667,
      11.3333333333,
      12.,
      17.,
      18.,
      19.,
      20.,
      12.6666666667,
      13.3333333333,
      14.,
      14.6666666667,
      7.,
      7.3333333333,
      7.6666666667,
      8.,
      8.3333333333,
      8.6666666667,
      9.,
      9.3333333333,
      18.,
      18.6666666667,
      19.3333333333,
      20.,
      29.,
      30.,
      31.,
      32.,
      20.6666666667,
      21.3333333333,
      22.,
      22.6666666667,
      11.,
      11.3333333333,
      11.6666666667,
      12.,
      6.8888888889,
      7.1111111111,
      7.3333333333,
      7.5555555556,
      14.6666666667,
      15.1111111111,
      15.5555555556,
      16.,
      23.3333333333,
      24.,
      24.6666666667,
      25.3333333333,
      16.4444444444,
      16.8888888889,
      17.3333333333,
      17.7777777778,
      8.6666666667,
      8.8888888889,
      9.1111111111,
      9.3333333333,
      4.1111111111,
      4.2222222222,
      4.3333333333,
      4.4444444444,
      8.6666666667,
      8.8888888889,
      9.1111111111,
      9.3333333333,
      13.6666666667,
      14.,
      14.3333333333,
      14.6666666667,
      9.5555555556,
      9.7777777778,
      10.,
      10.2222222222,
      5.,
      5.1111111111,
      5.2222222222,
      5.3333333333,
      5.4444444444,
      5.5555555556,
      5.6666666667,
      5.7777777778,
      11.3333333333,
      11.5555555556,
      11.7777777778,
      12.,
      17.6666666667,
      18.,
      18.3333333333,
      18.6666666667,
      12.2222222222,
      12.4444444444,
      12.6666666667,
      12.8888888889,
      6.3333333333,
      6.4444444444,
      6.5555555556,
      6.6666666667,
      12.2222222222,
      12.4444444444,
      12.6666666667,
      12.8888888889,
      25.3333333333,
      25.7777777778,
      26.2222222222,
      26.6666666667,
      39.3333333333,
      40.,
      40.6666666667,
      41.3333333333,
      27.1111111111,
      27.5555555556,
      28.,
      28.4444444444,
      14.,
      14.2222222222,
      14.4444444444,
      14.6666666667,
      20.3333333333,
      20.6666666667,
      21.,
      21.3333333333,
      42.,
      42.6666666667,
      43.3333333333,
      44.,
      65.,
      66.,
      67.,
      68.,
      44.6666666667,
      45.3333333333,
      46.,
      46.6666666667,
      23.,
      23.3333333333,
      23.6666666667,
      24.,
      24.3333333333,
      24.6666666667,
      25.,
      25.3333333333,
      50.,
      50.6666666667,
      51.3333333333,
      52.,
      77.,
      78.,
      79.,
      80.,
      52.6666666667,
      53.3333333333,
      54.,
      54.6666666667,
      27.,
      27.3333333333,
      27.6666666667,
      28.,
      17.5555555556,
      17.7777777778,
      18.,
      18.2222222222,
      36.,
      36.4444444444,
      36.8888888889,
      37.3333333333,
      55.3333333333,
      56.,
      56.6666666667,
      57.3333333333,
      37.7777777778,
      38.2222222222,
      38.6666666667,
      39.1111111111,
      19.3333333333,
      19.5555555556,
      19.7777777778,
      20.,
      9.4444444444,
      9.5555555556,
      9.6666666667,
      9.7777777778,
      19.3333333333,
      19.5555555556,
      19.7777777778,
      20.,
      29.6666666667,
      30.,
      30.3333333333,
      30.6666666667,
      20.2222222222,
      20.4444444444,
      20.6666666667,
      20.8888888889,
      10.3333333333,
      10.4444444444,
      10.5555555556,
      10.6666666667,
      10.7777777778,
      10.8888888889,
      11.,
      11.1111111111,
      22.,
      22.2222222222,
      22.4444444444,
      22.6666666667,
      33.6666666667,
      34.,
      34.3333333333,
      34.6666666667,
      22.8888888889,
      23.1111111111,
      23.3333333333,
      23.5555555556,
      11.6666666667,
      11.7777777778,
      11.8888888889,
      12.,
      22.8888888889,
      23.1111111111,
      23.3333333333,
      23.5555555556,
      46.6666666667,
      47.1111111111,
      47.5555555556,
      48.,
      71.3333333333,
      72.,
      72.6666666667,
      73.3333333333,
      48.4444444444,
      48.8888888889,
      49.3333333333,
      49.7777777778,
      24.6666666667,
      24.8888888889,
      25.1111111111,
      25.3333333333,
      36.3333333333,
      36.6666666667,
      37.,
      37.3333333333,
      74.,
      74.6666666667,
      75.3333333333,
      76.,
      113.,
      114.,
      115.,
      116.,
      76.6666666667,
      77.3333333333,
      78.,
      78.6666666667,
      39.,
      39.3333333333,
      39.6666666667,
      40.,
      40.3333333333,
      40.6666666667,
      41.,
      41.3333333333,
      82.,
      82.6666666667,
      83.3333333333,
      84.,
      125.,
      126.,
      127.,
      128.,
      84.6666666667,
      85.3333333333,
      86.,
      86.6666666667,
      43.,
      43.3333333333,
      43.6666666667,
      44.,
      28.2222222222,
      28.4444444444,
      28.6666666667,
      28.8888888889,
      57.3333333333,
      57.7777777778,
      58.2222222222,
      58.6666666667,
      87.3333333333,
      88.,
      88.6666666667,
      89.3333333333,
      59.1111111111,
      59.5555555556,
      60.,
      60.4444444444,
      30.,
      30.2222222222,
      30.4444444444,
      30.6666666667,
      14.7777777778,
      14.8888888889,
      15.,
      15.1111111111,
      30.,
      30.2222222222,
      30.4444444444,
      30.6666666667,
      45.6666666667,
      46.,
      46.3333333333,
      46.6666666667,
      30.8888888889,
      31.1111111111,
      31.3333333333,
      31.5555555556,
      15.6666666667,
      15.7777777778,
      15.8888888889,
      16.,
  };
  const std::array<int, 4> in_shape = {{3, 6, 5, 4}};
  const auto padding = PaddingMode::VALID;
  const auto params = getPoolingParams<3, 1>(in_shape, padding);
  const DataType max_input_val = 2048.0;
  this->test_pool(exp_out, params, max_input_val);
}
TYPED_TEST(AvgWindow3Stride1Grad, SAME3x6x6x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {2.6388888889,
                                         4.1388888889,
                                         4.5,
                                         5.3333333333,
                                         7.3333333333,
                                         5.5555555556,
                                         6.3611111111,
                                         9.5277777778,
                                         9.5,
                                         10.6666666667,
                                         14.,
                                         10.4444444444,
                                         11.1666666667,
                                         16.1666666667,
                                         15.,
                                         16.,
                                         20.,
                                         14.6666666667,
                                         16.1666666667,
                                         23.1666666667,
                                         21.,
                                         22.,
                                         27.,
                                         19.6666666667,
                                         25.5277777778,
                                         36.3611111111,
                                         32.5,
                                         33.6666666667,
                                         40.8333333333,
                                         29.6111111111,
                                         20.1388888889,
                                         28.6388888889,
                                         25.5,
                                         26.3333333333,
                                         31.8333333333,
                                         23.0555555556,
                                         27.6388888889,
                                         39.1388888889,
                                         34.5,
                                         35.3333333333,
                                         42.3333333333,
                                         30.5555555556,
                                         41.3611111111,
                                         58.5277777778,
                                         51.5,
                                         52.6666666667,
                                         63.,
                                         45.4444444444,
                                         41.1666666667,
                                         58.1666666667,
                                         51.,
                                         52.,
                                         62.,
                                         44.6666666667,
                                         46.1666666667,
                                         65.1666666667,
                                         57.,
                                         58.,
                                         69.,
                                         49.6666666667,
                                         60.5277777778,
                                         85.3611111111,
                                         74.5,
                                         75.6666666667,
                                         89.8333333333,
                                         64.6111111111,
                                         45.1388888889,
                                         63.6388888889,
                                         55.5,
                                         56.3333333333,
                                         66.8333333333,
                                         48.0555555556,
                                         52.6388888889,
                                         74.1388888889,
                                         64.5,
                                         65.3333333333,
                                         77.3333333333,
                                         55.5555555556,
                                         76.3611111111,
                                         107.5277777778,
                                         93.5,
                                         94.6666666667,
                                         112.,
                                         80.4444444444,
                                         71.1666666667,
                                         100.1666666667,
                                         87.,
                                         88.,
                                         104.,
                                         74.6666666667,
                                         76.1666666667,
                                         107.1666666667,
                                         93.,
                                         94.,
                                         111.,
                                         79.6666666667,
                                         95.5277777778,
                                         134.3611111111,
                                         116.5,
                                         117.6666666667,
                                         138.8333333333,
                                         99.6111111111,
                                         70.1388888889,
                                         98.6388888889,
                                         85.5,
                                         86.3333333333,
                                         101.8333333333,
                                         73.0555555556};
  const std::array<int, 4> in_shape = {{3, 6, 6, 1}};
  const auto padding = PaddingMode::SAME;
  const auto params = getPoolingParams<3, 1>(in_shape, padding);
  const DataType max_input_val = 2048.0;
  this->test_pool(exp_out, params, max_input_val);
}
TYPED_TEST(AvgWindow3Stride1Grad, VALID3x6x6x1) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {0.1111111111,
                                         0.3333333333,
                                         0.6666666667,
                                         1.,
                                         0.7777777778,
                                         0.4444444444,
                                         0.6666666667,
                                         1.5555555556,
                                         2.6666666667,
                                         3.3333333333,
                                         2.4444444444,
                                         1.3333333333,
                                         1.6666666667,
                                         3.6666666667,
                                         6.,
                                         7.,
                                         5.,
                                         2.6666666667,
                                         3.,
                                         6.3333333333,
                                         10.,
                                         11.,
                                         7.6666666667,
                                         4.,
                                         2.4444444444,
                                         5.1111111111,
                                         8.,
                                         8.6666666667,
                                         6.,
                                         3.1111111111,
                                         1.4444444444,
                                         3.,
                                         4.6666666667,
                                         5.,
                                         3.4444444444,
                                         1.7777777778,
                                         1.8888888889,
                                         3.8888888889,
                                         6.,
                                         6.3333333333,
                                         4.3333333333,
                                         2.2222222222,
                                         4.2222222222,
                                         8.6666666667,
                                         13.3333333333,
                                         14.,
                                         9.5555555556,
                                         4.8888888889,
                                         7.,
                                         14.3333333333,
                                         22.,
                                         23.,
                                         15.6666666667,
                                         8.,
                                         8.3333333333,
                                         17.,
                                         26.,
                                         27.,
                                         18.3333333333,
                                         9.3333333333,
                                         6.,
                                         12.2222222222,
                                         18.6666666667,
                                         19.3333333333,
                                         13.1111111111,
                                         6.6666666667,
                                         3.2222222222,
                                         6.5555555556,
                                         10.,
                                         10.3333333333,
                                         7.,
                                         3.5555555556,
                                         3.6666666667,
                                         7.4444444444,
                                         11.3333333333,
                                         11.6666666667,
                                         7.8888888889,
                                         4.,
                                         7.7777777778,
                                         15.7777777778,
                                         24.,
                                         24.6666666667,
                                         16.6666666667,
                                         8.4444444444,
                                         12.3333333333,
                                         25.,
                                         38.,
                                         39.,
                                         26.3333333333,
                                         13.3333333333,
                                         13.6666666667,
                                         27.6666666667,
                                         42.,
                                         43.,
                                         29.,
                                         14.6666666667,
                                         9.5555555556,
                                         19.3333333333,
                                         29.3333333333,
                                         30.,
                                         20.2222222222,
                                         10.2222222222,
                                         5.,
                                         10.1111111111,
                                         15.3333333333,
                                         15.6666666667,
                                         10.5555555556,
                                         5.3333333333};
  const std::array<int, 4> in_shape = {{3, 6, 6, 1}};
  const auto padding = PaddingMode::VALID;
  const auto params = getPoolingParams<3, 1>(in_shape, padding);
  const DataType max_input_val = 2048.0;
  this->test_pool(exp_out, params, max_input_val);
}
TYPED_TEST(AvgWindow3Stride1Grad, SAME3x6x6x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {4.5833333333,
                                         5.2777777778,
                                         7.3055555556,
                                         8.2777777778,
                                         8.1666666667,
                                         9.,
                                         9.8333333333,
                                         10.6666666667,
                                         13.6944444444,
                                         14.6666666667,
                                         10.4166666667,
                                         11.1111111111,
                                         11.75,
                                         12.7222222222,
                                         17.6944444444,
                                         19.0555555556,
                                         17.8333333333,
                                         19.,
                                         20.1666666667,
                                         21.3333333333,
                                         26.6388888889,
                                         28.,
                                         19.9166666667,
                                         20.8888888889,
                                         21.5,
                                         22.3333333333,
                                         31.1666666667,
                                         32.3333333333,
                                         29.,
                                         30.,
                                         31.,
                                         32.,
                                         38.8333333333,
                                         40.,
                                         28.5,
                                         29.3333333333,
                                         31.5,
                                         32.3333333333,
                                         45.1666666667,
                                         46.3333333333,
                                         41.,
                                         42.,
                                         43.,
                                         44.,
                                         52.8333333333,
                                         54.,
                                         38.5,
                                         39.3333333333,
                                         50.0833333333,
                                         51.0555555556,
                                         71.3611111111,
                                         72.7222222222,
                                         63.8333333333,
                                         65.,
                                         66.1666666667,
                                         67.3333333333,
                                         80.3055555556,
                                         81.6666666667,
                                         58.25,
                                         59.2222222222,
                                         39.5833333333,
                                         40.2777777778,
                                         56.3055555556,
                                         57.2777777778,
                                         50.1666666667,
                                         51.,
                                         51.8333333333,
                                         52.6666666667,
                                         62.6944444444,
                                         63.6666666667,
                                         45.4166666667,
                                         46.1111111111,
                                         54.5833333333,
                                         55.2777777778,
                                         77.3055555556,
                                         78.2777777778,
                                         68.1666666667,
                                         69.,
                                         69.8333333333,
                                         70.6666666667,
                                         83.6944444444,
                                         84.6666666667,
                                         60.4166666667,
                                         61.1111111111,
                                         81.75,
                                         82.7222222222,
                                         115.6944444444,
                                         117.0555555556,
                                         101.8333333333,
                                         103.,
                                         104.1666666667,
                                         105.3333333333,
                                         124.6388888889,
                                         126.,
                                         89.9166666667,
                                         90.8888888889,
                                         81.5,
                                         82.3333333333,
                                         115.1666666667,
                                         116.3333333333,
                                         101.,
                                         102.,
                                         103.,
                                         104.,
                                         122.8333333333,
                                         124.,
                                         88.5,
                                         89.3333333333,
                                         91.5,
                                         92.3333333333,
                                         129.1666666667,
                                         130.3333333333,
                                         113.,
                                         114.,
                                         115.,
                                         116.,
                                         136.8333333333,
                                         138.,
                                         98.5,
                                         99.3333333333,
                                         120.0833333333,
                                         121.0555555556,
                                         169.3611111111,
                                         170.7222222222,
                                         147.8333333333,
                                         149.,
                                         150.1666666667,
                                         151.3333333333,
                                         178.3055555556,
                                         179.6666666667,
                                         128.25,
                                         129.2222222222,
                                         89.5833333333,
                                         90.2777777778,
                                         126.3055555556,
                                         127.2777777778,
                                         110.1666666667,
                                         111.,
                                         111.8333333333,
                                         112.6666666667,
                                         132.6944444444,
                                         133.6666666667,
                                         95.4166666667,
                                         96.1111111111,
                                         104.5833333333,
                                         105.2777777778,
                                         147.3055555556,
                                         148.2777777778,
                                         128.1666666667,
                                         129.,
                                         129.8333333333,
                                         130.6666666667,
                                         153.6944444444,
                                         154.6666666667,
                                         110.4166666667,
                                         111.1111111111,
                                         151.75,
                                         152.7222222222,
                                         213.6944444444,
                                         215.0555555556,
                                         185.8333333333,
                                         187.,
                                         188.1666666667,
                                         189.3333333333,
                                         222.6388888889,
                                         224.,
                                         159.9166666667,
                                         160.8888888889,
                                         141.5,
                                         142.3333333333,
                                         199.1666666667,
                                         200.3333333333,
                                         173.,
                                         174.,
                                         175.,
                                         176.,
                                         206.8333333333,
                                         208.,
                                         148.5,
                                         149.3333333333,
                                         151.5,
                                         152.3333333333,
                                         213.1666666667,
                                         214.3333333333,
                                         185.,
                                         186.,
                                         187.,
                                         188.,
                                         220.8333333333,
                                         222.,
                                         158.5,
                                         159.3333333333,
                                         190.0833333333,
                                         191.0555555556,
                                         267.3611111111,
                                         268.7222222222,
                                         231.8333333333,
                                         233.,
                                         234.1666666667,
                                         235.3333333333,
                                         276.3055555556,
                                         277.6666666667,
                                         198.25,
                                         199.2222222222,
                                         139.5833333333,
                                         140.2777777778,
                                         196.3055555556,
                                         197.2777777778,
                                         170.1666666667,
                                         171.,
                                         171.8333333333,
                                         172.6666666667,
                                         202.6944444444,
                                         203.6666666667,
                                         145.4166666667,
                                         146.1111111111};
  const std::array<int, 4> in_shape = {{3, 6, 6, 2}};
  const auto padding = PaddingMode::SAME;
  const auto params = getPoolingParams<3, 1>(in_shape, padding);
  const DataType max_input_val = 2048.0;
  this->test_pool(exp_out, params, max_input_val);
}
TYPED_TEST(AvgWindow3Stride1Grad, VALID3x6x6x2) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {0.1111111111,
                                         0.2222222222,
                                         0.4444444444,
                                         0.6666666667,
                                         1.,
                                         1.3333333333,
                                         1.6666666667,
                                         2.,
                                         1.3333333333,
                                         1.5555555556,
                                         0.7777777778,
                                         0.8888888889,
                                         1.1111111111,
                                         1.3333333333,
                                         2.6666666667,
                                         3.1111111111,
                                         4.6666666667,
                                         5.3333333333,
                                         6.,
                                         6.6666666667,
                                         4.4444444444,
                                         4.8888888889,
                                         2.4444444444,
                                         2.6666666667,
                                         3.,
                                         3.3333333333,
                                         6.6666666667,
                                         7.3333333333,
                                         11.,
                                         12.,
                                         13.,
                                         14.,
                                         9.3333333333,
                                         10.,
                                         5.,
                                         5.3333333333,
                                         5.6666666667,
                                         6.,
                                         12.,
                                         12.6666666667,
                                         19.,
                                         20.,
                                         21.,
                                         22.,
                                         14.6666666667,
                                         15.3333333333,
                                         7.6666666667,
                                         8.,
                                         4.6666666667,
                                         4.8888888889,
                                         9.7777777778,
                                         10.2222222222,
                                         15.3333333333,
                                         16.,
                                         16.6666666667,
                                         17.3333333333,
                                         11.5555555556,
                                         12.,
                                         6.,
                                         6.2222222222,
                                         2.7777777778,
                                         2.8888888889,
                                         5.7777777778,
                                         6.,
                                         9.,
                                         9.3333333333,
                                         9.6666666667,
                                         10.,
                                         6.6666666667,
                                         6.8888888889,
                                         3.4444444444,
                                         3.5555555556,
                                         3.6666666667,
                                         3.7777777778,
                                         7.5555555556,
                                         7.7777777778,
                                         11.6666666667,
                                         12.,
                                         12.3333333333,
                                         12.6666666667,
                                         8.4444444444,
                                         8.6666666667,
                                         4.3333333333,
                                         4.4444444444,
                                         8.2222222222,
                                         8.4444444444,
                                         16.8888888889,
                                         17.3333333333,
                                         26.,
                                         26.6666666667,
                                         27.3333333333,
                                         28.,
                                         18.6666666667,
                                         19.1111111111,
                                         9.5555555556,
                                         9.7777777778,
                                         13.6666666667,
                                         14.,
                                         28.,
                                         28.6666666667,
                                         43.,
                                         44.,
                                         45.,
                                         46.,
                                         30.6666666667,
                                         31.3333333333,
                                         15.6666666667,
                                         16.,
                                         16.3333333333,
                                         16.6666666667,
                                         33.3333333333,
                                         34.,
                                         51.,
                                         52.,
                                         53.,
                                         54.,
                                         36.,
                                         36.6666666667,
                                         18.3333333333,
                                         18.6666666667,
                                         11.7777777778,
                                         12.,
                                         24.,
                                         24.4444444444,
                                         36.6666666667,
                                         37.3333333333,
                                         38.,
                                         38.6666666667,
                                         25.7777777778,
                                         26.2222222222,
                                         13.1111111111,
                                         13.3333333333,
                                         6.3333333333,
                                         6.4444444444,
                                         12.8888888889,
                                         13.1111111111,
                                         19.6666666667,
                                         20.,
                                         20.3333333333,
                                         20.6666666667,
                                         13.7777777778,
                                         14.,
                                         7.,
                                         7.1111111111,
                                         7.2222222222,
                                         7.3333333333,
                                         14.6666666667,
                                         14.8888888889,
                                         22.3333333333,
                                         22.6666666667,
                                         23.,
                                         23.3333333333,
                                         15.5555555556,
                                         15.7777777778,
                                         7.8888888889,
                                         8.,
                                         15.3333333333,
                                         15.5555555556,
                                         31.1111111111,
                                         31.5555555556,
                                         47.3333333333,
                                         48.,
                                         48.6666666667,
                                         49.3333333333,
                                         32.8888888889,
                                         33.3333333333,
                                         16.6666666667,
                                         16.8888888889,
                                         24.3333333333,
                                         24.6666666667,
                                         49.3333333333,
                                         50.,
                                         75.,
                                         76.,
                                         77.,
                                         78.,
                                         52.,
                                         52.6666666667,
                                         26.3333333333,
                                         26.6666666667,
                                         27.,
                                         27.3333333333,
                                         54.6666666667,
                                         55.3333333333,
                                         83.,
                                         84.,
                                         85.,
                                         86.,
                                         57.3333333333,
                                         58.,
                                         29.,
                                         29.3333333333,
                                         18.8888888889,
                                         19.1111111111,
                                         38.2222222222,
                                         38.6666666667,
                                         58.,
                                         58.6666666667,
                                         59.3333333333,
                                         60.,
                                         40.,
                                         40.4444444444,
                                         20.2222222222,
                                         20.4444444444,
                                         9.8888888889,
                                         10.,
                                         20.,
                                         20.2222222222,
                                         30.3333333333,
                                         30.6666666667,
                                         31.,
                                         31.3333333333,
                                         20.8888888889,
                                         21.1111111111,
                                         10.5555555556,
                                         10.6666666667};
  const std::array<int, 4> in_shape = {{3, 6, 6, 2}};
  const auto padding = PaddingMode::VALID;
  const auto params = getPoolingParams<3, 1>(in_shape, padding);
  const DataType max_input_val = 2048.0;
  this->test_pool(exp_out, params, max_input_val);
}
TYPED_TEST(AvgWindow3Stride1Grad, SAME3x6x6x4) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {8.4722222222,
                                         9.1666666667,
                                         9.8611111111,
                                         10.5555555556,
                                         13.6388888889,
                                         14.6111111111,
                                         15.5833333333,
                                         16.5555555556,
                                         15.5,
                                         16.3333333333,
                                         17.1666666667,
                                         18.,
                                         18.8333333333,
                                         19.6666666667,
                                         20.5,
                                         21.3333333333,
                                         26.4166666667,
                                         27.3888888889,
                                         28.3611111111,
                                         29.3333333333,
                                         20.1388888889,
                                         20.8333333333,
                                         21.5277777778,
                                         22.2222222222,
                                         22.5277777778,
                                         23.5,
                                         24.4722222222,
                                         25.4444444444,
                                         34.0277777778,
                                         35.3888888889,
                                         36.75,
                                         38.1111111111,
                                         34.5,
                                         35.6666666667,
                                         36.8333333333,
                                         38.,
                                         39.1666666667,
                                         40.3333333333,
                                         41.5,
                                         42.6666666667,
                                         51.9166666667,
                                         53.2777777778,
                                         54.6388888889,
                                         56.,
                                         38.8611111111,
                                         39.8333333333,
                                         40.8055555556,
                                         41.7777777778,
                                         42.1666666667,
                                         43.,
                                         43.8333333333,
                                         44.6666666667,
                                         61.1666666667,
                                         62.3333333333,
                                         63.5,
                                         64.6666666667,
                                         57.,
                                         58.,
                                         59.,
                                         60.,
                                         61.,
                                         62.,
                                         63.,
                                         64.,
                                         76.5,
                                         77.6666666667,
                                         78.8333333333,
                                         80.,
                                         56.1666666667,
                                         57.,
                                         57.8333333333,
                                         58.6666666667,
                                         62.1666666667,
                                         63.,
                                         63.8333333333,
                                         64.6666666667,
                                         89.1666666667,
                                         90.3333333333,
                                         91.5,
                                         92.6666666667,
                                         81.,
                                         82.,
                                         83.,
                                         84.,
                                         85.,
                                         86.,
                                         87.,
                                         88.,
                                         104.5,
                                         105.6666666667,
                                         106.8333333333,
                                         108.,
                                         76.1666666667,
                                         77.,
                                         77.8333333333,
                                         78.6666666667,
                                         99.1944444444,
                                         100.1666666667,
                                         101.1388888889,
                                         102.1111111111,
                                         141.3611111111,
                                         142.7222222222,
                                         144.0833333333,
                                         145.4444444444,
                                         126.5,
                                         127.6666666667,
                                         128.8333333333,
                                         130.,
                                         131.1666666667,
                                         132.3333333333,
                                         133.5,
                                         134.6666666667,
                                         159.25,
                                         160.6111111111,
                                         161.9722222222,
                                         163.3333333333,
                                         115.5277777778,
                                         116.5,
                                         117.4722222222,
                                         118.4444444444,
                                         78.4722222222,
                                         79.1666666667,
                                         79.8611111111,
                                         80.5555555556,
                                         111.6388888889,
                                         112.6111111111,
                                         113.5833333333,
                                         114.5555555556,
                                         99.5,
                                         100.3333333333,
                                         101.1666666667,
                                         102.,
                                         102.8333333333,
                                         103.6666666667,
                                         104.5,
                                         105.3333333333,
                                         124.4166666667,
                                         125.3888888889,
                                         126.3611111111,
                                         127.3333333333,
                                         90.1388888889,
                                         90.8333333333,
                                         91.5277777778,
                                         92.2222222222,
                                         108.4722222222,
                                         109.1666666667,
                                         109.8611111111,
                                         110.5555555556,
                                         153.6388888889,
                                         154.6111111111,
                                         155.5833333333,
                                         156.5555555556,
                                         135.5,
                                         136.3333333333,
                                         137.1666666667,
                                         138.,
                                         138.8333333333,
                                         139.6666666667,
                                         140.5,
                                         141.3333333333,
                                         166.4166666667,
                                         167.3888888889,
                                         168.3611111111,
                                         169.3333333333,
                                         120.1388888889,
                                         120.8333333333,
                                         121.5277777778,
                                         122.2222222222,
                                         162.5277777778,
                                         163.5,
                                         164.4722222222,
                                         165.4444444444,
                                         230.0277777778,
                                         231.3888888889,
                                         232.75,
                                         234.1111111111,
                                         202.5,
                                         203.6666666667,
                                         204.8333333333,
                                         206.,
                                         207.1666666667,
                                         208.3333333333,
                                         209.5,
                                         210.6666666667,
                                         247.9166666667,
                                         249.2777777778,
                                         250.6388888889,
                                         252.,
                                         178.8611111111,
                                         179.8333333333,
                                         180.8055555556,
                                         181.7777777778,
                                         162.1666666667,
                                         163.,
                                         163.8333333333,
                                         164.6666666667,
                                         229.1666666667,
                                         230.3333333333,
                                         231.5,
                                         232.6666666667,
                                         201.,
                                         202.,
                                         203.,
                                         204.,
                                         205.,
                                         206.,
                                         207.,
                                         208.,
                                         244.5,
                                         245.6666666667,
                                         246.8333333333,
                                         248.,
                                         176.1666666667,
                                         177.,
                                         177.8333333333,
                                         178.6666666667,
                                         182.1666666667,
                                         183.,
                                         183.8333333333,
                                         184.6666666667,
                                         257.1666666667,
                                         258.3333333333,
                                         259.5,
                                         260.6666666667,
                                         225.,
                                         226.,
                                         227.,
                                         228.,
                                         229.,
                                         230.,
                                         231.,
                                         232.,
                                         272.5,
                                         273.6666666667,
                                         274.8333333333,
                                         276.,
                                         196.1666666667,
                                         197.,
                                         197.8333333333,
                                         198.6666666667,
                                         239.1944444444,
                                         240.1666666667,
                                         241.1388888889,
                                         242.1111111111,
                                         337.3611111111,
                                         338.7222222222,
                                         340.0833333333,
                                         341.4444444444,
                                         294.5,
                                         295.6666666667,
                                         296.8333333333,
                                         298.,
                                         299.1666666667,
                                         300.3333333333,
                                         301.5,
                                         302.6666666667,
                                         355.25,
                                         356.6111111111,
                                         357.9722222222,
                                         359.3333333333,
                                         255.5277777778,
                                         256.5,
                                         257.4722222222,
                                         258.4444444444,
                                         178.4722222222,
                                         179.1666666667,
                                         179.8611111111,
                                         180.5555555556,
                                         251.6388888889,
                                         252.6111111111,
                                         253.5833333333,
                                         254.5555555556,
                                         219.5,
                                         220.3333333333,
                                         221.1666666667,
                                         222.,
                                         222.8333333333,
                                         223.6666666667,
                                         224.5,
                                         225.3333333333,
                                         264.4166666667,
                                         265.3888888889,
                                         266.3611111111,
                                         267.3333333333,
                                         190.1388888889,
                                         190.8333333333,
                                         191.5277777778,
                                         192.2222222222,
                                         208.4722222222,
                                         209.1666666667,
                                         209.8611111111,
                                         210.5555555556,
                                         293.6388888889,
                                         294.6111111111,
                                         295.5833333333,
                                         296.5555555556,
                                         255.5,
                                         256.3333333333,
                                         257.1666666667,
                                         258.,
                                         258.8333333333,
                                         259.6666666667,
                                         260.5,
                                         261.3333333333,
                                         306.4166666667,
                                         307.3888888889,
                                         308.3611111111,
                                         309.3333333333,
                                         220.1388888889,
                                         220.8333333333,
                                         221.5277777778,
                                         222.2222222222,
                                         302.5277777778,
                                         303.5,
                                         304.4722222222,
                                         305.4444444444,
                                         426.0277777778,
                                         427.3888888889,
                                         428.75,
                                         430.1111111111,
                                         370.5,
                                         371.6666666667,
                                         372.8333333333,
                                         374.,
                                         375.1666666667,
                                         376.3333333333,
                                         377.5,
                                         378.6666666667,
                                         443.9166666667,
                                         445.2777777778,
                                         446.6388888889,
                                         448.,
                                         318.8611111111,
                                         319.8333333333,
                                         320.8055555556,
                                         321.7777777778,
                                         282.1666666667,
                                         283.,
                                         283.8333333333,
                                         284.6666666667,
                                         397.1666666667,
                                         398.3333333333,
                                         399.5,
                                         400.6666666667,
                                         345.,
                                         346.,
                                         347.,
                                         348.,
                                         349.,
                                         350.,
                                         351.,
                                         352.,
                                         412.5,
                                         413.6666666667,
                                         414.8333333333,
                                         416.,
                                         296.1666666667,
                                         297.,
                                         297.8333333333,
                                         298.6666666667,
                                         302.1666666667,
                                         303.,
                                         303.8333333333,
                                         304.6666666667,
                                         425.1666666667,
                                         426.3333333333,
                                         427.5,
                                         428.6666666667,
                                         369.,
                                         370.,
                                         371.,
                                         372.,
                                         373.,
                                         374.,
                                         375.,
                                         376.,
                                         440.5,
                                         441.6666666667,
                                         442.8333333333,
                                         444.,
                                         316.1666666667,
                                         317.,
                                         317.8333333333,
                                         318.6666666667,
                                         379.1944444444,
                                         380.1666666667,
                                         381.1388888889,
                                         382.1111111111,
                                         533.3611111111,
                                         534.7222222222,
                                         536.0833333333,
                                         537.4444444444,
                                         462.5,
                                         463.6666666667,
                                         464.8333333333,
                                         466.,
                                         467.1666666667,
                                         468.3333333333,
                                         469.5,
                                         470.6666666667,
                                         551.25,
                                         552.6111111111,
                                         553.9722222222,
                                         555.3333333333,
                                         395.5277777778,
                                         396.5,
                                         397.4722222222,
                                         398.4444444444,
                                         278.4722222222,
                                         279.1666666667,
                                         279.8611111111,
                                         280.5555555556,
                                         391.6388888889,
                                         392.6111111111,
                                         393.5833333333,
                                         394.5555555556,
                                         339.5,
                                         340.3333333333,
                                         341.1666666667,
                                         342.,
                                         342.8333333333,
                                         343.6666666667,
                                         344.5,
                                         345.3333333333,
                                         404.4166666667,
                                         405.3888888889,
                                         406.3611111111,
                                         407.3333333333,
                                         290.1388888889,
                                         290.8333333333,
                                         291.5277777778,
                                         292.2222222222};
  const std::array<int, 4> in_shape = {{3, 6, 6, 4}};
  const auto padding = PaddingMode::SAME;
  const auto params = getPoolingParams<3, 1>(in_shape, padding);
  const DataType max_input_val = 2048.0;
  this->test_pool(exp_out, params, max_input_val);
}
TYPED_TEST(AvgWindow3Stride1Grad, VALID3x6x6x4) {
  using DataType = typename TestFixture::DataType;
  const std::vector<DataType> exp_out = {0.1111111111,
                                         0.2222222222,
                                         0.3333333333,
                                         0.4444444444,
                                         0.6666666667,
                                         0.8888888889,
                                         1.1111111111,
                                         1.3333333333,
                                         1.6666666667,
                                         2.,
                                         2.3333333333,
                                         2.6666666667,
                                         3.,
                                         3.3333333333,
                                         3.6666666667,
                                         4.,
                                         2.4444444444,
                                         2.6666666667,
                                         2.8888888889,
                                         3.1111111111,
                                         1.4444444444,
                                         1.5555555556,
                                         1.6666666667,
                                         1.7777777778,
                                         2.,
                                         2.2222222222,
                                         2.4444444444,
                                         2.6666666667,
                                         4.8888888889,
                                         5.3333333333,
                                         5.7777777778,
                                         6.2222222222,
                                         8.6666666667,
                                         9.3333333333,
                                         10.,
                                         10.6666666667,
                                         11.3333333333,
                                         12.,
                                         12.6666666667,
                                         13.3333333333,
                                         8.4444444444,
                                         8.8888888889,
                                         9.3333333333,
                                         9.7777777778,
                                         4.6666666667,
                                         4.8888888889,
                                         5.1111111111,
                                         5.3333333333,
                                         5.6666666667,
                                         6.,
                                         6.3333333333,
                                         6.6666666667,
                                         12.6666666667,
                                         13.3333333333,
                                         14.,
                                         14.6666666667,
                                         21.,
                                         22.,
                                         23.,
                                         24.,
                                         25.,
                                         26.,
                                         27.,
                                         28.,
                                         18.,
                                         18.6666666667,
                                         19.3333333333,
                                         20.,
                                         9.6666666667,
                                         10.,
                                         10.3333333333,
                                         10.6666666667,
                                         11.,
                                         11.3333333333,
                                         11.6666666667,
                                         12.,
                                         23.3333333333,
                                         24.,
                                         24.6666666667,
                                         25.3333333333,
                                         37.,
                                         38.,
                                         39.,
                                         40.,
                                         41.,
                                         42.,
                                         43.,
                                         44.,
                                         28.6666666667,
                                         29.3333333333,
                                         30.,
                                         30.6666666667,
                                         15.,
                                         15.3333333333,
                                         15.6666666667,
                                         16.,
                                         9.1111111111,
                                         9.3333333333,
                                         9.5555555556,
                                         9.7777777778,
                                         19.1111111111,
                                         19.5555555556,
                                         20.,
                                         20.4444444444,
                                         30.,
                                         30.6666666667,
                                         31.3333333333,
                                         32.,
                                         32.6666666667,
                                         33.3333333333,
                                         34.,
                                         34.6666666667,
                                         22.6666666667,
                                         23.1111111111,
                                         23.5555555556,
                                         24.,
                                         11.7777777778,
                                         12.,
                                         12.2222222222,
                                         12.4444444444,
                                         5.4444444444,
                                         5.5555555556,
                                         5.6666666667,
                                         5.7777777778,
                                         11.3333333333,
                                         11.5555555556,
                                         11.7777777778,
                                         12.,
                                         17.6666666667,
                                         18.,
                                         18.3333333333,
                                         18.6666666667,
                                         19.,
                                         19.3333333333,
                                         19.6666666667,
                                         20.,
                                         13.1111111111,
                                         13.3333333333,
                                         13.5555555556,
                                         13.7777777778,
                                         6.7777777778,
                                         6.8888888889,
                                         7.,
                                         7.1111111111,
                                         7.2222222222,
                                         7.3333333333,
                                         7.4444444444,
                                         7.5555555556,
                                         14.8888888889,
                                         15.1111111111,
                                         15.3333333333,
                                         15.5555555556,
                                         23.,
                                         23.3333333333,
                                         23.6666666667,
                                         24.,
                                         24.3333333333,
                                         24.6666666667,
                                         25.,
                                         25.3333333333,
                                         16.6666666667,
                                         16.8888888889,
                                         17.1111111111,
                                         17.3333333333,
                                         8.5555555556,
                                         8.6666666667,
                                         8.7777777778,
                                         8.8888888889,
                                         16.2222222222,
                                         16.4444444444,
                                         16.6666666667,
                                         16.8888888889,
                                         33.3333333333,
                                         33.7777777778,
                                         34.2222222222,
                                         34.6666666667,
                                         51.3333333333,
                                         52.,
                                         52.6666666667,
                                         53.3333333333,
                                         54.,
                                         54.6666666667,
                                         55.3333333333,
                                         56.,
                                         36.8888888889,
                                         37.3333333333,
                                         37.7777777778,
                                         38.2222222222,
                                         18.8888888889,
                                         19.1111111111,
                                         19.3333333333,
                                         19.5555555556,
                                         27.,
                                         27.3333333333,
                                         27.6666666667,
                                         28.,
                                         55.3333333333,
                                         56.,
                                         56.6666666667,
                                         57.3333333333,
                                         85.,
                                         86.,
                                         87.,
                                         88.,
                                         89.,
                                         90.,
                                         91.,
                                         92.,
                                         60.6666666667,
                                         61.3333333333,
                                         62.,
                                         62.6666666667,
                                         31.,
                                         31.3333333333,
                                         31.6666666667,
                                         32.,
                                         32.3333333333,
                                         32.6666666667,
                                         33.,
                                         33.3333333333,
                                         66.,
                                         66.6666666667,
                                         67.3333333333,
                                         68.,
                                         101.,
                                         102.,
                                         103.,
                                         104.,
                                         105.,
                                         106.,
                                         107.,
                                         108.,
                                         71.3333333333,
                                         72.,
                                         72.6666666667,
                                         73.3333333333,
                                         36.3333333333,
                                         36.6666666667,
                                         37.,
                                         37.3333333333,
                                         23.3333333333,
                                         23.5555555556,
                                         23.7777777778,
                                         24.,
                                         47.5555555556,
                                         48.,
                                         48.4444444444,
                                         48.8888888889,
                                         72.6666666667,
                                         73.3333333333,
                                         74.,
                                         74.6666666667,
                                         75.3333333333,
                                         76.,
                                         76.6666666667,
                                         77.3333333333,
                                         51.1111111111,
                                         51.5555555556,
                                         52.,
                                         52.4444444444,
                                         26.,
                                         26.2222222222,
                                         26.4444444444,
                                         26.6666666667,
                                         12.5555555556,
                                         12.6666666667,
                                         12.7777777778,
                                         12.8888888889,
                                         25.5555555556,
                                         25.7777777778,
                                         26.,
                                         26.2222222222,
                                         39.,
                                         39.3333333333,
                                         39.6666666667,
                                         40.,
                                         40.3333333333,
                                         40.6666666667,
                                         41.,
                                         41.3333333333,
                                         27.3333333333,
                                         27.5555555556,
                                         27.7777777778,
                                         28.,
                                         13.8888888889,
                                         14.,
                                         14.1111111111,
                                         14.2222222222,
                                         14.3333333333,
                                         14.4444444444,
                                         14.5555555556,
                                         14.6666666667,
                                         29.1111111111,
                                         29.3333333333,
                                         29.5555555556,
                                         29.7777777778,
                                         44.3333333333,
                                         44.6666666667,
                                         45.,
                                         45.3333333333,
                                         45.6666666667,
                                         46.,
                                         46.3333333333,
                                         46.6666666667,
                                         30.8888888889,
                                         31.1111111111,
                                         31.3333333333,
                                         31.5555555556,
                                         15.6666666667,
                                         15.7777777778,
                                         15.8888888889,
                                         16.,
                                         30.4444444444,
                                         30.6666666667,
                                         30.8888888889,
                                         31.1111111111,
                                         61.7777777778,
                                         62.2222222222,
                                         62.6666666667,
                                         63.1111111111,
                                         94.,
                                         94.6666666667,
                                         95.3333333333,
                                         96.,
                                         96.6666666667,
                                         97.3333333333,
                                         98.,
                                         98.6666666667,
                                         65.3333333333,
                                         65.7777777778,
                                         66.2222222222,
                                         66.6666666667,
                                         33.1111111111,
                                         33.3333333333,
                                         33.5555555556,
                                         33.7777777778,
                                         48.3333333333,
                                         48.6666666667,
                                         49.,
                                         49.3333333333,
                                         98.,
                                         98.6666666667,
                                         99.3333333333,
                                         100.,
                                         149.,
                                         150.,
                                         151.,
                                         152.,
                                         153.,
                                         154.,
                                         155.,
                                         156.,
                                         103.3333333333,
                                         104.,
                                         104.6666666667,
                                         105.3333333333,
                                         52.3333333333,
                                         52.6666666667,
                                         53.,
                                         53.3333333333,
                                         53.6666666667,
                                         54.,
                                         54.3333333333,
                                         54.6666666667,
                                         108.6666666667,
                                         109.3333333333,
                                         110.,
                                         110.6666666667,
                                         165.,
                                         166.,
                                         167.,
                                         168.,
                                         169.,
                                         170.,
                                         171.,
                                         172.,
                                         114.,
                                         114.6666666667,
                                         115.3333333333,
                                         116.,
                                         57.6666666667,
                                         58.,
                                         58.3333333333,
                                         58.6666666667,
                                         37.5555555556,
                                         37.7777777778,
                                         38.,
                                         38.2222222222,
                                         76.,
                                         76.4444444444,
                                         76.8888888889,
                                         77.3333333333,
                                         115.3333333333,
                                         116.,
                                         116.6666666667,
                                         117.3333333333,
                                         118.,
                                         118.6666666667,
                                         119.3333333333,
                                         120.,
                                         79.5555555556,
                                         80.,
                                         80.4444444444,
                                         80.8888888889,
                                         40.2222222222,
                                         40.4444444444,
                                         40.6666666667,
                                         40.8888888889,
                                         19.6666666667,
                                         19.7777777778,
                                         19.8888888889,
                                         20.,
                                         39.7777777778,
                                         40.,
                                         40.2222222222,
                                         40.4444444444,
                                         60.3333333333,
                                         60.6666666667,
                                         61.,
                                         61.3333333333,
                                         61.6666666667,
                                         62.,
                                         62.3333333333,
                                         62.6666666667,
                                         41.5555555556,
                                         41.7777777778,
                                         42.,
                                         42.2222222222,
                                         21.,
                                         21.1111111111,
                                         21.2222222222,
                                         21.3333333333};
  const std::array<int, 4> in_shape = {{3, 6, 6, 4}};
  const auto padding = PaddingMode::VALID;
  const auto params = getPoolingParams<3, 1>(in_shape, padding);
  const DataType max_input_val = 2048.0;
  this->test_pool(exp_out, params, max_input_val);
}
